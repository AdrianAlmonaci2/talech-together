{"version":3,"file":"SankeyChart.types.js","sourceRoot":"../src/","sources":["components/SankeyChart/SankeyChart.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ITheme, IStyle } from '@fluentui/react/lib/Styling';\nimport { IStyleFunctionOrObject } from '@fluentui/react/lib/Utilities';\nimport { IChartProps } from '../../types/IDataPoint';\n\nexport type { IChartProps, IDataPoint, ISankeyChartData } from '../../types/IDataPoint';\n\nexport interface ISankeyChartProps {\n  /**\n   * Data to render in the chart.\n   */\n  data: IChartProps;\n\n  /**\n   * Width of the chart.\n   */\n  width?: number;\n\n  /**\n   * Height of the chart.\n   */\n  height?: number;\n\n  /**\n   * Additional CSS class(es) to apply to the SankeyChart.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<ISankeyChartStyleProps, ISankeyChartStyles>;\n\n  /**\n   * this prop takes its parent as a HTML element to define the width and height of the Sankey chart\n   */\n  parentRef?: HTMLElement | null;\n\n  /**\n   * should chart resize when parent resize.\n   */\n  shouldResize?: number;\n\n  /**\n   * Color for path\n   */\n  pathColor?: string;\n}\n\nexport interface ISankeyChartStyleProps {\n  theme: ITheme;\n  className?: string;\n  width: number;\n  height: number;\n  pathColor?: string;\n}\n\nexport interface ISankeyChartStyles {\n  /**\n   *  Style for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   *  Style for the nodes.\n   */\n  nodes?: IStyle;\n\n  /**\n   *  Style for the links.\n   */\n  links?: IStyle;\n}\n"]}