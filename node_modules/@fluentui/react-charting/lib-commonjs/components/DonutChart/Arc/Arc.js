"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Arc = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var shape = require("d3-shape");
var Utilities_1 = require("@fluentui/react/lib/Utilities");
var Arc_styles_1 = require("./Arc.styles");
var index_1 = require("../../../utilities/index");
var TEXT_PADDING = 5;
var Arc = /** @class */ (function (_super) {
    tslib_1.__extends(Arc, _super);
    function Arc() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {};
        _this.currentRef = React.createRef();
        _this._hoverOff = function () {
            _this.props.hoverLeaveCallback();
        };
        _this._onBlur = function () {
            _this.props.onBlurCallback();
        };
        _this._getAriaLabel = function () {
            var _a;
            var point = _this.props.data.data;
            var legend = point.xAxisCalloutData || point.legend;
            var yValue = point.yAxisCalloutData || point.data || 0;
            return ((_a = point.callOutAccessibilityData) === null || _a === void 0 ? void 0 : _a.ariaLabel) || (legend ? legend + ", " : '') + (yValue + ".");
        };
        return _this;
    }
    Arc.getDerivedStateFromProps = function (nextProps) {
        _updateChart(nextProps);
        return null;
    };
    Arc.prototype.updateChart = function (newProps) {
        _updateChart(newProps);
    };
    Arc.prototype.render = function () {
        var _a;
        var _b = this.props, arc = _b.arc, href = _b.href, focusedArcId = _b.focusedArcId;
        var getClassNames = Utilities_1.classNamesFunction();
        var classNames = getClassNames(Arc_styles_1.getStyles, {
            color: this.props.color,
            href: href,
            theme: this.props.theme,
        });
        var id = this.props.uniqText + this.props.data.data.legend.replace(/\s+/, '') + this.props.data.data.data;
        var opacity = this.props.activeArc === this.props.data.data.legend || this.props.activeArc === '' ? 1 : 0.1;
        return (React.createElement("g", { ref: this.currentRef },
            !!focusedArcId && focusedArcId === id && (React.createElement("path", { id: id + 'focusRing', d: arc(this.props.focusData), className: classNames.focusRing })),
            React.createElement("path", { id: id, d: arc(this.props.data), onFocus: this._onFocus.bind(this, this.props.data.data, id), className: classNames.root, "data-is-focusable": true, onMouseOver: this._hoverOn.bind(this, this.props.data.data), onMouseMove: this._hoverOn.bind(this, this.props.data.data), onMouseLeave: this._hoverOff, onBlur: this._onBlur, opacity: opacity, onClick: href ? this._redirectToUrl.bind(this, href) : (_a = this.props.data) === null || _a === void 0 ? void 0 : _a.data.onClick, "aria-label": this._getAriaLabel(), role: "img" }),
            React.createElement("text", { textAnchor: 'middle', className: classNames.insideDonutString, y: 5 }, this.props.valueInsideDonut)));
    };
    Arc.prototype.componentDidUpdate = function () {
        var href = this.props.href;
        var getClassNames = Utilities_1.classNamesFunction();
        var classNames = getClassNames(Arc_styles_1.getStyles, {
            color: this.props.color,
            href: href,
            theme: this.props.theme,
        });
        index_1.wrapTextInsideDonut(classNames.insideDonutString, this.props.innerRadius * 2 - TEXT_PADDING);
    };
    Arc.prototype._onFocus = function (data, id) {
        this.props.onFocusCallback(data, id, this.currentRef.current);
    };
    Arc.prototype._hoverOn = function (data, mouseEvent) {
        mouseEvent.persist();
        this.props.hoverOnCallback(data, mouseEvent);
    };
    Arc.prototype._redirectToUrl = function (href) {
        href ? (window.location.href = href) : '';
    };
    Arc.defaultProps = {
        arc: shape.arc(),
    };
    return Arc;
}(React.Component));
exports.Arc = Arc;
function _updateChart(newProps) {
    newProps.arc.innerRadius(newProps.innerRadius);
    newProps.arc.outerRadius(newProps.outerRadius);
}
//# sourceMappingURL=Arc.js.map