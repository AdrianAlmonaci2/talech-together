{"version":3,"file":"Sparkline.base.js","sourceRoot":"../src/","sources":["components/Sparkline/Sparkline.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { scaleLinear as d3ScaleLinear } from 'd3-scale';\nimport { area as d3Area, line as d3Line, curveLinear as d3curveLinear } from 'd3-shape';\nimport { max as d3Max, extent as d3Extent } from 'd3-array';\nimport { FocusZone, FocusZoneDirection } from '@fluentui/react-focus';\nimport { ILineChartDataPoint } from '../../types/IDataPoint';\nimport { classNamesFunction } from '@fluentui/react/lib/Utilities';\nimport { ISparklineProps, ISparklineStyleProps, ISparklineStyles } from '../../index';\nconst getClassNames = classNamesFunction<ISparklineStyleProps, ISparklineStyles>();\n\nexport interface ISparklineState {\n  _points: ILineChartDataPoint[] | null;\n  _width: number;\n  _height: number;\n  _valueTextWidth: number;\n}\n\nexport class SparklineBase extends React.Component<ISparklineProps, ISparklineState> {\n  private margin = {\n    top: 2,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  };\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  private x: any;\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  private y: any;\n  private area: any;\n  private line: any;\n\n  constructor(props: ISparklineProps) {\n    super(props);\n    this.state = {\n      _points: null,\n      _width: this.props.width! || 80,\n      _height: this.props.height! || 20,\n      _valueTextWidth: this.props.valueTextWidth! || 80,\n    };\n  }\n\n  public componentDidMount() {\n    const area = d3Area()\n      /* eslint-disable @typescript-eslint/no-explicit-any */\n      .x((d: any) => this.x(d.x))\n      .y0(this.state._height)\n      /* eslint-disable @typescript-eslint/no-explicit-any */\n      .y1((d: any) => this.y(d.y))\n      .curve(d3curveLinear);\n    this.area = area;\n\n    const line = d3Line()\n      /* eslint-disable @typescript-eslint/no-explicit-any */\n      .x((d: any) => this.x(d.x))\n      /* eslint-disable @typescript-eslint/no-explicit-any */\n      .y((d: any) => this.y(d.y))\n      .curve(d3curveLinear);\n    this.line = line;\n\n    const points = this.props.data!.lineChartData![0].data;\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    const [xMin, xMax] = d3Extent(points, (d: any) => d.x);\n\n    this.x = d3ScaleLinear()\n      .domain([xMin, xMax])\n      .range([this.margin.left!, this.state._width - this.margin.right!]);\n    this.y = d3ScaleLinear()\n      /* eslint-disable @typescript-eslint/no-explicit-any */\n      .domain([0, d3Max(points, (d: any) => d.y)])\n      .range([this.state._height - this.margin.bottom!, this.margin.top!]);\n\n    this.setState({\n      _points: points,\n    });\n  }\n\n  public drawSparkline() {\n    return (\n      <>\n        <path\n          className=\"line\"\n          d={this.line(this.state._points)}\n          fill={'transparent'}\n          opacity={1}\n          strokeWidth={2}\n          stroke={this.props.data!.lineChartData![0].color!}\n        />\n        <path\n          className=\"area\"\n          d={this.area(this.state._points)}\n          opacity={1}\n          fillOpacity={0.2}\n          fill={this.props.data!.lineChartData![0].color!}\n          aria-label={`Sparkline with label ${this.props.data!.lineChartData![0].legend!}`}\n        />\n      </>\n    );\n  }\n\n  public render() {\n    const classNames = getClassNames(this.props.styles!, {\n      theme: this.props.theme!,\n    });\n    return (\n      <FocusZone\n        direction={FocusZoneDirection.horizontal}\n        isCircularNavigation={true}\n        className={classNames.inlineBlock}\n      >\n        <div className={classNames.inlineBlock}>\n          {this.state._width >= 50 && this.state._height >= 16 ? (\n            <svg width={this.state._width} height={this.state._height} data-is-focusable={true}>\n              {this.state._points ? this.drawSparkline() : null}\n            </svg>\n          ) : (\n            <></>\n          )}\n          {this.props.showLegend && this.props.data!.lineChartData![0].legend ? (\n            <svg width={this.state._valueTextWidth} height={this.state._height} data-is-focusable={true}>\n              <text x=\"0%\" dx={8} y=\"100%\" dy={-5} className={classNames.valueText}>\n                {this.props.data!.lineChartData![0].legend!}\n              </text>\n            </svg>\n          ) : (\n            <></>\n          )}\n        </div>\n      </FocusZone>\n    );\n  }\n}\n"]}