"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LabeledArc = exports.Arc = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var shape = require("d3-shape");
var Utilities_1 = require("@fluentui/react/lib/Utilities");
var Arc_styles_1 = require("./Arc.styles");
var utilities_1 = require("../../../utilities/utilities");
var Arc = /** @class */ (function (_super) {
    tslib_1.__extends(Arc, _super);
    function Arc() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {};
        _this.updateChart = function (newProps) {
            _updateChart(newProps);
        };
        return _this;
    }
    Arc.getDerivedStateFromProps = function (nextProps) {
        _updateChart(nextProps);
        return null;
    };
    Arc.prototype.render = function () {
        var _a;
        var _b = this.props, color = _b.color, arc = _b.arc;
        var getClassNames = Utilities_1.classNamesFunction();
        var classNames = getClassNames(Arc_styles_1.getStyles, { color: color });
        return React.createElement("path", { d: arc(this.props.data), className: classNames.root, onClick: (_a = this.props.data) === null || _a === void 0 ? void 0 : _a.data.onClick });
    };
    Arc.defaultProps = {
        arc: shape.arc(),
    };
    return Arc;
}(React.Component));
exports.Arc = Arc;
var LabeledArc = /** @class */ (function (_super) {
    tslib_1.__extends(LabeledArc, _super);
    function LabeledArc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LabeledArc.prototype.render = function () {
        var _a = this.props, data = _a.data, arc = _a.arc, culture = _a.culture;
        var _b = arc.centroid(data), labelX = _b[0], labelY = _b[1];
        var labelTranslate = "translate(" + labelX + ", " + labelY + ")";
        return (React.createElement("g", { className: "arc" },
            _super.prototype.render.call(this),
            React.createElement("text", { transform: labelTranslate, textAnchor: "middle" },
                data.data.x,
                "-",
                utilities_1.convertToLocaleString(data.data.y, culture))));
    };
    return LabeledArc;
}(Arc));
exports.LabeledArc = LabeledArc;
function _updateChart(newProps) {
    newProps.arc.innerRadius(newProps.innerRadius);
    newProps.arc.outerRadius(newProps.outerRadius);
}
//# sourceMappingURL=Arc.js.map