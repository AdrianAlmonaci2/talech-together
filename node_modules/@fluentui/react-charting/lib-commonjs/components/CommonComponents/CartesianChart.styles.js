"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStyles = void 0;
var tslib_1 = require("tslib");
var Styling_1 = require("@fluentui/react/lib/Styling");
var react_1 = require("@fluentui/react");
var isIE11Var = react_1.isIE11();
var getStyles = function (props) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    var className = props.className, theme = props.theme, isRtl = props.isRtl, shouldHighlight = props.shouldHighlight, href = props.href, _j = props.lineColor, lineColor = _j === void 0 ? 'transparent' : _j, toDrawShape = props.toDrawShape;
    var fonts = theme.fonts;
    return {
        root: [
            theme.fonts.medium,
            {
                display: 'flex',
                width: '100%',
                height: '100%',
                flexDirection: 'column',
                overflow: 'hidden',
            },
            className,
        ],
        xAxis: {
            selectors: {
                text: [
                    theme.fonts.tiny,
                    {
                        fill: theme.semanticColors.bodyText,
                        fontWeight: '600',
                        selectors: (_a = {},
                            _a[Styling_1.HighContrastSelectorBlack] = {
                                fill: 'rgb(179, 179, 179)',
                            },
                            _a),
                    },
                ],
                line: {
                    opacity: 0.2,
                    stroke: theme.semanticColors.bodyText,
                    width: '1px',
                    selectors: (_b = {},
                        _b[Styling_1.HighContrastSelectorBlack] = {
                            opacity: 0.1,
                            stroke: 'rgb(179, 179, 179)',
                        },
                        _b),
                },
                path: {
                    display: 'none',
                },
            },
        },
        yAxis: {
            selectors: {
                text: [
                    theme.fonts.tiny,
                    {
                        fill: theme.semanticColors.bodyText,
                        fontWeight: '600',
                        selectors: (_c = {},
                            _c[Styling_1.HighContrastSelectorBlack] = {
                                fill: 'rgb(179, 179, 179)',
                            },
                            _c),
                    },
                ],
                path: {
                    display: 'none',
                },
                line: {
                    opacity: 0.2,
                    stroke: theme.semanticColors.bodyText,
                    selectors: (_d = {},
                        _d[Styling_1.HighContrastSelectorBlack] = {
                            opacity: 0.1,
                            stroke: 'rgb(179, 179, 179)',
                        },
                        _d),
                },
                g: [
                    isRtl &&
                        !isIE11Var && {
                        textAnchor: 'end',
                    },
                ],
            },
        },
        opacityChangeOnHover: {
            opacity: shouldHighlight ? '' : '0.1',
            cursor: href ? 'pointer' : 'default',
        },
        legendContainer: [
            {
                marginTop: '8px',
                marginLeft: '20px',
            },
        ],
        calloutContentRoot: [
            {
                display: 'grid',
                overflow: 'hidden',
                padding: '11px 16px 10px 16px',
                backgroundColor: theme.semanticColors.bodyBackground,
                backgroundBlendMode: 'normal, luminosity',
            },
        ],
        calloutDateTimeContainer: {
            display: 'flex',
            flexDirection: 'row',
            justifyContent: 'space-between',
        },
        calloutContentX: [
            tslib_1.__assign(tslib_1.__assign({}, fonts.small), { lineHeight: '16px', opacity: '0.8', color: theme.semanticColors.bodySubtext }),
        ],
        calloutBlockContainer: [
            theme.fonts.mediumPlus,
            {
                marginTop: '13px',
                color: theme.semanticColors.bodyText,
            },
            !toDrawShape && {
                selectors: (_e = {},
                    _e[Styling_1.HighContrastSelector] = {
                        forcedColorAdjust: 'none',
                    },
                    _e),
                borderLeft: "4px solid " + lineColor,
                paddingLeft: '8px',
            },
            toDrawShape && {
                display: 'flex',
            },
        ],
        shapeStyles: {
            marginRight: '8px',
        },
        calloutlegendText: tslib_1.__assign(tslib_1.__assign({}, fonts.small), { lineHeight: '16px', selectors: (_f = {},
                _f[Styling_1.HighContrastSelectorBlack] = {
                    color: 'rgb(255, 255, 255)',
                },
                _f), color: theme.semanticColors.bodySubtext }),
        calloutContentY: [
            tslib_1.__assign(tslib_1.__assign({}, fonts.mediumPlus), { fontWeight: 'bold', lineHeight: '22px', selectors: (_g = {},
                    _g[Styling_1.HighContrastSelectorBlack] = {
                        color: 'rgb(255, 255, 255)',
                    },
                    _g) }),
        ],
        descriptionMessage: [
            theme.fonts.small,
            {
                selectors: (_h = {},
                    _h[Styling_1.HighContrastSelectorBlack] = {
                        color: 'rgb(255, 255, 255)',
                    },
                    _h),
                color: theme.semanticColors.bodyText,
                marginTop: '10px',
                paddingTop: '10px',
                borderTop: "1px solid " + theme.semanticColors.menuDivider,
            },
        ],
    };
};
exports.getStyles = getStyles;
//# sourceMappingURL=CartesianChart.styles.js.map