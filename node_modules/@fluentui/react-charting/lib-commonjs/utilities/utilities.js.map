{"version":3,"file":"utilities.js","sourceRoot":"../src/","sources":["utilities/utilities.ts"],"names":[],"mappings":"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","sourcesContent":["import { axisRight as d3AxisRight, axisBottom as d3AxisBottom, axisLeft as d3AxisLeft, Axis as D3Axis } from 'd3-axis';\nimport { max as d3Max, min as d3Min } from 'd3-array';\nimport { scaleLinear as d3ScaleLinear, scaleTime as d3ScaleTime, scaleBand as d3ScaleBand } from 'd3-scale';\nimport { select as d3Select, event as d3Event, selectAll as d3SelectAll } from 'd3-selection';\nimport { format as d3Format } from 'd3-format';\nimport * as d3TimeFormat from 'd3-time-format';\nimport {\n  timeSecond as d3TimeSecond,\n  timeMinute as d3TimeMinute,\n  timeHour as d3TimeHour,\n  timeDay as d3TimeDay,\n  timeMonth as d3TimeMonth,\n  timeWeek as d3TimeWeek,\n  timeYear as d3TimeYear,\n} from 'd3-time';\nimport {\n  IAccessibilityProps,\n  IEventsAnnotationProps,\n  ILineChartPoints,\n  ILineChartDataPoint,\n  IDataPoint,\n  IVerticalBarChartDataPoint,\n} from '../index';\n\nexport type NumericAxis = D3Axis<number | { valueOf(): number }>;\nexport type StringAxis = D3Axis<string>;\n\nexport enum ChartTypes {\n  AreaChart,\n  LineChart,\n  VerticalBarChart,\n  VerticalStackedBarChart,\n  GroupedVerticalBarChart,\n  HeatMapChart,\n}\n\nexport enum XAxisTypes {\n  NumericAxis,\n  DateAxis,\n  StringAxis,\n}\n\nexport enum YAxisType {\n  NumericAxis,\n  DateAxis,\n  StringAxis,\n}\n\nexport interface IWrapLabelProps {\n  node: SVGElement | null;\n  xAxis: NumericAxis | StringAxis;\n  noOfCharsToTruncate: number;\n  showXAxisLablesTooltip: boolean;\n}\n\nexport interface IRotateLabelProps {\n  node: SVGElement | null;\n  xAxis: NumericAxis | StringAxis;\n}\n\nexport interface IAxisData {\n  yAxisDomainValues: number[];\n}\n\nexport interface IMargins {\n  /**\n   * left margin for the chart.\n   * @default 40\n   */\n  left?: number;\n  /**\n   * Right margin for the chart.\n   * @default 20\n   */\n  right?: number;\n  /**\n   * Top margin for the chart.\n   * @default 20\n   */\n  top?: number;\n  /**\n   * Bottom margin for the chart.\n   * @default 35\n   */\n  bottom?: number;\n}\n\nexport interface IDomainNRange {\n  dStartValue: number | Date;\n  dEndValue: number | Date;\n  rStartValue: number;\n  rEndValue: number;\n}\n\nexport interface IXAxisParams {\n  domainNRangeValues: IDomainNRange;\n  xAxisElement?: SVGElement | null;\n  xAxisCount?: number;\n  showRoundOffXTickValues?: boolean;\n  xAxistickSize?: number;\n  tickPadding?: number;\n  xAxisPadding?: number;\n}\nexport interface ITickParams {\n  tickValues?: Date[] | number[];\n  tickFormat?: string;\n}\n\nexport interface IYAxisParams {\n  yMinMaxValues?: {\n    startValue: number;\n    endValue: number;\n  };\n  maxOfYVal?: number;\n  margins: IMargins;\n  containerWidth: number;\n  containerHeight: number;\n  yAxisElement?: SVGElement | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  yAxisTickFormat?: any;\n  yAxisTickCount: number;\n  yMaxValue?: number;\n  yMinValue?: number;\n  tickPadding?: number;\n  eventAnnotationProps?: IEventsAnnotationProps;\n  eventLabelHeight?: number;\n  yAxisPadding?: number;\n}\n\n/**\n * Create Numeric X axis\n * @export\n * @param {IXAxisParams} xAxisParams\n */\nexport function createNumericXAxis(xAxisParams: IXAxisParams, culture?: string) {\n  const {\n    domainNRangeValues,\n    showRoundOffXTickValues = false,\n    xAxistickSize = 6,\n    tickPadding = 10,\n    xAxisCount = 6,\n    xAxisElement,\n  } = xAxisParams;\n  const xAxisScale = d3ScaleLinear()\n    .domain([domainNRangeValues.dStartValue, domainNRangeValues.dEndValue])\n    .range([domainNRangeValues.rStartValue, domainNRangeValues.rEndValue]);\n  showRoundOffXTickValues && xAxisScale.nice();\n\n  const xAxis = d3AxisBottom(xAxisScale)\n    .tickSize(xAxistickSize)\n    .tickPadding(tickPadding)\n    .ticks(xAxisCount)\n    .tickSizeOuter(0)\n    .tickFormat((domainValue, index) => {\n      const xAxisValue = typeof domainValue === 'number' ? domainValue : domainValue.valueOf();\n      return convertToLocaleString(xAxisValue, culture) as string;\n    });\n  if (xAxisElement) {\n    d3Select(xAxisElement).call(xAxis).selectAll('text').attr('aria-hidden', 'true');\n  }\n  return xAxisScale;\n}\n\nfunction multiFormat(date: Date, locale: d3TimeFormat.TimeLocaleObject) {\n  const formatMillisecond = locale.format('.%L');\n  const formatSecond = locale.format(':%S');\n  const formatMinute = locale.format('%I:%M');\n  const formatHour = locale.format('%I %p');\n  const formatDay = locale.format('%a %d');\n  const formatWeek = locale.format('%b %d');\n  const formatMonth = locale.format('%B');\n  const formatYear = locale.format('%Y');\n\n  return (d3TimeSecond(date) < date\n    ? formatMillisecond\n    : d3TimeMinute(date) < date\n    ? formatSecond\n    : d3TimeHour(date) < date\n    ? formatMinute\n    : d3TimeDay(date) < date\n    ? formatHour\n    : d3TimeMonth(date) < date\n    ? d3TimeWeek(date) < date\n      ? formatDay\n      : formatWeek\n    : d3TimeYear(date) < date\n    ? formatMonth\n    : formatYear)(date);\n}\n\n/**\n * Creating Date x axis of the Chart\n * @export\n * @param {IXAxisParams} xAxisParams\n * @param {ITickParams} tickParams\n */\nexport function createDateXAxis(\n  xAxisParams: IXAxisParams,\n  tickParams: ITickParams,\n  culture?: string,\n  options?: Intl.DateTimeFormatOptions,\n  timeFormatLocale?: d3TimeFormat.TimeLocaleDefinition,\n  customDateTimeFormatter?: (dateTime: Date) => string,\n) {\n  const { domainNRangeValues, xAxisElement, tickPadding = 6, xAxistickSize = 6, xAxisCount = 6 } = xAxisParams;\n  const xAxisScale = d3ScaleTime()\n    .domain([domainNRangeValues.dStartValue, domainNRangeValues.dEndValue])\n    .range([domainNRangeValues.rStartValue, domainNRangeValues.rEndValue]);\n  const xAxis = d3AxisBottom(xAxisScale).tickSize(xAxistickSize).tickPadding(tickPadding).ticks(xAxisCount);\n  if (customDateTimeFormatter) {\n    xAxis.tickFormat((domainValue: Date, _index: number) => {\n      return customDateTimeFormatter(domainValue);\n    });\n  } else if (culture && options) {\n    xAxis.tickFormat((domainValue: Date, _index: number) => {\n      return domainValue.toLocaleString(culture, options);\n    });\n  } else if (timeFormatLocale) {\n    const locale: d3TimeFormat.TimeLocaleObject = d3TimeFormat.timeFormatLocale(timeFormatLocale!);\n\n    xAxis.tickFormat((domainValue: Date, _index: number) => {\n      return multiFormat(domainValue, locale);\n    });\n  }\n\n  tickParams.tickValues ? xAxis.tickValues(tickParams.tickValues) : '';\n  if (culture === undefined) {\n    tickParams.tickFormat ? xAxis.tickFormat(d3TimeFormat.timeFormat(tickParams.tickFormat)) : '';\n  }\n  if (xAxisElement) {\n    d3Select(xAxisElement).call(xAxis).selectAll('text').attr('aria-hidden', 'true');\n  }\n  return xAxisScale;\n}\n\n/**\n * Create String X axis\n * Currently using for only Vetical stacked bar chart and grouped vertical bar chart\n * @export\n * @param {IXAxisParams} xAxisParams\n * @param {ITickParams} tickParams\n * @param {string[]} dataset\n * @returns\n */\nexport function createStringXAxis(\n  xAxisParams: IXAxisParams,\n  tickParams: ITickParams,\n  dataset: string[],\n  culture?: string,\n) {\n  const { domainNRangeValues, xAxisCount = 6, xAxistickSize = 6, tickPadding = 10, xAxisPadding = 0.1 } = xAxisParams;\n  const xAxisScale = d3ScaleBand()\n    .domain(dataset!)\n    .range([domainNRangeValues.rStartValue, domainNRangeValues.rEndValue])\n    .padding(xAxisPadding);\n  const xAxis = d3AxisBottom(xAxisScale)\n    .tickSize(xAxistickSize)\n    .tickPadding(tickPadding)\n    .ticks(xAxisCount)\n    .tickFormat((x: string, index: number) => {\n      return convertToLocaleString(dataset[index], culture) as string;\n    });\n\n  if (xAxisParams.xAxisElement) {\n    d3Select(xAxisParams.xAxisElement).call(xAxis).selectAll('text').attr('aria-hidden', 'true');\n  }\n  return xAxisScale;\n}\n\n/**\n * This method used for creating data points for the y axis.\n * @export\n * @param {number} maxVal\n * @param {number} minVal\n * @param {number} splitInto\n * @returns {number[]}\n */\nexport function prepareDatapoints(maxVal: number, minVal: number, splitInto: number): number[] {\n  const val = Math.ceil((maxVal - minVal) / splitInto);\n  const dataPointsArray: number[] = [minVal, minVal + val];\n  while (dataPointsArray[dataPointsArray.length - 1] < maxVal) {\n    dataPointsArray.push(dataPointsArray[dataPointsArray.length - 1] + val);\n  }\n  return dataPointsArray;\n}\n\n/**\n * Creating Numeric Y axis of the chart\n * @export\n * @param {IYAxisParams} yAxisParams\n * @param {boolean} isRtl\n */\nexport function createYAxis(yAxisParams: IYAxisParams, isRtl: boolean, axisData: IAxisData) {\n  const {\n    yMinMaxValues = { startValue: 0, endValue: 0 },\n    yAxisElement = null,\n    yMaxValue = 0,\n    yMinValue = 0,\n    containerHeight,\n    containerWidth,\n    margins,\n    tickPadding = 12,\n    maxOfYVal = 0,\n    yAxisTickFormat,\n    yAxisTickCount = 4,\n    eventAnnotationProps,\n    eventLabelHeight,\n  } = yAxisParams;\n\n  // maxOfYVal coming from only area chart and Grouped vertical bar chart(Calculation done at base file)\n  const tempVal = maxOfYVal || yMinMaxValues.endValue;\n  const finalYmax = tempVal > yMaxValue ? tempVal : yMaxValue!;\n  const finalYmin = yMinMaxValues.startValue < yMinValue ? 0 : yMinValue!;\n  const domainValues = prepareDatapoints(finalYmax, finalYmin, yAxisTickCount);\n  const yAxisScale = d3ScaleLinear()\n    .domain([finalYmin, domainValues[domainValues.length - 1]])\n    .range([containerHeight - margins.bottom!, margins.top! + (eventAnnotationProps! ? eventLabelHeight! : 0)]);\n  const axis = isRtl ? d3AxisRight(yAxisScale) : d3AxisLeft(yAxisScale);\n  const yAxis = axis\n    .tickPadding(tickPadding)\n    .tickValues(domainValues)\n    .tickSizeInner(-(containerWidth - margins.left! - margins.right!));\n  yAxisTickFormat ? yAxis.tickFormat(yAxisTickFormat) : yAxis.tickFormat(d3Format('.2~s'));\n  yAxisElement ? d3Select(yAxisElement).call(yAxis).selectAll('text').attr('aria-hidden', 'true') : '';\n  axisData.yAxisDomainValues = domainValues;\n  return yAxisScale;\n}\n\n/**\n * Creating String Y axis of the chart\n * @param yAxisParams\n * @param dataPoints\n * @param isRtl\n */\nexport const createStringYAxis = (yAxisParams: IYAxisParams, dataPoints: string[], isRtl: boolean) => {\n  const { containerHeight, tickPadding = 12, margins, yAxisTickFormat, yAxisElement, yAxisPadding = 0 } = yAxisParams;\n  const yAxisScale = d3ScaleBand()\n    .domain(dataPoints)\n    .range([containerHeight - margins.bottom!, margins.top!])\n    .padding(yAxisPadding);\n  const axis = isRtl ? d3AxisRight(yAxisScale) : d3AxisLeft(yAxisScale);\n  const yAxis = axis.tickPadding(tickPadding).tickValues(dataPoints).tickSize(0);\n  if (yAxisTickFormat) {\n    yAxis.tickFormat(yAxisTickFormat);\n  }\n  yAxisElement ? d3Select(yAxisElement).call(yAxis).selectAll('text') : '';\n  return yAxisScale;\n};\n\n/**\n * For area chart and line chart, while displaying stackCallout, Need to form a callout data object.\n * This methos creates an object for those 2 charts.\n * @param values\n */\n\ntype DataPoint = {\n  legend: string;\n  y: number;\n  x: number | Date | string;\n  color: string;\n  yAxisCalloutData: string;\n  index?: number;\n  callOutAccessibilityData?: IAccessibilityProps;\n};\n\nexport function calloutData(values: (ILineChartPoints & { index?: number })[]) {\n  let combinedResult: {\n    legend: string;\n    y: number;\n    x: number | Date | string;\n    color: string;\n    yAxisCalloutData?: string | { [id: string]: number };\n    callOutAccessibilityData?: IAccessibilityProps;\n  }[] = [];\n\n  values.forEach((element: { data: ILineChartDataPoint[]; legend: string; color: string; index?: number }) => {\n    const elements = element.data\n      .filter((ele: ILineChartDataPoint) => !ele.hideCallout)\n      .map((ele: ILineChartDataPoint) => {\n        return { legend: element.legend, ...ele, color: element.color, index: element.index };\n      });\n    combinedResult = combinedResult.concat(elements);\n  });\n\n  const result: { x: number | Date | string; values: { legend: string; y: number }[] }[] = [];\n  combinedResult.forEach((e1: DataPoint, index: number) => {\n    e1.x = e1.x instanceof Date ? e1.x.getTime() : e1.x;\n    const filteredValues = [\n      {\n        legend: e1.legend,\n        y: e1.y,\n        color: e1.color,\n        yAxisCalloutData: e1.yAxisCalloutData,\n        callOutAccessibilityData: e1.callOutAccessibilityData,\n        index: e1.index,\n      },\n    ];\n    combinedResult.slice(index + 1).forEach((e2: DataPoint) => {\n      e2.x = e2.x instanceof Date ? e2.x.getTime() : e2.x;\n      if (e1.x === e2.x) {\n        filteredValues.push({\n          legend: e2.legend,\n          y: e2.y,\n          color: e2.color,\n          yAxisCalloutData: e2.yAxisCalloutData,\n          callOutAccessibilityData: e2.callOutAccessibilityData,\n          index: e2.index,\n        });\n      }\n    });\n    result.push({ x: e1.x, values: filteredValues });\n  });\n  return getUnique(result, 'x');\n}\n\nexport function getUnique(\n  arr: { x: number | Date | string; values: { legend: string; y: number }[] }[],\n  comp: string | number,\n) {\n  const unique = arr\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    .map((e: { [x: string]: any }) => e[comp])\n    // store the keys of the unique objects\n    .map((e: string, i: number, final: string[]) => final.indexOf(e) === i && i)\n    // eliminate the dead keys & store unique objects\n    .filter((e: number) => arr[e])\n    .map((e: number) => arr[e]);\n  return unique;\n}\n\n/**\n * This function takes two paramerter\n * 1. an array of strings\n * 2. a string value\n * if the value is not present in the given array then it will return the new\n * array by appending the value to the present arrray.\n *\n * if the value is already present in  the given array then it will return the new\n * array by deleteing the value from the the array\n * @param array\n * @param value\n */\nexport function silceOrAppendToArray(array: string[], value: string): string[] {\n  const pos = array.indexOf(value);\n  if (pos === -1) {\n    return [...array, value];\n  } else {\n    return array.slice(0, pos).concat(array.slice(pos + 1));\n  }\n}\n\n/**\n * This method used for wrapping of x axis labels (tick values).\n * It breaks down given text value by space separated and calculates the total height needed to display all the words.\n * That value = removal value. This value needs to be remove from total svg height, svg will shrink and\n * total text will be displayed.\n * @export\n * @param {IWrapLabelProps} wrapLabelProps\n * @returns\n */\nexport function createWrapOfXLabels(wrapLabelProps: IWrapLabelProps) {\n  const { node, xAxis, noOfCharsToTruncate, showXAxisLablesTooltip } = wrapLabelProps;\n  if (node === null) {\n    return;\n  }\n  const axisNode = d3Select(node).call(xAxis);\n  let removeVal = 0;\n  const width = 10;\n  const arr: number[] = [];\n  axisNode.selectAll('.tick text').each(function () {\n    const text = d3Select(this);\n    const totalWord = text.text();\n    const truncatedWord = `${text.text().slice(0, noOfCharsToTruncate)}...`;\n    const totalWordLength = text.text().length;\n    const words = text.text().split(/\\s+/).reverse();\n    arr.push(words.length);\n    let word: string = '';\n    let line: string[] = [];\n    let lineNumber: number = 0;\n    const lineHeight = 1.1; // ems\n    const y = text.attr('y');\n    const dy = parseFloat(text.attr('dy'));\n    let tspan = text\n      .text(null)\n      .append('tspan')\n      .attr('x', 0)\n      .attr('y', y)\n      .attr('id', 'BaseSpan')\n      .attr('dy', dy + 'em')\n      .attr('data-', totalWord);\n\n    if (showXAxisLablesTooltip && totalWordLength > noOfCharsToTruncate) {\n      tspan = text\n        .append('tspan')\n        .attr('id', 'showDots')\n        .attr('x', 0)\n        .attr('y', y)\n        .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n        .text(truncatedWord);\n    } else if (showXAxisLablesTooltip && totalWordLength <= noOfCharsToTruncate) {\n      tspan = text\n        .append('tspan')\n        .attr('id', 'LessLength')\n        .attr('x', 0)\n        .attr('y', y)\n        .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n        .text(totalWord);\n    } else {\n      while ((word = words.pop()!)) {\n        line.push(word);\n        tspan.text(line.join(' '));\n        if (tspan.node()!.getComputedTextLength() > width && line.length > 1) {\n          line.pop();\n          tspan.text(line.join(' '));\n          line = [word];\n          tspan = text\n            .append('tspan')\n            .attr('id', 'WordBreakId')\n            .attr('x', 0)\n            .attr('y', y)\n            .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n            .text(word);\n        }\n      }\n      const maxDigit = Math.max(...arr);\n      let maxHeight: number = 12; // intial value to render corretly first time\n      axisNode.selectAll('text').each(() => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const outerHTMLElement = document.getElementById('WordBreakId') as any;\n        const BoxCordinates = outerHTMLElement && outerHTMLElement.getBoundingClientRect();\n        const boxHeight = BoxCordinates && BoxCordinates.height;\n        if (boxHeight > maxHeight) {\n          maxHeight = boxHeight;\n        }\n      });\n      // If we take directly maxDigit * maxheight, then it will show more height between x axis tick values and bottom.\n      // To avoid this, reducing maxDigit value by removing some digit based on legth of word.\n      let removeDigit: number = 4;\n      if (maxDigit <= 2) {\n        removeDigit = 1;\n      } else if (maxDigit > 2 && maxDigit <= 6) {\n        removeDigit = 2;\n      } else if (maxDigit > 6 && maxDigit <= 9) {\n        removeDigit = 3;\n      }\n      removeVal = (maxDigit - removeDigit) * maxHeight;\n    }\n  });\n  return removeVal > 0 ? removeVal : 0;\n}\n\n/**\n * This method displays a tooltip to the x axis lables(tick values)\n * when prop 'showXAxisLablesTooltip' enables to the respected chart.\n * On hover of the truncated word(at x axis labels tick), a tooltip will be appeared.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function tooltipOfXAxislabels(xAxistooltipProps: any) {\n  const { tooltipCls, xAxis, id } = xAxistooltipProps;\n  if (xAxis === null) {\n    return null;\n  }\n  const div = d3Select('body').append('div').attr('id', id).attr('class', tooltipCls).style('opacity', 0);\n  const aa = xAxis!.selectAll('#BaseSpan')._groups[0];\n  const baseSpanLength = aa && Object.keys(aa)!.length;\n  const originalDataArray: string[] = [];\n  for (let i = 0; i < baseSpanLength; i++) {\n    const originalData = aa[i].dataset && (Object.values(aa[i].dataset)[0] as string);\n    originalDataArray.push(originalData);\n  }\n  const tickObject = xAxis!.selectAll('.tick')._groups[0];\n  const tickObjectLength = tickObject && Object.keys(tickObject)!.length;\n  for (let i = 0; i < tickObjectLength; i++) {\n    const d1 = tickObject[i];\n    d3Select(d1)\n      .on('mouseover', d => {\n        div.style('opacity', 0.9);\n        div\n          .html(originalDataArray[i])\n          .style('left', d3Event.pageX + 'px')\n          .style('top', d3Event.pageY - 28 + 'px');\n      })\n      .on('mouseout', d => {\n        div.style('opacity', 0);\n      });\n  }\n}\n\n/**\n * Find the axis type of line chart and area chart from given data\n * @param points\n */\nexport function getXAxisType(points: ILineChartPoints[]): boolean {\n  let isXAxisDateType: boolean = false;\n  if (points && points.length > 0) {\n    points.forEach((chartData: ILineChartPoints) => {\n      if (chartData.data.length > 0) {\n        isXAxisDateType = chartData.data[0].x instanceof Date;\n        return;\n      }\n    });\n  }\n  return isXAxisDateType;\n}\n\n/**\n * Calculates Domain and range values for Date X axis.\n * This method calculates Area chart and line chart.\n * @export\n * @param {ILineChartPoints[]} points\n * @param {IMargins} margins\n * @param {number} width\n * @param {boolean} isRTL\n * @param {Date[] | number[]} tickValues\n * @returns {IDomainNRange}\n */\nexport function domainRangeOfDateForAreaChart(\n  points: ILineChartPoints[],\n  margins: IMargins,\n  width: number,\n  isRTL: boolean,\n  tickValues: Date[] = [],\n): IDomainNRange {\n  const sDate = d3Min(points, (point: ILineChartPoints) => {\n    return d3Min(point.data, (item: ILineChartDataPoint) => {\n      return item.x as Date;\n    });\n  })!;\n  const lDate = d3Max(points, (point: ILineChartPoints) => {\n    return d3Max(point.data, (item: ILineChartDataPoint) => {\n      return item.x as Date;\n    });\n  })!;\n\n  // Need to draw graph with given small and large date (Which Involves customization of date axis tick values)\n  // That may be Either from given graph data or from prop 'tickValues' date values.\n  // So, Finding smallest and largest dates\n  const smallestDate = d3Min([...tickValues, sDate])!;\n  const largestDate = d3Max([...tickValues, lDate])!;\n\n  const rStartValue = margins.left!;\n  const rEndValue = width - margins.right!;\n\n  return isRTL\n    ? { dStartValue: largestDate, dEndValue: smallestDate, rStartValue, rEndValue }\n    : { dStartValue: smallestDate, dEndValue: largestDate, rStartValue, rEndValue };\n}\n\n/**\n * Calculates Domain and range values for Numeric X axis.\n * This method calculates Area cart and line chart.\n * @export\n * @param {ILineChartPoints[]} points\n * @param {IMargins} margins\n * @param {number} width\n * @param {boolean} isRTL\n * @returns {IDomainNRange}\n */\nexport function domainRangeOfNumericForAreaChart(\n  points: ILineChartPoints[],\n  margins: IMargins,\n  width: number,\n  isRTL: boolean,\n): IDomainNRange {\n  const xMin = d3Min(points, (point: ILineChartPoints) => {\n    return d3Min(point.data, (item: ILineChartDataPoint) => item.x as number)!;\n  })!;\n\n  const xMax = d3Max(points, (point: ILineChartPoints) => {\n    return d3Max(point.data, (item: ILineChartDataPoint) => {\n      return item.x as number;\n    });\n  })!;\n\n  const rStartValue = margins.left!;\n  const rEndValue = width - margins.right!;\n\n  return isRTL\n    ? { dStartValue: xMax, dEndValue: xMin, rStartValue, rEndValue }\n    : { dStartValue: xMin, dEndValue: xMax, rStartValue, rEndValue };\n}\n\n/**\n * Calculates Range values of x Axis string axis\n * For String axis, we need to give domain values (Not start and end array values)\n * So sending 0 as domain values. Domain will be handled at creation of string axis\n * For charts stacked bar chart, grouped vertical bar chart, HeatMapChart and Vertical bar chart\n * @export\n * @param {IMargins} margins\n * @param {number} width\n * @param {boolean} isRTL\n * @returns {IDomainNRange}\n */\nexport function domainRangeOfXStringAxis(margins: IMargins, width: number, isRTL: boolean): IDomainNRange {\n  const rMin = margins.left!;\n  const rMax = width - margins.right!;\n  return isRTL\n    ? { dStartValue: 0, dEndValue: 0, rStartValue: rMax, rEndValue: rMin }\n    : { dStartValue: 0, dEndValue: 0, rStartValue: rMin, rEndValue: rMax };\n}\n\n/**\n * Calculate domain and range values to the Vertical stacked bar chart - For Numeric axis\n * @export\n * @param {IDataPoint[]} points\n * @param {IMargins} margins\n * @param {number} width\n * @param {boolean} isRTL\n * @param {number} barWidth\n * @returns {IDomainNRange}\n */\nexport function domainRangeOfVSBCNumeric(\n  points: IDataPoint[],\n  margins: IMargins,\n  width: number,\n  isRTL: boolean,\n  barWidth: number,\n): IDomainNRange {\n  const xMin = d3Min(points, (point: IDataPoint) => point.x as number)!;\n  const xMax = d3Max(points, (point: IDataPoint) => point.x as number)!;\n  // barWidth / 2 - for to get tick middle of the bar\n  const rMax = margins.left! + barWidth / 2;\n  const rMin = width - margins.right! - barWidth / 2;\n  return isRTL\n    ? { dStartValue: xMax, dEndValue: xMin, rStartValue: rMax, rEndValue: rMin }\n    : { dStartValue: xMin, dEndValue: xMax, rStartValue: rMax, rEndValue: rMin };\n}\n\n/**\n * Calculate domain and range values to the Vertical bar chart - For Numeric axis\n * @export\n * @param {IDataPoint[]} points\n * @param {IMargins} margins\n * @param {number} containerWidth\n * @param {boolean} isRTL\n * @param {number} barWidth\n * @returns {IDomainNRange}\n */\nexport function domainRageOfVerticalNumeric(\n  points: IDataPoint[],\n  margins: IMargins,\n  containerWidth: number,\n  isRTL: boolean,\n  barWidth: number,\n): IDomainNRange {\n  const xMax = d3Max(points, (point: IVerticalBarChartDataPoint) => point.x as number)!;\n  const xMin = d3Min(points, (point: IVerticalBarChartDataPoint) => point.x as number)!;\n  const rMin = margins.left! + barWidth;\n  const rMax = containerWidth - margins.right! - barWidth;\n\n  return isRTL\n    ? { dStartValue: xMax, dEndValue: xMin, rStartValue: rMin, rEndValue: rMax }\n    : { dStartValue: xMin, dEndValue: xMax, rStartValue: rMin, rEndValue: rMax };\n}\n\n/**\n * For creating X axis, need to calculate x axis domain and range values from given points.\n * This may vary based on chart type and type of x axis\n * So, this method will define which method need to call based on chart type and axis type.\n * @export\n * @param {*} points\n * @param {IMargins} margins\n * @param {number} width\n * @param {ChartTypes} chartType\n * @param {boolean} isRTL\n * @param {XAxisTypes} xAxisType\n * @param {number} [barWidth]\n * @returns {IDomainNRange}\n */\nexport function getDomainNRangeValues(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  points: any,\n  margins: IMargins,\n  width: number,\n  chartType: ChartTypes,\n  isRTL: boolean,\n  xAxisType: XAxisTypes,\n  barWidth: number,\n  tickValues: Date[] | number[] | undefined,\n): IDomainNRange {\n  let domainNRangeValue: IDomainNRange;\n  if (xAxisType === XAxisTypes.NumericAxis) {\n    switch (chartType) {\n      case ChartTypes.AreaChart:\n      case ChartTypes.LineChart:\n        domainNRangeValue = domainRangeOfNumericForAreaChart(points, margins, width, isRTL);\n        break;\n      case ChartTypes.VerticalStackedBarChart:\n        domainNRangeValue = domainRangeOfVSBCNumeric(points, margins, width, isRTL, barWidth!);\n        break;\n      case ChartTypes.VerticalBarChart:\n        domainNRangeValue = domainRageOfVerticalNumeric(points, margins, width, isRTL, barWidth!);\n        break;\n      default:\n        domainNRangeValue = { dStartValue: 0, dEndValue: 0, rStartValue: 0, rEndValue: 0 };\n    }\n  } else if (xAxisType === XAxisTypes.DateAxis) {\n    switch (chartType) {\n      case ChartTypes.AreaChart:\n      case ChartTypes.LineChart:\n        domainNRangeValue = domainRangeOfDateForAreaChart(points, margins, width, isRTL, tickValues! as Date[]);\n        break;\n      default:\n        domainNRangeValue = { dStartValue: 0, dEndValue: 0, rStartValue: 0, rEndValue: 0 };\n    }\n  } else {\n    // String Axis type\n    switch (chartType) {\n      case ChartTypes.VerticalStackedBarChart:\n      case ChartTypes.GroupedVerticalBarChart:\n      case ChartTypes.VerticalBarChart:\n      case ChartTypes.HeatMapChart:\n        domainNRangeValue = domainRangeOfXStringAxis(margins, width, isRTL);\n        break;\n      default:\n        domainNRangeValue = { dStartValue: 0, dEndValue: 0, rStartValue: 0, rEndValue: 0 };\n    }\n  }\n  return domainNRangeValue;\n}\n\n/**\n * Calculating start and ending values of the Area chart and LineChart\n * @export\n * @param {ILineChartPoints[]} points\n * @returns {{ startValue: number; endValue: number }}\n */\nexport function findNumericMinMaxOfY(points: ILineChartPoints[]): { startValue: number; endValue: number } {\n  const yMax = d3Max(points, (point: ILineChartPoints) => {\n    return d3Max(point.data, (item: ILineChartDataPoint) => item.y)!;\n  })!;\n  const yMin = d3Min(points, (point: ILineChartPoints) => {\n    return d3Min(point.data, (item: ILineChartDataPoint) => item.y)!;\n  })!;\n\n  return {\n    startValue: yMin,\n    endValue: yMax,\n  };\n}\n\n/**\n * Find the minimum and maximum values of the vertical stacked bar chart y axis data point. Used for create y axis.\n * @export\n * @param {IDataPoint[]} dataset\n * @returns {{ startValue: number; endValue: number }}\n */\nexport function findVSBCNumericMinMaxOfY(dataset: IDataPoint[]): { startValue: number; endValue: number } {\n  const yMax = d3Max(dataset, (point: IDataPoint) => point.y)!;\n  const yMin = d3Min(dataset, (point: IDataPoint) => point.y)!;\n\n  return { startValue: yMin, endValue: yMax };\n}\n\n/**\n * Fins the min and max values of the vertical bar chart y axis data point.\n * @export\n * @param {IVerticalBarChartDataPoint[]} points\n * @returns {{ startValue: number; endValue: number }}\n */\nexport function findVerticalNumericMinMaxOfY(\n  points: IVerticalBarChartDataPoint[],\n): { startValue: number; endValue: number } {\n  const yMax = d3Max(points, (point: IVerticalBarChartDataPoint) => point.y)!;\n  const yMin = d3Min(points, (point: IVerticalBarChartDataPoint) => point.y)!;\n\n  return { startValue: yMin, endValue: yMax };\n}\n\n/**\n * For creating Y axis, need to calculate y axis domain values from given points. This may vary based on chart type.\n * So, this method will define which method need to call based on chart type to find out min and max values(For Domain).\n * For grouped vertical bar chart, Calculating yMax value in the base file and sending as MaxOfYVal to cartesian.\n * @export\n * @param {*} points\n * @param {ChartTypes} chartType\n * @returns {{ startValue: number; endValue: number }}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getMinMaxOfYAxis(points: any, chartType: ChartTypes): { startValue: number; endValue: number } {\n  let minMaxValues: { startValue: number; endValue: number };\n\n  switch (chartType) {\n    case ChartTypes.AreaChart:\n    case ChartTypes.LineChart:\n      minMaxValues = findNumericMinMaxOfY(points);\n      break;\n    case ChartTypes.VerticalStackedBarChart:\n      minMaxValues = findVSBCNumericMinMaxOfY(points);\n      break;\n    case ChartTypes.VerticalBarChart:\n      minMaxValues = findVerticalNumericMinMaxOfY(points);\n      break;\n    default:\n      minMaxValues = { startValue: 0, endValue: 0 };\n  }\n\n  return minMaxValues;\n}\n\n/**\n * @param p string or number or Date\n *\n * This function takes the single data point of the x-aixs\n * and decides what is the x-axis\n */\nexport const getTypeOfAxis = (p: string | number | Date, isXAsix: boolean): XAxisTypes | YAxisType => {\n  if (isXAsix) {\n    switch (typeof p) {\n      case 'string':\n        return XAxisTypes.StringAxis;\n      case 'number':\n        return XAxisTypes.NumericAxis;\n      default:\n        return XAxisTypes.DateAxis;\n    }\n  } else {\n    switch (typeof p) {\n      case 'string':\n        return YAxisType.StringAxis;\n      case 'number':\n        return YAxisType.NumericAxis;\n      default:\n        return YAxisType.DateAxis;\n    }\n  }\n};\n\n/**\n * we need to make sure that if we add any property to this, then\n * we need to also add that in  pointTypes below and vise-versa\n */\n\nexport enum Points {\n  circle,\n  square,\n  triangle,\n  diamond,\n  pyramid,\n  hexagon,\n  pentagon,\n  octagon,\n}\n\nexport enum CustomPoints {\n  dottedLine,\n}\n\nexport type PointTypes = {\n  [key in number]: {\n    /**\n     * For certian shapes like pentagon, hexagon and octagon.\n     * the width of the bouding box increase by the time of the\n     * length of the side, so when we want to render a pentagon\n     * having each side of length 7 units we need to decrease it's\n     * units by width ratio so that the bounding box width of the pentagon\n     * stays as 7\n     */\n    widthRatio: number;\n  };\n};\n\n/**\n * we need to make sure that if we add any property to this, then\n * we need to also add that in enum Point and vise-versa\n */\n\nexport const pointTypes: PointTypes = {\n  [Points.circle]: {\n    widthRatio: 1,\n  },\n  [Points.square]: {\n    widthRatio: 1,\n  },\n  [Points.triangle]: {\n    widthRatio: 1,\n  },\n  [Points.diamond]: {\n    widthRatio: 1,\n  },\n  [Points.pyramid]: {\n    widthRatio: 1,\n  },\n  [Points.hexagon]: {\n    widthRatio: 2,\n  },\n  [Points.pentagon]: {\n    widthRatio: 1.168,\n  },\n  [Points.octagon]: {\n    widthRatio: 2.414,\n  },\n};\n\n/**\n * @param accessibleData accessible data\n * @param role string to define role of tag\n * @param isDataFocusable boolean\n * function returns the accessibility data object\n */\nexport const getAccessibleDataObject = (\n  accessibleData?: IAccessibilityProps,\n  role: string = 'text',\n  isDataFocusable: boolean = true,\n) => {\n  accessibleData = accessibleData ?? {};\n  return {\n    role,\n    'data-is-focusable': isDataFocusable,\n    'aria-label': accessibleData!.ariaLabel,\n    'aria-labelledby': accessibleData!.ariaLabelledBy,\n    'aria-describedby': accessibleData!.ariaDescribedBy,\n  };\n};\n\ntype LocaleStringDataProps = number | string | Date | undefined;\nexport const convertToLocaleString = (data: LocaleStringDataProps, culture?: string): LocaleStringDataProps => {\n  if (!data) {\n    return data;\n  }\n  culture = culture || undefined;\n  if (typeof data === 'number') {\n    return data.toLocaleString(culture);\n  }\n  if (typeof data === 'string' && !window.isNaN(Number(data))) {\n    const num = Number(data);\n    return num.toLocaleString(culture);\n  }\n  return data;\n};\n\nexport function rotateXAxisLabels(rotateLabelProps: IRotateLabelProps) {\n  const { node, xAxis } = rotateLabelProps;\n  if (node === null || xAxis === null) {\n    return;\n  }\n\n  let maxHeight: number = 0;\n  const xAxisTranslations: string[] = [];\n  d3Select(node)\n    .call(xAxis)\n    .selectAll('.tick')\n    .each(function () {\n      const translateValue = (this as SVGElement).getAttribute('transform');\n      if (translateValue?.indexOf('rotate') === -1) {\n        const translatePair = translateValue\n          .substring(translateValue.indexOf('(') + 1, translateValue.indexOf(')'))\n          .split(',');\n        if (translatePair.length === 2) {\n          xAxisTranslations.push(translatePair[0]);\n          (this as SVGElement).setAttribute('transform', `translate(${translatePair[0]},0)rotate(-45)`);\n        }\n      }\n\n      const BoxCordinates = (this as HTMLElement).getBoundingClientRect();\n      const boxHeight = BoxCordinates && BoxCordinates.height;\n      if (boxHeight > maxHeight) {\n        maxHeight = boxHeight;\n      }\n    });\n\n  let idx = 0;\n  d3Select(node)\n    .call(xAxis)\n    .selectAll('.tick')\n    .each(function () {\n      if (xAxisTranslations.length > idx) {\n        (this as SVGElement).setAttribute(\n          'transform',\n          `translate(${xAxisTranslations[idx]},${maxHeight / 2})rotate(-45)`,\n        ); // Translate y by max height/2\n        idx += 1;\n      }\n    });\n\n  return Math.floor(maxHeight / 1.414); // Compute maxHeight/tanInverse(45) to get the vertical height of labels.\n}\n\nexport function wrapTextInsideDonut(selectorClass: string, maxWidth: number) {\n  let idx: number = 0;\n  d3SelectAll(`.${selectorClass}`).each(function () {\n    const text = d3Select(this);\n    const words = text.text().split(/\\s+/).reverse();\n    let word: string = '';\n    let line: string[] = [];\n    let lineNumber: number = 0;\n    const lineHeight = 1.1; // ems\n    const y = text.attr('y');\n\n    let tspan = text\n      .text(null)\n      .append('tspan')\n      .attr('id', `WordBreakId-${idx}-${lineNumber}`)\n      .attr('x', 0)\n      .attr('y', y)\n      .attr('dy', lineNumber++ * lineHeight + 'em');\n\n    while ((word = words.pop()!)) {\n      line.push(word);\n      tspan.text(line.join(' ') + ' ');\n      if (tspan.node()!.getComputedTextLength() > maxWidth && line.length > 1) {\n        line.pop();\n        tspan.text(line.join(' ') + ' ');\n        line = [word];\n        tspan = text\n          .append('tspan')\n          .attr('id', `WordBreakId-${idx}-${lineNumber}`)\n          .attr('x', 0)\n          .attr('y', y)\n          .attr('dy', lineNumber++ * lineHeight + 'em')\n          .text(word);\n      }\n    }\n    idx += 1;\n  });\n}\n"]}