{"version":3,"file":"VerticalStackedBarChart.base.js","sourceRoot":"../src/","sources":["components/VerticalStackedBarChart/VerticalStackedBarChart.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { max as d3Max, min as d3Min } from 'd3-array';\nimport { Axis as D3Axis } from 'd3-axis';\nimport { select as d3Select } from 'd3-selection';\nimport { scaleLinear as d3ScaleLinear, ScaleLinear as D3ScaleLinear, scaleBand as d3ScaleBand } from 'd3-scale';\nimport { classNamesFunction, getId, getRTL, warnDeprecations, memoizeFunction } from '@fluentui/react/lib/Utilities';\nimport { IPalette } from '@fluentui/react/lib/Styling';\nimport { DirectionalHint } from '@fluentui/react/lib/Callout';\nimport { ILegend, Legends } from '../Legends/index';\nimport {\n  IAccessibilityProps,\n  CartesianChart,\n  ChartHoverCard,\n  IBasestate,\n  IChildProps,\n  IDataPoint,\n  IMargins,\n  IVerticalStackedBarChartProps,\n  IVerticalStackedBarChartStyleProps,\n  IVerticalStackedBarChartStyles,\n  IVerticalStackedChartProps,\n  IVSChartDataPoint,\n  ILineDataInVerticalStackedBarChart,\n  IModifiedCartesianChartProps,\n} from '../../index';\nimport { FocusZoneDirection } from '@fluentui/react-focus';\nimport {\n  ChartTypes,\n  IAxisData,\n  getAccessibleDataObject,\n  XAxisTypes,\n  getTypeOfAxis,\n  tooltipOfXAxislabels,\n} from '../../utilities/index';\n\nconst getClassNames = classNamesFunction<IVerticalStackedBarChartStyleProps, IVerticalStackedBarChartStyles>();\ntype NumericAxis = D3Axis<number | { valueOf(): number }>;\ntype NumericScale = D3ScaleLinear<number, number>;\nconst COMPONENT_NAME = 'VERTICAL STACKED BAR CHART';\n\n// When displaying gaps between bars, the max height of the gap is given in the\n// props. The actual gap is calculated with this multiplier, with a minimum gap\n// of 1 pixel. (If these values are changed, update the comment for barGapMax.)\nconst barGapMultiplier = 0.2;\nconst barGapMin = 1;\n\ninterface IRefArrayData {\n  refElement?: SVGGElement | null;\n}\n\ntype LinePoint = ILineDataInVerticalStackedBarChart & { index: number; xItem: IVerticalStackedChartProps };\ntype LineObject = { [key: string]: LinePoint[] };\ntype LineLegends = {\n  title: string;\n  color: string;\n};\nenum CircleVisbility {\n  show = 'visibility',\n  hide = 'hidden',\n}\n\nexport interface IVerticalStackedBarChartState extends IBasestate {\n  dataPointCalloutProps?: IVSChartDataPoint;\n  stackCalloutProps?: IVerticalStackedChartProps;\n  activeXAxisDataPoint: number | string;\n  callOutAccessibilityData?: IAccessibilityProps;\n  calloutLegend: string;\n}\nexport class VerticalStackedBarChartBase extends React.Component<\n  IVerticalStackedBarChartProps,\n  IVerticalStackedBarChartState\n> {\n  private _points: IVerticalStackedChartProps[];\n  private _dataset: IDataPoint[];\n  private _xAxisLabels: string[];\n  private _bars: JSX.Element[];\n  private _xAxisType: XAxisTypes;\n  private _barWidth: number;\n  private _additionalSpace: number;\n  private _calloutId: string;\n  private _colors: string[];\n  private margins: IMargins;\n  private _isRtl: boolean = getRTL();\n  private _createLegendsForLine: (data: IVerticalStackedChartProps[]) => LineLegends[];\n  private _lineObject: LineObject;\n  private _tooltipId: string;\n  private _yMax: number;\n  private _calloutAnchorPoint: IVSChartDataPoint | null;\n\n  public constructor(props: IVerticalStackedBarChartProps) {\n    super(props);\n    this.state = {\n      isCalloutVisible: false,\n      selectedLegend: '',\n      activeLegend: '',\n      refSelected: null,\n      dataForHoverCard: 0,\n      color: '',\n      hoverXValue: '',\n      YValueHover: [],\n      xCalloutValue: '',\n      yCalloutValue: '',\n      activeXAxisDataPoint: '',\n      calloutLegend: '',\n    };\n    warnDeprecations(COMPONENT_NAME, props, {\n      colors: 'IVSChartDataPoint.color',\n      chartLabel: 'use your own title for chart',\n    });\n    this._handleMouseOut = this._handleMouseOut.bind(this);\n    this._calloutId = getId('callout');\n    this._tooltipId = getId('VSBCTooltipId_');\n    this._adjustProps();\n    this._dataset = this._createDataSetLayer();\n    this._createLegendsForLine = memoizeFunction((data: IVerticalStackedChartProps[]) => this._getLineLegends(data));\n  }\n\n  public componentDidUpdate(prevProps: IVerticalStackedBarChartProps): void {\n    if (\n      prevProps.height !== this.props.height ||\n      prevProps.width !== this.props.width ||\n      prevProps.data !== this.props.data\n    ) {\n      this._adjustProps();\n      this._dataset = this._createDataSetLayer();\n    }\n  }\n\n  public render(): React.ReactNode {\n    this._adjustProps();\n    const _isHavingLines = this.props.data.some(\n      (item: IVerticalStackedChartProps) => item.lineData && item.lineData.length > 0,\n    );\n    const shouldFocusWholeStack = this._toFocusWholeStack(_isHavingLines);\n    const { isCalloutForStack = false } = this.props;\n    this._dataset = this._createDataSetLayer();\n    const legendBars: JSX.Element = this._getLegendData(\n      this._points,\n      this.props.theme!.palette,\n      this._createLegendsForLine(this.props.data),\n    );\n\n    const calloutProps: IModifiedCartesianChartProps['calloutProps'] = {\n      isCalloutVisible: this.state.isCalloutVisible,\n      directionalHint: DirectionalHint.topAutoEdge,\n      id: `toolTip${this._calloutId}`,\n      target: this.state.refSelected,\n      isBeakVisible: false,\n      gapSpace: 15,\n      color: this.state.color,\n      legend: this.state.calloutLegend,\n      XValue: this.state.xCalloutValue!,\n      YValue: this.state.yCalloutValue ? this.state.yCalloutValue : this.state.dataForHoverCard,\n      YValueHover: this.state.YValueHover,\n      hoverXValue: this.state.hoverXValue,\n      onDismiss: this._closeCallout,\n      preventDismissOnLostFocus: true,\n      ...this.props.calloutProps,\n      ...getAccessibleDataObject(this.state.callOutAccessibilityData),\n    };\n    const tickParams = {\n      tickValues: this.props.tickValues,\n      tickFormat: this.props.tickFormat,\n    };\n\n    return (\n      <CartesianChart\n        {...this.props}\n        points={this._dataset}\n        chartType={ChartTypes.VerticalStackedBarChart}\n        xAxisType={this._xAxisType}\n        calloutProps={calloutProps}\n        tickParams={tickParams}\n        legendBars={legendBars}\n        datasetForXAxisDomain={this._xAxisLabels}\n        isCalloutForStack={shouldFocusWholeStack}\n        barwidth={this._barWidth}\n        focusZoneDirection={\n          isCalloutForStack || _isHavingLines ? FocusZoneDirection.horizontal : FocusZoneDirection.vertical\n        }\n        getmargins={this._getMargins}\n        getGraphData={this._getGraphData}\n        getAxisData={this._getAxisData}\n        customizedCallout={this._getCustomizedCallout()}\n        onChartMouseLeave={this._handleChartMouseLeave}\n        /* eslint-disable react/jsx-no-bind */\n        // eslint-disable-next-line react/no-children-prop\n        children={(props: IChildProps) => {\n          return (\n            <>\n              <g>{this._bars}</g>\n              <g>\n                {_isHavingLines &&\n                  this._createLines(props.xScale!, props.yScale!, props.containerHeight!, props.containerWidth!)}\n              </g>\n            </>\n          );\n        }}\n      />\n    );\n  }\n\n  /**\n   * This function tells us what to focus either the whole stack as focusable item.\n   * or each individual item in the stack as focusable item. basically it depends\n   * on the prop `isCalloutForStack` if it's false user can focus each individual bar\n   * within the bar if it's true then user can focus whole bar as item.\n   * but if we have lines in the chart then we force the user to focus only the whole\n   * bar, even if isCalloutForStack is false\n   */\n  private _toFocusWholeStack = (_isHavingLines: boolean): boolean => {\n    const { isCalloutForStack = false } = this.props;\n    let shouldFocusStackOnly: boolean = false;\n    if (_isHavingLines) {\n      if (this.state.selectedLegend !== '') {\n        shouldFocusStackOnly = false;\n      } else {\n        shouldFocusStackOnly = true;\n      }\n    } else {\n      shouldFocusStackOnly = isCalloutForStack;\n    }\n    return shouldFocusStackOnly;\n  };\n\n  private _getFormattedLineData = (data: IVerticalStackedChartProps[]): LineObject => {\n    const linesData: LinePoint[] = [];\n    const formattedLineData: LineObject = {};\n    data.forEach((item: IVerticalStackedChartProps, index: number) => {\n      if (item.lineData) {\n        // injecting corresponding x data point in each of the line data\n        // we inject index also , it will be helpful to draw lines when x axis is\n        // of string type\n        item.lineData.forEach(line => {\n          linesData.push({\n            ...line,\n            index,\n            xItem: item,\n          });\n        });\n      }\n    });\n    linesData.forEach(item => {\n      if (formattedLineData[item.legend]) {\n        formattedLineData[item.legend].push(item);\n      } else {\n        formattedLineData[item.legend] = [item];\n      }\n    });\n    return formattedLineData;\n  };\n\n  private _getLineLegends = (data: IVerticalStackedChartProps[]): LineLegends[] => {\n    const lineObject: LineObject = this._lineObject;\n    const lineLegends: LineLegends[] = [];\n    Object.keys(lineObject).forEach((item: string) => {\n      lineLegends.push({\n        title: item,\n        color: lineObject[item][0].color,\n      });\n    });\n    return lineLegends;\n  };\n\n  private _createLines = (\n    xScale: NumericScale,\n    yScale: NumericScale,\n    containerHeight: number,\n    containerWidth: number,\n  ): JSX.Element => {\n    const isNumeric = this._xAxisType === XAxisTypes.NumericAxis;\n    const { xBarScale } = this._getScales(containerHeight, containerWidth, isNumeric);\n    const lineObject: LineObject = this._getFormattedLineData(this.props.data);\n    const lines: React.ReactNode[] = [];\n    const borderForLines: React.ReactNode[] = [];\n    const dots: React.ReactNode[] = [];\n    const { theme } = this.props;\n    const lineBorderWidth = this.props.lineOptions?.lineBorderWidth\n      ? Number.parseFloat(this.props.lineOptions!.lineBorderWidth!.toString())\n      : 0;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const xScaleBandwidthTranslate = isNumeric ? 0 : (xBarScale as any).bandwidth() / 2;\n    Object.keys(lineObject).forEach((item: string, index: number) => {\n      const shouldHighlight = this._legendHighlighted(item) || this._noLegendHighlighted(); // item is legend name\n      for (let i = 1; i < lineObject[item].length; i++) {\n        const x1 = isNumeric\n          ? xScale(lineObject[item][i - 1].xItem.xAxisPoint as number)\n          : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (xBarScale as any)(lineObject[item][i - 1].xItem.xAxisPoint as string) + this._additionalSpace;\n        const y1 = yScale(lineObject[item][i - 1].y);\n        const x2 = isNumeric\n          ? xScale(lineObject[item][i].xItem.xAxisPoint as number)\n          : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (xBarScale as any)(lineObject[item][i].xItem.xAxisPoint as string) + this._additionalSpace;\n        const y2 = yScale(lineObject[item][i].y);\n\n        if (lineBorderWidth > 0) {\n          borderForLines.push(\n            <line\n              key={`${index}-${i}-BorderLine`}\n              x1={x1}\n              y1={y1}\n              x2={x2}\n              y2={y2}\n              opacity={shouldHighlight ? 1 : 0.1}\n              strokeWidth={3 + lineBorderWidth * 2}\n              fill=\"transparent\"\n              strokeLinecap=\"round\"\n              stroke={theme!.palette.white}\n              transform={`translate(${xScaleBandwidthTranslate}, 0)`}\n            />,\n          );\n        }\n        lines.push(\n          <line\n            key={`${index}-${i}-line`}\n            x1={x1}\n            y1={y1}\n            x2={x2}\n            y2={y2}\n            opacity={shouldHighlight ? 1 : 0.1}\n            strokeWidth={3}\n            strokeLinecap=\"round\"\n            stroke={lineObject[item][i].color}\n            transform={`translate(${xScaleBandwidthTranslate}, 0)`}\n            {...(this.state.selectedLegend === item && {\n              onMouseOver: this._lineHover.bind(this, lineObject[item][i - 1]),\n              onMouseLeave: this._lineHoverOut,\n            })}\n          />,\n        );\n      }\n    });\n    Object.keys(lineObject).forEach((item: string, index: number) => {\n      lineObject[item].forEach((circlePoint: LinePoint, subIndex: number) => {\n        dots.push(\n          <circle\n            key={`${index}-${subIndex}-dot`}\n            cx={\n              isNumeric\n                ? xScale(circlePoint.xItem.xAxisPoint as number)\n                : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                  (xBarScale as any)(circlePoint.xItem.xAxisPoint as string) + this._additionalSpace\n            }\n            cy={yScale(circlePoint.y)}\n            onMouseOver={\n              this.state.selectedLegend === item\n                ? this._lineHover.bind(this, circlePoint)\n                : this._onStackHover.bind(this, circlePoint.xItem)\n            }\n            {...(this.state.selectedLegend === item && {\n              onMouseLeave: this._lineHoverOut,\n            })}\n            r={this._getCircleVisibilityAndRadius(circlePoint.xItem.xAxisPoint, circlePoint.legend).radius}\n            stroke={circlePoint.color}\n            fill={this.props.theme!.palette.white}\n            strokeWidth={3}\n            visibility={this._getCircleVisibilityAndRadius(circlePoint.xItem.xAxisPoint, circlePoint.legend).visibility}\n            transform={`translate(${xScaleBandwidthTranslate}, 0)`}\n          />,\n        );\n      });\n    });\n    return (\n      <>\n        {borderForLines}\n        {lines}\n        {dots}\n      </>\n    );\n  };\n\n  private _getCircleVisibilityAndRadius = (\n    xAxispoint: string | number,\n    legend: string,\n  ): { visibility: CircleVisbility; radius: number } => {\n    const { selectedLegend, activeXAxisDataPoint } = this.state;\n    if (selectedLegend !== '') {\n      if (xAxispoint === activeXAxisDataPoint && selectedLegend === legend) {\n        return { visibility: CircleVisbility.show, radius: 8 };\n      } else if (selectedLegend === legend) {\n        return { visibility: CircleVisbility.show, radius: 0.3 };\n      } else {\n        return { visibility: CircleVisbility.hide, radius: 0 };\n      }\n    } else {\n      return {\n        visibility: activeXAxisDataPoint === xAxispoint ? CircleVisbility.show : CircleVisbility.hide,\n        radius: 8,\n      };\n    }\n  };\n\n  private _adjustProps(): void {\n    this._points = this.props.data || [];\n    this._barWidth = this.props.barWidth || 32;\n    this._additionalSpace = 0.5 * this._barWidth;\n    const { theme } = this.props;\n    const { palette } = theme!;\n    // eslint-disable-next-line deprecation/deprecation\n    this._colors = this.props.colors || [palette.blueLight, palette.blue, palette.blueMid, palette.red, palette.black];\n    this._xAxisType = getTypeOfAxis(this.props.data[0].xAxisPoint, true) as XAxisTypes;\n    this._lineObject = this._getFormattedLineData(this.props.data);\n  }\n\n  private _createDataSetLayer(): IDataPoint[] {\n    const tempArr: string[] = [];\n    const dataset: IDataPoint[] = this._points.map(singlePointData => {\n      let total: number = 0;\n      singlePointData.chartData!.forEach((point: IVSChartDataPoint) => {\n        total = total + point.data;\n      });\n      tempArr.push(singlePointData.xAxisPoint as string);\n      return {\n        x: singlePointData.xAxisPoint,\n        y: total,\n      };\n    });\n    this._xAxisLabels = tempArr;\n    return dataset;\n  }\n\n  private _getMargins = (margins: IMargins) => {\n    this.margins = margins;\n  };\n\n  private _renderCallout(props?: IVSChartDataPoint): JSX.Element | null {\n    return props ? (\n      <ChartHoverCard\n        XValue={props.xAxisCalloutData}\n        Legend={props.legend}\n        YValue={props.yAxisCalloutData}\n        color={props.color}\n        culture={this.props.culture}\n      />\n    ) : null;\n  }\n\n  private _getCustomizedCallout = () => {\n    const _isHavingLines = this.props.data.some(\n      (item: IVerticalStackedChartProps) => item.lineData && item.lineData.length > 0,\n    );\n    return this.props.onRenderCalloutPerStack\n      ? this.props.onRenderCalloutPerStack(this.state.stackCalloutProps)\n      : this.props.onRenderCalloutPerDataPoint && !_isHavingLines\n      ? this.props.onRenderCalloutPerDataPoint(this.state.dataPointCalloutProps, this._renderCallout)\n      : null;\n  };\n\n  private _onLegendClick(legendTitle: string): void {\n    if (this.state.selectedLegend === legendTitle) {\n      this.setState({\n        selectedLegend: '',\n      });\n    } else {\n      this.setState({\n        selectedLegend: legendTitle,\n      });\n    }\n  }\n\n  private _onLegendHover(legendTitle: string): void {\n    this.setState({\n      activeLegend: legendTitle,\n    });\n  }\n\n  private _onLegendLeave(): void {\n    this.setState({\n      activeLegend: '',\n    });\n  }\n\n  private _getLegendData(\n    data: IVerticalStackedChartProps[],\n    palette: IPalette,\n    lineLegends: LineLegends[],\n  ): JSX.Element {\n    if (this.props.hideLegend) {\n      return <></>;\n    }\n    const defaultPalette: string[] = [palette.blueLight, palette.blue, palette.blueMid, palette.red, palette.black];\n    const actions: ILegend[] = [];\n    const { allowHoverOnLegend = true } = this.props;\n\n    data.forEach((singleChartData: IVerticalStackedChartProps) => {\n      singleChartData.chartData.forEach((point: IVSChartDataPoint) => {\n        const color: string = point.color ? point.color : defaultPalette[Math.floor(Math.random() * 4 + 1)];\n        const checkSimilarLegends = actions.filter((leg: ILegend) => leg.title === point.legend && leg.color === color);\n        if (checkSimilarLegends!.length > 0) {\n          return;\n        }\n\n        const legend: ILegend = {\n          title: point.legend,\n          color: color,\n          action: () => {\n            this._onLegendClick(point.legend);\n          },\n          hoverAction: allowHoverOnLegend\n            ? () => {\n                this._handleChartMouseLeave();\n                this._onLegendHover(point.legend);\n              }\n            : undefined,\n          onMouseOutAction: allowHoverOnLegend ? () => this._onLegendLeave() : undefined,\n        };\n\n        actions.push(legend);\n      });\n    });\n    const legendsOfLine: ILegend[] = [];\n    if (lineLegends && lineLegends.length > 0) {\n      lineLegends.forEach((point: LineLegends) => {\n        const legend: ILegend = {\n          title: point.title,\n          color: point.color,\n          isLineLegendInBarChart: true,\n          action: () => {\n            this._onLegendClick(point.title);\n          },\n          hoverAction: allowHoverOnLegend\n            ? () => {\n                this._handleChartMouseLeave();\n                this._onLegendHover(point.title);\n              }\n            : undefined,\n          onMouseOutAction: allowHoverOnLegend ? () => this._onLegendLeave() : undefined,\n        };\n        legendsOfLine.push(legend);\n      });\n    }\n    const totalLegends: ILegend[] = legendsOfLine.concat(actions);\n    return (\n      <Legends\n        legends={totalLegends}\n        overflowProps={this.props.legendsOverflowProps}\n        enabledWrapLines={this.props.enabledLegendsWrapLines}\n        focusZonePropsInHoverCard={this.props.focusZonePropsForLegendsInHoverCard}\n        overflowText={this.props.legendsOverflowText}\n        {...this.props.legendProps}\n      />\n    );\n  }\n\n  private _onRectHover(\n    xAxisPoint: string,\n    point: IVSChartDataPoint,\n    color: string,\n    mouseEvent: React.MouseEvent<SVGElement>,\n  ): void {\n    mouseEvent.persist();\n    this._onRectFocusHover(xAxisPoint, point, color, mouseEvent);\n  }\n\n  private _onRectFocusHover(\n    xAxisPoint: string,\n    point: IVSChartDataPoint,\n    color: string,\n    refSelected: React.MouseEvent<SVGElement> | SVGGElement,\n  ): void {\n    if (this._calloutAnchorPoint !== point) {\n      this._calloutAnchorPoint = point;\n      this.setState({\n        refSelected,\n        /**\n         * Show the callout if highlighted bar is focused/hovered\n         * and Hide it if unhighlighted bar is focused/hovered\n         */\n        isCalloutVisible: this.state.selectedLegend === '' || this.state.selectedLegend === point.legend,\n        calloutLegend: point.legend,\n        dataForHoverCard: point.data,\n        color,\n        xCalloutValue: point.xAxisCalloutData ? point.xAxisCalloutData : xAxisPoint,\n        yCalloutValue: point.yAxisCalloutData,\n        dataPointCalloutProps: point,\n        callOutAccessibilityData: point.callOutAccessibilityData,\n      });\n    }\n  }\n\n  private _lineHover = (lineData: LinePoint, mouseEvent: React.MouseEvent<SVGElement>) => {\n    mouseEvent.persist();\n    this.setState({\n      refSelected: mouseEvent,\n      isCalloutVisible: true,\n      xCalloutValue: `${lineData.xItem.xAxisPoint}`,\n      yCalloutValue: `${lineData.yAxisCalloutData || lineData.data || lineData.y}`,\n      activeXAxisDataPoint: lineData.xItem.xAxisPoint,\n      color: lineData.color,\n    });\n  };\n\n  private _lineHoverOut = () => {\n    this.setState({\n      refSelected: null,\n      isCalloutVisible: false,\n      xCalloutValue: '',\n      yCalloutValue: '',\n      activeXAxisDataPoint: '',\n      color: '',\n    });\n  };\n\n  private _onStackHover(stack: IVerticalStackedChartProps, mouseEvent: React.MouseEvent<SVGElement>): void {\n    mouseEvent.persist();\n    this._onStackHoverFocus(stack, mouseEvent);\n  }\n\n  private _onStackHoverFocus(\n    stack: IVerticalStackedChartProps,\n    refSelected: React.MouseEvent<SVGElement> | SVGGElement,\n  ): void {\n    const lineData = stack.lineData;\n    const isLinesPresent: boolean = lineData !== undefined && lineData.length > 0;\n    if (isLinesPresent) {\n      lineData!.forEach((item: ILineDataInVerticalStackedBarChart & { shouldDrawBorderBottom?: boolean }) => {\n        item.data = item.data || item.y;\n        item.shouldDrawBorderBottom = true;\n      });\n    }\n    this.setState({\n      refSelected,\n      isCalloutVisible: true,\n      YValueHover: isLinesPresent\n        ? [...lineData!.sort((a, b) => (a.data! < b.data! ? 1 : -1)), ...stack.chartData.slice().reverse()]\n        : stack.chartData.slice().reverse(),\n      hoverXValue: stack.xAxisPoint,\n      stackCalloutProps: stack,\n      activeXAxisDataPoint: stack.xAxisPoint,\n      callOutAccessibilityData: stack.stackCallOutAccessibilityData,\n    });\n  }\n\n  private _onRectFocus(point: IVSChartDataPoint, xAxisPoint: string, color: string, ref: IRefArrayData): void {\n    if (ref.refElement) {\n      this._onRectFocusHover(xAxisPoint, point, color, ref.refElement);\n    }\n  }\n\n  private _onStackFocus(stack: IVerticalStackedChartProps, groupRef: IRefArrayData): void {\n    if (groupRef.refElement) {\n      this._onStackHoverFocus(stack, groupRef.refElement);\n    }\n  }\n\n  private _handleMouseOut = (): void => {\n    /**/\n  };\n\n  private _handleChartMouseLeave = (): void => {\n    this._calloutAnchorPoint = null;\n    this.setState({\n      isCalloutVisible: false,\n      activeXAxisDataPoint: '',\n    });\n  };\n\n  private _onClick(\n    data: IVerticalStackedChartProps | IVSChartDataPoint,\n    mouseEvent: React.MouseEvent<SVGElement>,\n  ): void {\n    this.props.onBarClick?.(mouseEvent, data);\n    this.props.href ? (window.location.href = this.props.href) : '';\n  }\n\n  private _getBarGapAndScale(\n    bars: IVSChartDataPoint[],\n    yBarScale: NumericScale,\n    defaultTotalHeight?: number,\n  ): {\n    readonly gapHeight: number;\n    readonly heightValueScale: number;\n  } {\n    const { barGapMax = 0 } = this.props;\n\n    // When displaying gaps between the bars, the height of each bar is\n    // adjusted so that the total of all bars is not changed by the gaps\n    const totalData = bars.reduce((iter, value) => iter + value.data, 0);\n    const totalHeight = defaultTotalHeight ?? yBarScale(totalData);\n    const gaps = barGapMax && bars.length - 1;\n    const gapHeight = gaps && Math.max(barGapMin, Math.min(barGapMax, (totalHeight * barGapMultiplier) / gaps));\n    const heightValueScale = (totalHeight - gapHeight * gaps) / totalData;\n\n    return {\n      gapHeight,\n      heightValueScale,\n    } as const;\n  }\n\n  private _createBar = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    xBarScale: any,\n    yBarScale: NumericScale,\n    containerHeight: number,\n    xElement: SVGElement,\n  ): JSX.Element[] => {\n    const { barCornerRadius = 0, barMinimumHeight = 0 } = this.props;\n    const _isHavingLines = this.props.data.some(\n      (item: IVerticalStackedChartProps) => item.lineData && item.lineData.length > 0,\n    );\n    const shouldFocusWholeStack = this._toFocusWholeStack(_isHavingLines);\n\n    const bars = this._points.map((singleChartData: IVerticalStackedChartProps, indexNumber: number) => {\n      let yPoint = containerHeight - this.margins.bottom!;\n      const xPoint = xBarScale(\n        this._xAxisType === XAxisTypes.NumericAxis\n          ? (singleChartData.xAxisPoint as number)\n          : (singleChartData.xAxisPoint as string),\n      );\n\n      // Removing datapoints with zero data\n      const barsToDisplay = singleChartData.chartData.filter(point => point.data > 0);\n\n      if (!barsToDisplay.length) {\n        return undefined;\n      }\n\n      const { gapHeight, heightValueScale } = this._getBarGapAndScale(barsToDisplay, yBarScale);\n\n      if (heightValueScale < 0) {\n        return undefined;\n      }\n\n      const singleBar = barsToDisplay.map((point: IVSChartDataPoint, index: number) => {\n        const color = point.color ? point.color : this._colors[index];\n        const ref: IRefArrayData = {};\n\n        const shouldHighlight = this._legendHighlighted(point.legend) || this._noLegendHighlighted() ? true : false;\n        const classNames = getClassNames(this.props.styles!, {\n          theme: this.props.theme!,\n          shouldHighlight: shouldHighlight,\n          href: this.props.href,\n        });\n        const rectFocusProps = !shouldFocusWholeStack && {\n          'data-is-focusable': !this.props.hideTooltip,\n          'aria-label': this._getAriaLabel(singleChartData, point),\n          onMouseOver: this._onRectHover.bind(this, singleChartData.xAxisPoint, point, color),\n          onMouseMove: this._onRectHover.bind(this, singleChartData.xAxisPoint, point, color),\n          onMouseLeave: this._handleMouseOut,\n          onFocus: this._onRectFocus.bind(this, point, singleChartData.xAxisPoint, color, ref),\n          onBlur: this._handleMouseOut,\n          onClick: this._onClick.bind(this, point),\n        };\n\n        let barHeight = heightValueScale * point.data;\n        if (barHeight < barMinimumHeight) {\n          barHeight = barMinimumHeight;\n        }\n        yPoint = yPoint - barHeight - (index ? gapHeight : 0);\n\n        const xScaleBandwidthTranslate = this._xAxisType === XAxisTypes.NumericAxis ? 0 : xBarScale.bandwidth() / 2;\n\n        // If set, apply the corner radius to the top of the final bar\n        if (barCornerRadius && barHeight > barCornerRadius && index === barsToDisplay.length - 1) {\n          return (\n            <path\n              key={index + indexNumber + `${shouldFocusWholeStack}`}\n              className={classNames.opacityChangeOnHover}\n              d={`\n                M ${xPoint} ${yPoint + barCornerRadius}\n                a ${barCornerRadius} ${barCornerRadius} 0 0 1 ${barCornerRadius} ${-barCornerRadius}\n                h ${this._barWidth - 2 * barCornerRadius}\n                a ${barCornerRadius} ${barCornerRadius} 0 0 1 ${barCornerRadius} ${barCornerRadius}\n                v ${barHeight - barCornerRadius}\n                h ${-this._barWidth}\n                z\n              `}\n              fill={color}\n              ref={e => (ref.refElement = e)}\n              transform={`translate(${xScaleBandwidthTranslate}, 0)`}\n              {...rectFocusProps}\n            />\n          );\n        }\n        if (barHeight < 1) {\n          return <React.Fragment key={index + indexNumber}> </React.Fragment>;\n        }\n        return (\n          <rect\n            key={index + indexNumber}\n            className={classNames.opacityChangeOnHover}\n            x={xPoint}\n            y={yPoint}\n            width={this._barWidth}\n            height={barHeight}\n            fill={color}\n            ref={e => (ref.refElement = e)}\n            {...rectFocusProps}\n            role=\"img\"\n            transform={`translate(${xScaleBandwidthTranslate}, 0)`}\n          />\n        );\n      });\n      const groupRef: IRefArrayData = {};\n      const stackFocusProps = shouldFocusWholeStack && {\n        'data-is-focusable': !this.props.hideTooltip,\n        'aria-label': this._getAriaLabel(singleChartData),\n        onMouseOver: this._onStackHover.bind(this, singleChartData),\n        onMouseMove: this._onStackHover.bind(this, singleChartData),\n        onMouseLeave: this._handleMouseOut,\n        onFocus: this._onStackFocus.bind(this, singleChartData, groupRef),\n        onBlur: this._handleMouseOut,\n        onClick: this._onClick.bind(this, singleChartData),\n        role: 'img',\n      };\n      return (\n        <g\n          key={indexNumber + `${shouldFocusWholeStack}`}\n          id={`${indexNumber}-singleBar`}\n          ref={e => (groupRef.refElement = e)}\n          {...stackFocusProps}\n        >\n          {singleBar}\n        </g>\n      );\n    });\n    const className = getClassNames(this.props.styles!, {\n      theme: this.props.theme!,\n    });\n    // Removing un wanted tooltip div from DOM, when prop not provided.\n    if (!this.props.showXAxisLablesTooltip) {\n      try {\n        document.getElementById(this._tooltipId) && document.getElementById(this._tooltipId)!.remove();\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n    }\n    // Used to display tooltip at x axis labels.\n    if (!this.props.wrapXAxisLables && this.props.showXAxisLablesTooltip) {\n      const xAxisElement = d3Select(xElement).call(xBarScale);\n      try {\n        document.getElementById(this._tooltipId) && document.getElementById(this._tooltipId)!.remove();\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n      const tooltipProps = {\n        tooltipCls: className.tooltip!,\n        id: this._tooltipId,\n        xAxis: xAxisElement,\n      };\n      xAxisElement && tooltipOfXAxislabels(tooltipProps);\n    }\n    return bars.filter((bar): bar is JSX.Element => !!bar);\n  };\n\n  private _getScales = (containerHeight: number, containerWidth: number, isNumeric: boolean) => {\n    const yMax = this._yMax;\n    const yBarScale = d3ScaleLinear()\n      .domain([0, yMax])\n      .range([0, containerHeight - this.margins.bottom! - this.margins.top!]);\n    if (isNumeric) {\n      const xMax = d3Max(this._dataset, (point: IDataPoint) => point.x as number)!;\n      const xMin = d3Min(this._dataset, (point: IDataPoint) => point.x as number)!;\n\n      const xBarScale = d3ScaleLinear()\n        .domain(this._isRtl ? [xMax, xMin] : [xMin, xMax])\n        .nice()\n        .range([this.margins.left!, containerWidth - this.margins.right! - this._barWidth]);\n\n      return { xBarScale, yBarScale };\n    } else {\n      const xBarScale = d3ScaleBand()\n        .domain(this._xAxisLabels)\n        .range([\n          this.margins.left! - this._additionalSpace,\n          containerWidth - this.margins.right! - this._additionalSpace,\n        ])\n        .padding(this.props.xAxisPadding || 0.1);\n\n      return { xBarScale, yBarScale };\n    }\n  };\n\n  private _createNumericBars = (\n    containerHeight: number,\n    containerWidth: number,\n    xElement: SVGElement,\n  ): JSX.Element[] => {\n    const { xBarScale, yBarScale } = this._getScales(containerHeight, containerWidth, true);\n\n    return this._createBar(xBarScale, yBarScale, containerHeight, xElement);\n  };\n\n  private _createStringBars = (\n    containerHeight: number,\n    containerWidth: number,\n    xElement: SVGElement,\n  ): JSX.Element[] => {\n    const { xBarScale, yBarScale } = this._getScales(containerHeight, containerWidth, false);\n\n    return this._createBar(xBarScale, yBarScale, containerHeight, xElement);\n  };\n\n  private _getGraphData = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    xScale: any,\n    yScale: NumericAxis,\n    containerHeight: number,\n    containerWidth: number,\n    xElement: SVGElement | null,\n  ) => {\n    return (this._bars =\n      this._xAxisType === XAxisTypes.NumericAxis\n        ? this._createNumericBars(containerHeight, containerWidth, xElement!)\n        : this._createStringBars(containerHeight, containerWidth, xElement!));\n  };\n\n  private _closeCallout = () => {\n    this.setState({\n      isCalloutVisible: false,\n    });\n  };\n\n  private _getAxisData = (yAxisData: IAxisData) => {\n    if (yAxisData && yAxisData.yAxisDomainValues.length) {\n      const { yAxisDomainValues: domainValue } = yAxisData;\n      this._yMax = Math.max(domainValue[domainValue.length - 1], this.props.yMaxValue || 0);\n    }\n  };\n\n  /**\n   * This function checks if the given legend is highlighted or not.\n   * A legend can be highlighted in 2 ways:\n   * 1. selection: if the user clicks on it\n   * 2. hovering: if there is no selected legend and the user hovers over it\n   */\n  private _legendHighlighted = (legendTitle: string) => {\n    return (\n      this.state.selectedLegend === legendTitle ||\n      (this.state.selectedLegend === '' && this.state.activeLegend === legendTitle)\n    );\n  };\n\n  /**\n   * This function checks if none of the legends is selected or hovered.\n   */\n  private _noLegendHighlighted = () => {\n    return this.state.selectedLegend === '' && this.state.activeLegend === '';\n  };\n\n  private _getAriaLabel = (singleChartData: IVerticalStackedChartProps, point?: IVSChartDataPoint): string => {\n    if (!point) {\n      /** if shouldFocusWholeStack is true */\n      const xValue = singleChartData.xAxisCalloutData || singleChartData.xAxisPoint;\n      const pointValues = singleChartData.chartData\n        .map(pt => {\n          const legend = pt.legend;\n          const yValue = pt.yAxisCalloutData || pt.data;\n          return `${legend}, ${yValue}.`;\n        })\n        .join(' ');\n      const lineValues = singleChartData.lineData\n        ?.map(ln => {\n          const legend = ln.legend;\n          const yValue = ln.yAxisCalloutData || ln.data || ln.y;\n          return `${legend}, ${yValue}.`;\n        })\n        .join(' ');\n      return (\n        singleChartData.stackCallOutAccessibilityData?.ariaLabel ||\n        `${xValue}. ${pointValues}` + (lineValues ? ` ${lineValues}` : '')\n      );\n    }\n    /** if shouldFocusWholeStack is false */\n    const xValue = singleChartData.xAxisCalloutData || point.xAxisCalloutData || singleChartData.xAxisPoint;\n    const legend = point.legend;\n    const yValue = point.yAxisCalloutData || point.data;\n    return point.callOutAccessibilityData?.ariaLabel || `${xValue}. ${legend}, ${yValue}.`;\n  };\n}\n"]}