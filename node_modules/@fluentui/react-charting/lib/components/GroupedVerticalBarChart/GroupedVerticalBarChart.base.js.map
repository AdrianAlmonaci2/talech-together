{"version":3,"file":"GroupedVerticalBarChart.base.js","sourceRoot":"../src/","sources":["components/GroupedVerticalBarChart/GroupedVerticalBarChart.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { max as d3Max } from 'd3-array';\nimport { select as d3Select } from 'd3-selection';\nimport { Axis as D3Axis } from 'd3-axis';\nimport { scaleBand as d3ScaleBand, scaleLinear as d3ScaleLinear } from 'd3-scale';\nimport { classNamesFunction, getId, getRTL, memoizeFunction, warnDeprecations } from '@fluentui/react/lib/Utilities';\nimport { IProcessedStyleSet, IPalette } from '@fluentui/react/lib/Styling';\nimport { DirectionalHint } from '@fluentui/react/lib/Callout';\nimport { FocusZoneDirection } from '@fluentui/react-focus';\nimport {\n  ChartTypes,\n  IAxisData,\n  getAccessibleDataObject,\n  tooltipOfXAxislabels,\n  XAxisTypes,\n  getTypeOfAxis,\n} from '../../utilities/index';\nimport {\n  IAccessibilityProps,\n  CartesianChart,\n  ILegend,\n  IGroupedVerticalBarChartData,\n  IGroupedVerticalBarChartProps,\n  IGroupedVerticalBarChartStyleProps,\n  IGroupedVerticalBarChartStyles,\n  IGVBarChartSeriesPoint,\n  IMargins,\n  IBasestate,\n  IRefArrayData,\n  Legends,\n} from '../../index';\n\nconst COMPONENT_NAME = 'GROUPED VERTICAL BAR CHART';\nconst BAR_SPACE = 2.5;\nconst getClassNames = classNamesFunction<IGroupedVerticalBarChartStyleProps, IGroupedVerticalBarChartStyles>();\ntype StringAxis = D3Axis<string>;\ntype NumericAxis = D3Axis<number | { valueOf(): number }>;\n\n// This interface used for - While forming datapoints from given prop \"data\" in code\ninterface IGVDataPoint {\n  [key: string]: number | string;\n}\n\n// While forming datapoints from given prop \"data\" in code. These datapoints are used for to draw graph easily.\ninterface IGVSingleDataPoint {\n  [key: string]: IGVDataPoint;\n}\nexport interface IGroupedVerticalBarChartState extends IBasestate {\n  dataPointCalloutProps?: IGVBarChartSeriesPoint;\n  callOutAccessibilityData?: IAccessibilityProps;\n  calloutLegend: string;\n}\n\nexport class GroupedVerticalBarChartBase extends React.Component<\n  IGroupedVerticalBarChartProps,\n  IGroupedVerticalBarChartState\n> {\n  private _createSet: (\n    data: IGroupedVerticalBarChartData[],\n  ) => // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  { keys: string[]; xAxisLabels: string[]; datasetForBars: any };\n  private _dataset: IGVDataPoint[];\n  private _keys: string[];\n  private _xAxisLabels: string[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _datasetForBars: any;\n  private margins: IMargins;\n  private _groupedVerticalBarGraph: JSX.Element[];\n  private _classNames: IProcessedStyleSet<IGroupedVerticalBarChartStyles>;\n  private _refArray: IRefArrayData[];\n  private _yMax: number;\n  private _calloutId: string;\n  private _tooltipId: string;\n  private _isNumeric: XAxisTypes;\n  private _isRtl: boolean = getRTL();\n  private _isCustomBarWidth: boolean;\n  private _x1TotalBandWidth: number;\n  private _calloutAnchorPoint: IGVBarChartSeriesPoint | null;\n\n  public constructor(props: IGroupedVerticalBarChartProps) {\n    super(props);\n    this._createSet = memoizeFunction((data: IGroupedVerticalBarChartData[]) => this._createDataSetOfGVBC(data));\n    this.state = {\n      color: '',\n      dataForHoverCard: 0,\n      isCalloutVisible: false,\n      refSelected: null,\n      selectedLegend: '',\n      xCalloutValue: '',\n      yCalloutValue: '',\n      YValueHover: [],\n      hoverXValue: '',\n      calloutLegend: '',\n      activeLegend: '',\n    };\n    warnDeprecations(COMPONENT_NAME, props, {\n      showYAxisGridLines: 'Dont use this property. Lines are drawn by default',\n      showXAxisPath: 'Dont use this property. Axis line removed default.',\n      showYAxisPath: 'Dont use this property. No need to display Y axis path. Handling default',\n      showXAxisGridLines: 'Dont use this property. Handling with default value.',\n      legendColor: 'Dont use this property. colour will pick from given data.',\n    });\n    this._refArray = [];\n    this._calloutId = getId('callout');\n    this._tooltipId = getId('GVBCTooltipId_');\n  }\n\n  public render(): React.ReactNode {\n    const points = this.props.data;\n    const { keys, xAxisLabels, datasetForBars } = this._createSet(points);\n    this._keys = keys;\n    this._xAxisLabels = xAxisLabels;\n    this._datasetForBars = datasetForBars;\n    this._isNumeric = getTypeOfAxis(points[0].name, true) as XAxisTypes;\n    const legends: JSX.Element = this._getLegendData(points, this.props.theme!.palette);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const yMax = d3Max(this._dataset, (point: any) => d3Max(this._keys, (key: string) => point[key]));\n    this._yMax = Math.max(yMax, this.props.yMaxValue || 0);\n    this._classNames = getClassNames(this.props.styles!, {\n      theme: this.props.theme!,\n      href: this.props.href!,\n    });\n    const calloutProps = {\n      target: this.state.refSelected,\n      isCalloutVisible: this.state.isCalloutVisible,\n      directionalHint: DirectionalHint.topAutoEdge,\n      id: `toolTip${this._calloutId}`,\n      gapSpace: 15,\n      isBeakVisible: false,\n      setInitialFocus: true,\n      color: this.state.color,\n      Legend: this.state.calloutLegend,\n      XValue: this.state.xCalloutValue,\n      YValue: this.state.yCalloutValue ? this.state.yCalloutValue : this.state.dataForHoverCard,\n      YValueHover: this.state.YValueHover,\n      hoverXValue: this.state.hoverXValue,\n      onDismiss: this._closeCallout,\n      ...this.props.calloutProps,\n      preventDismissOnLostFocus: true,\n      ...getAccessibleDataObject(this.state.callOutAccessibilityData, 'text', false),\n    };\n    const tickParams = {\n      tickValues: this.props.tickValues!,\n      tickFormat: this.props.tickFormat!,\n    };\n\n    return (\n      <CartesianChart\n        {...this.props}\n        points={this._datasetForBars}\n        chartType={ChartTypes.GroupedVerticalBarChart}\n        calloutProps={calloutProps}\n        legendBars={legends}\n        xAxisType={this._isNumeric}\n        datasetForXAxisDomain={this._xAxisLabels}\n        tickParams={tickParams}\n        tickPadding={this.props.tickPadding || 5}\n        maxOfYVal={this._yMax}\n        svgFocusZoneProps={{\n          direction: FocusZoneDirection.horizontal,\n        }}\n        customizedCallout={this._getCustomizedCallout()}\n        getmargins={this._getMargins}\n        getGraphData={this._getGraphData}\n        getAxisData={this._getAxisData}\n        onChartMouseLeave={this._handleChartMouseLeave}\n        /* eslint-disable react/jsx-no-bind */\n        // eslint-disable-next-line react/no-children-prop\n        children={() => {\n          return <g>{this._groupedVerticalBarGraph}</g>;\n        }}\n      />\n    );\n  }\n\n  private _getGraphData = (\n    xScale: StringAxis | NumericAxis,\n    yScale: NumericAxis,\n    containerHeight: number,\n    containerWidth: number,\n    xElement?: SVGElement | null,\n  ) => {\n    const xScale0 = this._createX0Scale(containerWidth);\n    const xScale1 = this._createX1Scale(xScale0);\n    const allGroupsBars: JSX.Element[] = [];\n    this._datasetForBars.forEach((singleSet: IGVSingleDataPoint) => {\n      allGroupsBars.push(this._buildGraph(singleSet, xScale0, xScale1, containerHeight, xElement!));\n    });\n    this._groupedVerticalBarGraph = allGroupsBars;\n  };\n\n  private _getMargins = (margins: IMargins) => (this.margins = margins);\n\n  private _createDataSetOfGVBC = (points: IGroupedVerticalBarChartData[]) => {\n    const keys: string[] = [];\n    const xAxisLabels: string[] = points.map(singlePoint => singlePoint.name);\n    points[0].series.forEach((singleKey: IGVBarChartSeriesPoint) => {\n      keys.push(singleKey.key);\n    });\n    const datasetForBars = this._createDataset(points);\n    return {\n      keys,\n      xAxisLabels,\n      datasetForBars,\n    };\n  };\n\n  private _getCustomizedCallout = () => {\n    return this.props.onRenderCalloutPerDataPoint\n      ? this.props.onRenderCalloutPerDataPoint(this.state.dataPointCalloutProps)\n      : null;\n  };\n\n  private _getOpacity = (legendTitle: string): string => {\n    const opacity = this._legendHighlighted(legendTitle) || this._noLegendHighlighted() ? '' : '0.1';\n    return opacity;\n  };\n\n  private _onBarHover = (\n    pointData: IGVBarChartSeriesPoint,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    groupData: any,\n    mouseEvent: React.MouseEvent<SVGElement>,\n  ): void => {\n    mouseEvent.persist();\n    if (this._calloutAnchorPoint !== pointData) {\n      this._calloutAnchorPoint = pointData;\n      this.setState({\n        refSelected: mouseEvent,\n        /** Show the callout if highlighted bar is hovered and Hide it if unhighlighted bar is hovered */\n        isCalloutVisible: this.state.selectedLegend === '' || this.state.selectedLegend === pointData.legend,\n        calloutLegend: pointData.legend,\n        dataForHoverCard: pointData.data,\n        color: pointData.color,\n        xCalloutValue: pointData.xAxisCalloutData,\n        yCalloutValue: pointData.yAxisCalloutData,\n        dataPointCalloutProps: pointData,\n        callOutAccessibilityData: this.props.isCalloutForStack\n          ? groupData.stackCallOutAccessibilityData\n          : pointData.callOutAccessibilityData,\n        YValueHover: groupData.groupSeries,\n        hoverXValue: pointData.xAxisCalloutData,\n      });\n    }\n  };\n\n  private _onBarLeave = (): void => {\n    /**/\n  };\n\n  private _handleChartMouseLeave = (): void => {\n    this._calloutAnchorPoint = null;\n    this.setState({ isCalloutVisible: false });\n  };\n\n  private _onBarFocus = (\n    pointData: IGVBarChartSeriesPoint,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    groupData: any,\n    refArrayIndexNumber: number,\n  ): void => {\n    this._refArray.forEach((obj: IRefArrayData, index: number) => {\n      if (obj.index === pointData.legend && refArrayIndexNumber === index) {\n        this.setState({\n          refSelected: obj.refElement,\n          /** Show the callout if highlighted bar is focused and Hide it if unhighlighted bar is focused */\n          isCalloutVisible: this.state.selectedLegend === '' || this.state.selectedLegend === pointData.legend,\n          calloutLegend: pointData.legend,\n          dataForHoverCard: pointData.data,\n          color: pointData.color,\n          xCalloutValue: pointData.xAxisCalloutData,\n          yCalloutValue: pointData.yAxisCalloutData,\n          dataPointCalloutProps: pointData,\n          callOutAccessibilityData: this.props.isCalloutForStack\n            ? groupData.stackCallOutAccessibilityData\n            : pointData.callOutAccessibilityData,\n          YValueHover: groupData.groupSeries,\n          hoverXValue: pointData.xAxisCalloutData,\n        });\n      }\n    });\n  };\n\n  private _redirectToUrl = (href: string | undefined): void => {\n    href ? (window.location.href = href) : '';\n  };\n\n  private _refCallback(element: SVGRectElement, legendTitle: string, refIndexNumber: number): void {\n    this._refArray[refIndexNumber] = { index: legendTitle, refElement: element };\n  }\n\n  private _buildGraph = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    singleSet: any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    xScale0: any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    xScale1: any,\n    containerHeight: number,\n    xElement: SVGElement,\n  ): JSX.Element => {\n    const singleGroup: JSX.Element[] = [];\n\n    const yBarScale = d3ScaleLinear()\n      .domain([0, this._yMax])\n      .range([0, containerHeight! - this.margins.bottom! - this.margins.top!]);\n\n    let widthOfBar: number;\n    if (this.props.barwidth && this.props.barwidth < xScale1.bandwidth()) {\n      widthOfBar = this.props.barwidth;\n    } else {\n      widthOfBar = xScale1.bandwidth();\n    }\n    const tempDataSet = Object.keys(this._datasetForBars[0]).splice(0, this._keys.length);\n    tempDataSet.forEach((datasetKey: string, index: number) => {\n      const refIndexNumber = singleSet.indexNum * tempDataSet.length + index;\n      const pointData = singleSet[datasetKey];\n      // Not rendering data with 0.\n      pointData.data &&\n        singleGroup.push(\n          <rect\n            className={this._classNames.opacityChangeOnHover}\n            key={`${singleSet.indexNum}-${index}`}\n            height={Math.max(yBarScale(pointData.data), 0)}\n            width={widthOfBar}\n            x={xScale1(datasetKey)!}\n            y={Math.max(containerHeight! - this.margins.bottom! - yBarScale(pointData.data), 0)}\n            data-is-focusable={!this.props.hideTooltip}\n            opacity={this._getOpacity(pointData.legend)}\n            ref={(e: SVGRectElement | null) => {\n              this._refCallback(e!, pointData.legend, refIndexNumber);\n            }}\n            fill={pointData.color}\n            onMouseOver={this._onBarHover.bind(this, pointData, singleSet)}\n            onMouseMove={this._onBarHover.bind(this, pointData, singleSet)}\n            onMouseOut={this._onBarLeave}\n            onFocus={this._onBarFocus.bind(this, pointData, singleSet, refIndexNumber)}\n            onBlur={this._onBarLeave}\n            onClick={this.props.href ? this._redirectToUrl.bind(this, this.props.href!) : pointData.onClick}\n            aria-label={this._getAriaLabel(pointData, singleSet.xAxisPoint)}\n            role=\"img\"\n          />,\n        );\n    });\n    // Used to display tooltip at x axis labels.\n    if (!this.props.wrapXAxisLables && this.props.showXAxisLablesTooltip) {\n      const xAxisElement = d3Select(xElement).call(xScale0);\n      try {\n        document.getElementById(this._tooltipId) && document.getElementById(this._tooltipId)!.remove();\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n      const tooltipProps = {\n        tooltipCls: this._classNames.tooltip!,\n        id: this._tooltipId,\n        xAxis: xAxisElement,\n      };\n      xAxisElement && tooltipOfXAxislabels(tooltipProps);\n    }\n    const customXScale = this._isCustomBarWidth ? (xScale0.bandwidth() - this._x1TotalBandWidth) / 2 : 0;\n    return (\n      <g key={singleSet.indexNum} transform={`translate(${xScale0(singleSet.xAxisPoint) + customXScale}, 0)`}>\n        {singleGroup}\n      </g>\n    );\n  };\n\n  private _createDataset = (points: IGroupedVerticalBarChartData[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const datasetForBars: any = [];\n    const dataset: IGVDataPoint[] = [];\n\n    points.forEach((point: IGroupedVerticalBarChartData, index: number) => {\n      const singleDatasetPoint: IGVDataPoint = {};\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const singleDatasetPointForBars: any = {};\n      const singleDataSeries: IGVBarChartSeriesPoint[] = [];\n\n      point.series.forEach((seriesPoint: IGVBarChartSeriesPoint) => {\n        singleDatasetPoint[seriesPoint.key] = seriesPoint.data;\n        singleDatasetPointForBars[seriesPoint.key] = {\n          ...seriesPoint,\n        };\n        singleDataSeries.push(seriesPoint);\n      });\n\n      singleDatasetPointForBars.xAxisPoint = point.name;\n      singleDatasetPointForBars.indexNum = index;\n      singleDatasetPointForBars.groupSeries = singleDataSeries;\n      singleDatasetPointForBars.stackCallOutAccessibilityData = point.stackCallOutAccessibilityData;\n      datasetForBars.push(singleDatasetPointForBars);\n      dataset.push(singleDatasetPoint);\n    });\n    this._dataset = dataset;\n    return datasetForBars;\n  };\n\n  // For grouped vertical bar chart, First need to define total scale (from start to end)\n  // From that need to define scale for single group of bars - done by createX1Scale\n  private _createX0Scale = (containerWidth: number) => {\n    const x0Axis = d3ScaleBand()\n      .domain(this._xAxisLabels)\n      .range(\n        this._isRtl\n          ? [containerWidth! - this.margins.right!, this.margins.left!]\n          : [this.margins.left!, containerWidth! - this.margins.right!],\n      )\n      .padding(0.1);\n    return x0Axis;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _createX1Scale = (xScale0: any): any => {\n    let bandWidth = xScale0.bandwidth();\n    if (this.props.barwidth) {\n      const tempDataSet = Object.keys(this._datasetForBars[0]).splice(0, this._keys.length);\n      const totalWidth = (this.props.barwidth! + BAR_SPACE) * tempDataSet.length;\n      this._isCustomBarWidth = totalWidth < xScale0.bandwidth();\n      bandWidth = this._isCustomBarWidth ? totalWidth : xScale0.bandwidth();\n      this._x1TotalBandWidth = bandWidth;\n    }\n\n    return d3ScaleBand()\n      .domain(this._keys)\n      .range(this._isRtl ? [bandWidth, 0] : [0, bandWidth])\n      .padding(0.05);\n  };\n\n  private _closeCallout = () => {\n    this.setState({\n      isCalloutVisible: false,\n    });\n  };\n\n  private _onLegendClick(legendTitle: string): void {\n    if (this.state.selectedLegend === legendTitle) {\n      this.setState({\n        selectedLegend: '',\n      });\n    } else {\n      this.setState({\n        selectedLegend: legendTitle,\n      });\n    }\n  }\n\n  private _onLegendHover(legendTitle: string): void {\n    this.setState({\n      activeLegend: legendTitle,\n    });\n  }\n\n  private _onLegendLeave(): void {\n    this.setState({\n      activeLegend: '',\n    });\n  }\n\n  private _getLegendData = (points: IGroupedVerticalBarChartData[], palette: IPalette): JSX.Element => {\n    const data = points;\n    const defaultPalette: string[] = [palette.blueLight, palette.blue, palette.blueMid, palette.red, palette.black];\n    const actions: ILegend[] = [];\n\n    data.forEach((singleChartData: IGroupedVerticalBarChartData) => {\n      singleChartData.series.forEach((point: IGVBarChartSeriesPoint) => {\n        const color: string = point.color ? point.color : defaultPalette[Math.floor(Math.random() * 4 + 1)];\n        const checkSimilarLegends = actions.filter((leg: ILegend) => leg.title === point.legend && leg.color === color);\n        if (checkSimilarLegends!.length > 0) {\n          return;\n        }\n        const legend: ILegend = {\n          title: point.legend,\n          color: color,\n          action: () => {\n            this._onLegendClick(point.legend);\n          },\n          hoverAction: () => {\n            this._handleChartMouseLeave();\n            this._onLegendHover(point.legend);\n          },\n          onMouseOutAction: () => {\n            this._onLegendLeave();\n          },\n        };\n\n        actions.push(legend);\n      });\n    });\n    return (\n      <Legends\n        legends={actions}\n        overflowProps={this.props.legendsOverflowProps}\n        enabledWrapLines={this.props.enabledLegendsWrapLines}\n        focusZonePropsInHoverCard={this.props.focusZonePropsForLegendsInHoverCard}\n        {...this.props.legendProps}\n      />\n    );\n  };\n\n  private _getAxisData = (yAxisData: IAxisData) => {\n    if (yAxisData && yAxisData.yAxisDomainValues.length) {\n      const { yAxisDomainValues: domainValue } = yAxisData;\n      this._yMax = Math.max(domainValue[domainValue.length - 1], this.props.yMaxValue || 0);\n    }\n  };\n\n  /**\n   * This function checks if the given legend is highlighted or not.\n   * A legend can be highlighted in 2 ways:\n   * 1. selection: if the user clicks on it\n   * 2. hovering: if there is no selected legend and the user hovers over it\n   */\n  private _legendHighlighted = (legendTitle: string) => {\n    return (\n      this.state.selectedLegend === legendTitle ||\n      (this.state.selectedLegend === '' && this.state.activeLegend === legendTitle)\n    );\n  };\n\n  /**\n   * This function checks if none of the legends is selected or hovered.\n   */\n  private _noLegendHighlighted = () => {\n    return this.state.selectedLegend === '' && this.state.activeLegend === '';\n  };\n\n  private _getAriaLabel = (point: IGVBarChartSeriesPoint, xAxisPoint: string): string => {\n    const xValue = point.xAxisCalloutData || xAxisPoint;\n    const legend = point.legend;\n    const yValue = point.yAxisCalloutData || point.data;\n    return point.callOutAccessibilityData?.ariaLabel || `${xValue}. ${legend}, ${yValue}.`;\n  };\n}\n"]}