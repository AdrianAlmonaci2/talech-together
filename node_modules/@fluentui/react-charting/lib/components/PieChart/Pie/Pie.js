import { __extends } from "tslib";
import * as React from 'react';
import * as shape from 'd3-shape';
import * as scale from 'd3-scale';
import { LabeledArc } from '../Arc/Arc';
var Pie = /** @class */ (function (_super) {
    __extends(Pie, _super);
    function Pie(props) {
        var _this = _super.call(this, props) || this;
        _this.arcGenerator = function (d, i) {
            return (React.createElement(LabeledArc, { culture: _this.props.culture, key: i, data: d, innerRadius: _this.props.innerRadius, outerRadius: _this.props.outerRadius, color: "" + _this.colors(i) }));
        };
        return _this;
    }
    Pie.prototype.render = function () {
        var _this = this;
        // const getClassNames = classNamesFunction<IPieProps, IPieStyles>();
        var _a = this.props, pie = _a.pie, colors = _a.colors, data = _a.data, width = _a.width, height = _a.height, chartTitle = _a.chartTitle;
        this.colors = scale.scaleOrdinal().range(colors);
        var piechart = pie(data);
        var translate = "translate(" + width / 2 + ", " + height / 2 + ")";
        return (React.createElement("svg", { width: width, height: height, "aria-label": chartTitle },
            React.createElement("g", { transform: translate }, piechart.map(function (d, i) { return _this.arcGenerator(d, i); }))));
    };
    Pie.defaultProps = {
        pie: shape
            .pie()
            .sort(null)
            /* eslint-disable @typescript-eslint/no-explicit-any */
            .value(function (d) { return d.y; }),
    };
    return Pie;
}(React.Component));
export { Pie };
//# sourceMappingURL=Pie.js.map