{"version":3,"file":"ChartHoverCard.types.js","sourceRoot":"../src/","sources":["utilities/ChartHoverCard/ChartHoverCard.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ITheme, IStyle, IStyleFunctionOrObject } from '@fluentui/react';\nexport interface IChartHoverCardProps {\n  /**\n   * X  value for hover card\n   */\n  XValue?: string;\n\n  /**\n   * Y value for hover card\n   */\n  YValue?: string | number | Date;\n\n  /**\n   * Legend value  for hover card\n   */\n  Legend?: string | number | Date;\n\n  /**\n   * color for hover card\n   */\n  color?: string;\n  /**\n   * ratio to show\n   * first number is numerator\n   * and second number is denominator\n   */\n  ratio?: [number, number];\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n  /**\n   * description message in the callout\n   */\n  descriptionMessage?: string;\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IChartHoverCardStyleProps, IChartHoverCardStyles>;\n\n  /**\n   * The prop used to define the culture to localized the numbers\n   */\n  culture?: string;\n}\n\nexport interface IChartHoverCardStyles {\n  /**\n   * styles for callout root-content\n   */\n  calloutContentRoot?: IStyle;\n\n  /**\n   * styles for callout Date time container\n   */\n  calloutDateTimeContainer?: IStyle;\n\n  /**\n   * styles for callout Date time container\n   */\n  calloutInfoContainer?: IStyle;\n\n  /**\n   * styles for callout Date time container\n   */\n  calloutBlockContainer?: IStyle;\n\n  /**\n   * styles for callout y-content\n   */\n  calloutlegendText?: IStyle;\n\n  /**\n   * styles for callout x-content\n   */\n  calloutContentX?: IStyle;\n  /**\n   * styles for callout y-content\n   */\n  calloutContentY?: IStyle;\n  /**\n   * styles for denomination\n   */\n  ratio?: IStyle;\n  /**\n   * styles for numerator\n   */\n  numerator?: IStyle;\n  /**\n   * styles for denominator\n   */\n  denominator?: IStyle;\n  /**\n   * styles for the description\n   */\n  descriptionMessage?: IStyle;\n}\n\nexport interface IChartHoverCardStyleProps {\n  /**\n   * Theme (provided through customization.)\n   */\n  theme: ITheme;\n\n  /**\n   * color for hover card\n   */\n  color?: string;\n\n  /**\n   * X  value for hover card\n   */\n  XValue?: string;\n\n  /**\n   * indicate if denomination is present\n   */\n  isRatioPresent?: boolean;\n}\n"]}