define(["require", "exports", "tslib", "react", "@fluentui/react", "../index"], function (require, exports, tslib_1, React, react_1, index_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ChartHoverCardBase = void 0;
    var getClassNames = react_1.classNamesFunction();
    var ChartHoverCardBase = /** @class */ (function (_super) {
        tslib_1.__extends(ChartHoverCardBase, _super);
        function ChartHoverCardBase() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ChartHoverCardBase.prototype.render = function () {
            var _a = this.props, color = _a.color, Legend = _a.Legend, XValue = _a.XValue, YValue = _a.YValue, styles = _a.styles, theme = _a.theme, ratio = _a.ratio, descriptionMessage = _a.descriptionMessage, culture = _a.culture;
            this._classNames = getClassNames(styles, {
                theme: theme,
                color: color,
                XValue: XValue,
                isRatioPresent: !!ratio,
            });
            return (React.createElement("div", { className: this._classNames.calloutContentRoot },
                React.createElement("div", { className: this._classNames.calloutDateTimeContainer },
                    React.createElement("div", { className: this._classNames.calloutContentX },
                        XValue,
                        " ")),
                React.createElement("div", { className: this._classNames.calloutInfoContainer },
                    React.createElement("div", { className: this._classNames.calloutBlockContainer },
                        React.createElement("div", { className: this._classNames.calloutlegendText }, index_1.convertToLocaleString(Legend, culture)),
                        React.createElement("div", { className: this._classNames.calloutContentY }, index_1.convertToLocaleString(YValue, culture))),
                    !!ratio && (React.createElement("div", { className: this._classNames.ratio },
                        React.createElement(React.Fragment, null,
                            React.createElement("span", { className: this._classNames.numerator }, index_1.convertToLocaleString(ratio[0], culture)),
                            "/",
                            React.createElement("span", { className: this._classNames.denominator }, index_1.convertToLocaleString(ratio[1], culture)))))),
                !!descriptionMessage && React.createElement("div", { className: this._classNames.descriptionMessage }, descriptionMessage)));
        };
        return ChartHoverCardBase;
    }(React.Component));
    exports.ChartHoverCardBase = ChartHoverCardBase;
});
//# sourceMappingURL=ChartHoverCard.base.js.map