define(["require", "exports", "@fluentui/react/lib/Styling"], function (require, exports, Styling_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getChartHoverCardStyles = void 0;
    var getChartHoverCardStyles = function (props) {
        var color = props.color, XValue = props.XValue, theme = props.theme, _a = props.isRatioPresent, isRatioPresent = _a === void 0 ? false : _a;
        return {
            calloutContentRoot: [
                {
                    display: 'grid',
                    overflow: 'hidden',
                    padding: '11px 16px 10px 16px',
                    backgroundColor: theme.semanticColors.bodyBackground,
                    backgroundBlendMode: 'normal, luminosity',
                },
            ],
            calloutDateTimeContainer: {
                display: 'flex',
                flexDirection: 'row',
                justifyContent: 'space-between',
            },
            calloutContentX: [
                theme.fonts.small,
                {
                    lineHeight: '16px',
                    opacity: '0.8',
                    color: theme.semanticColors.bodySubtext,
                },
            ],
            calloutBlockContainer: [
                theme.fonts.xxLarge,
                {
                    marginTop: XValue ? '13px' : 'unset',
                    paddingLeft: '8px',
                    lineHeight: '22px',
                    color: theme.semanticColors.bodyText,
                    borderLeft: "4px solid " + color,
                },
            ],
            calloutlegendText: [
                theme.fonts.small,
                {
                    lineHeight: '16px',
                    color: theme.semanticColors.bodyText,
                },
            ],
            calloutContentY: [
                theme.fonts.xxLarge,
                {
                    color: color ? color : theme.semanticColors.bodyText,
                    fontWeight: 'bold',
                    lineHeight: '36px',
                },
            ],
            calloutInfoContainer: [
                isRatioPresent && {
                    display: 'flex',
                    alignItems: 'flex-end',
                },
            ],
            ratio: [
                theme.fonts.small,
                {
                    marginLeft: '6px',
                    color: theme.semanticColors.bodyText,
                },
            ],
            numerator: {
                fontWeight: Styling_1.FontWeights.bold,
            },
            denominator: {
                fontWeight: Styling_1.FontWeights.semibold,
            },
            descriptionMessage: [
                theme.fonts.small,
                {
                    color: theme.semanticColors.bodyText,
                    marginTop: '10px',
                    paddingTop: '10px',
                    borderTop: "1px solid " + theme.semanticColors.menuDivider,
                },
            ],
        };
    };
    exports.getChartHoverCardStyles = getChartHoverCardStyles;
});
//# sourceMappingURL=ChartHoverCard.styles.js.map