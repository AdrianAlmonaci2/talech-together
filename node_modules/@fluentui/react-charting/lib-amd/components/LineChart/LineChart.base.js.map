{"version":3,"file":"LineChart.base.js","sourceRoot":"../src/","sources":["components/LineChart/LineChart.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Axis as D3Axis } from 'd3-axis';\nimport { select as d3Select, clientPoint } from 'd3-selection';\nimport { bisector } from 'd3-array';\nimport { ILegend, Legends } from '../Legends/index';\nimport { line as d3Line, curveLinear as d3curveLinear } from 'd3-shape';\nimport { classNamesFunction, getId, find } from '@fluentui/react/lib/Utilities';\nimport {\n  IAccessibilityProps,\n  CartesianChart,\n  IBasestate,\n  IChildProps,\n  ILineChartProps,\n  ILineChartPoints,\n  ICustomizedCalloutData,\n  IMargins,\n  IRefArrayData,\n  IColorFillBarsProps,\n  ILineChartStyleProps,\n  ILineChartStyles,\n  ILineChartGap,\n  ILineChartDataPoint,\n} from '../../index';\nimport { DirectionalHint } from '@fluentui/react/lib/Callout';\nimport { EventsAnnotation } from './eventAnnotation/EventAnnotation';\nimport {\n  calloutData,\n  ChartTypes,\n  getXAxisType,\n  XAxisTypes,\n  tooltipOfXAxislabels,\n  Points,\n  pointTypes,\n  getMinMaxOfYAxis,\n  getTypeOfAxis,\n} from '../../utilities/index';\n\ntype NumericAxis = D3Axis<number | { valueOf(): number }>;\nconst getClassNames = classNamesFunction<ILineChartStyleProps, ILineChartStyles>();\n\nenum PointSize {\n  hoverSize = 11,\n  invisibleSize = 1,\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst bisect = bisector((d: any) => d.x).left;\n\nconst DEFAULT_LINE_STROKE_SIZE = 4;\n// The given shape of a icon must be 2.5 times bigger than line width (known as stroke width)\nconst PATH_MULTIPLY_SIZE = 2.5;\n\n/**\n *\n * @param x units from origin\n * @param y units from origin\n * @param w is the legnth of the each side of a shape\n * @param index index to get the shape path\n */\nconst _getPointPath = (x: number, y: number, w: number, index: number): string => {\n  const allPointPaths = [\n    // circle path\n    `M${x - w / 2} ${y}\n     A${w / 2} ${w / 2} 0 1 0 ${x + w / 2} ${y}\n     M${x - w / 2} ${y}\n     A ${w / 2} ${w / 2} 0 1 1 ${x + w / 2} ${y}\n     `,\n    //square\n    `M${x - w / 2} ${y - w / 2}\n     L${x + w / 2} ${y - w / 2}\n     L${x + w / 2} ${y + w / 2}\n     L${x - w / 2} ${y + w / 2}\n     Z`,\n    //triangle\n    `M${x - w / 2} ${y - 0.2886 * w}\n     H ${x + w / 2}\n     L${x} ${y + 0.5774 * w} Z`,\n    //diamond\n    `M${x} ${y - w / 2}\n     L${x + w / 2} ${y}\n     L${x} ${y + w / 2}\n     L${x - w / 2} ${y}\n     Z`,\n    //pyramid\n    `M${x} ${y - 0.5774 * w}\n     L${x + w / 2} ${y + 0.2886 * w}\n     L${x - w / 2} ${y + 0.2886 * w} Z`,\n    //hexagon\n    `M${x - 0.5 * w} ${y - 0.866 * w}\n     L${x + 0.5 * w} ${y - 0.866 * w}\n     L${x + w} ${y}\n     L${x + 0.5 * w} ${y + 0.866 * w}\n     L${x - 0.5 * w} ${y + 0.866 * w}\n     L${x - w} ${y}\n     Z`,\n    //pentagon\n    `M${x} ${y - 0.851 * w}\n     L${x + 0.6884 * w} ${y - 0.2633 * w}\n     L${x + 0.5001 * w} ${y + 0.6884 * w}\n     L${x - 0.5001 * w} ${y + 0.6884 * w}\n     L${x - 0.6884 * w} ${y - 0.2633 * w}\n     Z`,\n    //octagon\n    `M${x - 0.5001 * w} ${y - 1.207 * w}\n     L${x + 0.5001 * w} ${y - 1.207 * w}\n     L${x + 1.207 * w} ${y - 0.5001 * w}\n     L${x + 1.207 * w} ${y + 0.5001 * w}\n     L${x + 0.5001 * w} ${y + 1.207 * w}\n     L${x - 0.5001 * w} ${y + 1.207 * w}\n     L${x - 1.207 * w} ${y + 0.5001 * w}\n     L${x - 1.207 * w} ${y - 0.5001 * w}\n     Z`,\n  ];\n  return allPointPaths[index];\n};\n\ntype LineChartDataWithIndex = ILineChartPoints & { index: number };\n\nexport interface ILineChartState extends IBasestate {\n  // This array contains data of selected legends for points\n  selectedLegendPoints: LineChartDataWithIndex[];\n  // This array contains data of selected legends for color bars\n  selectedColorBarLegend: IColorFillBarsProps[];\n  // This is a boolean value which is set to true\n  // when at least one legend is selected\n  isSelectedLegend: boolean;\n  // This value will be used as customized callout props - point callout.\n  dataPointCalloutProps?: ICustomizedCalloutData;\n  // This value will be used as Customized callout props - For stack callout.\n  stackCalloutProps?: ICustomizedCalloutData;\n  // active or hovered point\n  activePoint?: string;\n  // x-axis callout accessibility data\n  xAxisCalloutAccessibilityData?: IAccessibilityProps;\n\n  nearestCircleToHighlight: ILineChartDataPoint | null;\n\n  activeLine: number | null;\n}\n\nexport class LineChartBase extends React.Component<ILineChartProps, ILineChartState> {\n  private _points: LineChartDataWithIndex[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _calloutPoints: any[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _xAxisScale: any = '';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _yAxisScale: any = '';\n  private _circleId: string;\n  private _lineId: string;\n  private _borderId: string;\n  private _verticalLine: string;\n  private _colorFillBarPatternId: string;\n  private _uniqueCallOutID: string | null;\n  private _refArray: IRefArrayData[];\n  private margins: IMargins;\n  private eventLabelHeight: number = 36;\n  private lines: JSX.Element[];\n  private _renderedColorFillBars: JSX.Element[];\n  private _colorFillBars: IColorFillBarsProps[];\n  private _tooltipId: string;\n  private _rectId: string;\n  private _staticHighlightCircle: string;\n\n  constructor(props: ILineChartProps) {\n    super(props);\n    this.state = {\n      hoverXValue: '',\n      activeLegend: '',\n      YValueHover: [],\n      refSelected: '',\n      selectedLegend: '',\n      isCalloutVisible: false,\n      selectedLegendPoints: [],\n      selectedColorBarLegend: [],\n      isSelectedLegend: false,\n      activePoint: '',\n      nearestCircleToHighlight: null,\n      activeLine: null,\n    };\n    this._refArray = [];\n    this._points = this._injectIndexPropertyInLineChartData(this.props.data.lineChartData);\n    this._colorFillBars = [];\n    this._calloutPoints = calloutData(this._points) || [];\n    this._circleId = getId('circle');\n    this._lineId = getId('lineID');\n    this._borderId = getId('borderID');\n    this._verticalLine = getId('verticalLine');\n    this._colorFillBarPatternId = getId('colorFillBarPattern');\n    this._tooltipId = getId('LineChartTooltipId_');\n    this._rectId = getId('containerRectLD');\n    this._staticHighlightCircle = getId('staticHighlightCircle');\n\n    props.eventAnnotationProps &&\n      props.eventAnnotationProps.labelHeight &&\n      (this.eventLabelHeight = props.eventAnnotationProps.labelHeight);\n  }\n\n  public componentDidUpdate(prevProps: ILineChartProps): void {\n    /** note that height and width are not used to resize or set as dimesions of the chart,\n     * fitParentContainer is responisble for setting the height and width or resizing of the svg/chart\n     */\n    if (\n      prevProps.height !== this.props.height ||\n      prevProps.width !== this.props.width ||\n      prevProps.data !== this.props.data\n    ) {\n      this._points = this._injectIndexPropertyInLineChartData(this.props.data.lineChartData);\n      this._calloutPoints = calloutData(this._points) || [];\n    }\n  }\n\n  public render(): JSX.Element {\n    const { tickValues, tickFormat, eventAnnotationProps, legendProps, data } = this.props;\n    this._points = this._injectIndexPropertyInLineChartData(data.lineChartData);\n\n    const isXAxisDateType = getXAxisType(this._points);\n    let points = this._points;\n    if (legendProps && !!legendProps.canSelectMultipleLegends) {\n      points = this.state.selectedLegendPoints.length >= 1 ? this.state.selectedLegendPoints : this._points;\n      this._calloutPoints = calloutData(points);\n    }\n\n    const legendBars = this._createLegends(this._points!);\n    const calloutProps = {\n      isCalloutVisible: this.state.isCalloutVisible,\n      directionalHint: DirectionalHint.topAutoEdge,\n      YValueHover: this.state.YValueHover,\n      hoverXValue: this.state.hoverXValue,\n      id: `toolTip${this._uniqueCallOutID}`,\n      target: this.state.refSelected,\n      isBeakVisible: false,\n      gapSpace: 15,\n      onDismiss: this._closeCallout,\n      preventDismissOnEvent: () => true,\n      hidden: !(!this.props.hideTooltip && this.state.isCalloutVisible),\n      descriptionMessage:\n        this.props.getCalloutDescriptionMessage && this.state.stackCalloutProps\n          ? this.props.getCalloutDescriptionMessage(this.state.stackCalloutProps)\n          : undefined,\n      'data-is-focusable': true,\n      xAxisCalloutAccessibilityData: this.state.xAxisCalloutAccessibilityData,\n      ...this.props.calloutProps,\n    };\n    const tickParams = {\n      tickValues: tickValues,\n      tickFormat: tickFormat,\n    };\n\n    return (\n      <CartesianChart\n        {...this.props}\n        chartTitle={data.chartTitle}\n        points={points}\n        chartType={ChartTypes.LineChart}\n        isCalloutForStack\n        calloutProps={calloutProps}\n        tickParams={tickParams}\n        legendBars={legendBars}\n        getmargins={this._getMargins}\n        getGraphData={this._initializeLineChartData}\n        xAxisType={isXAxisDateType ? XAxisTypes.DateAxis : XAxisTypes.NumericAxis}\n        customizedCallout={this._getCustomizedCallout()}\n        onChartMouseLeave={this._handleChartMouseLeave}\n        /* eslint-disable react/jsx-no-bind */\n        // eslint-disable-next-line react/no-children-prop\n        children={(props: IChildProps) => {\n          this._xAxisScale = props.xScale!;\n          this._yAxisScale = props.yScale!;\n          return (\n            <>\n              <g>\n                <line\n                  x1={0}\n                  y1={0}\n                  x2={0}\n                  y2={props.containerHeight}\n                  stroke={'#C8C8C8'}\n                  id={this._verticalLine}\n                  visibility={'hidden'}\n                  strokeDasharray={'5,5'}\n                />\n                {this.props.optimizeLargeData ? (\n                  <rect\n                    id={this._rectId}\n                    width={props.containerWidth}\n                    height={props.containerHeight}\n                    fill={'transparent'}\n                  />\n                ) : (\n                  <></>\n                )}\n                <g>\n                  {this._renderedColorFillBars}\n                  {this.lines}\n                </g>\n                {eventAnnotationProps && (\n                  <EventsAnnotation\n                    {...eventAnnotationProps}\n                    scale={props.xScale!}\n                    chartYTop={this.margins.top! + this.eventLabelHeight}\n                    chartYBottom={props.containerHeight! - 35}\n                  />\n                )}\n              </g>\n            </>\n          );\n        }}\n      />\n    );\n  }\n\n  private _injectIndexPropertyInLineChartData = (lineChartData?: ILineChartPoints[]): LineChartDataWithIndex[] | [] => {\n    const { allowMultipleShapesForPoints = false } = this.props;\n    return lineChartData\n      ? lineChartData.map((item: ILineChartPoints, index: number) => ({\n          ...item,\n          index: allowMultipleShapesForPoints ? index : -1,\n        }))\n      : [];\n  };\n\n  private _getCustomizedCallout = () => {\n    return this.props.onRenderCalloutPerStack\n      ? this.props.onRenderCalloutPerStack(this.state.stackCalloutProps)\n      : this.props.onRenderCalloutPerDataPoint\n      ? this.props.onRenderCalloutPerDataPoint(this.state.dataPointCalloutProps)\n      : null;\n  };\n\n  private _getMargins = (margins: IMargins) => {\n    this.margins = margins;\n  };\n\n  private _initializeLineChartData = (\n    xScale: NumericAxis,\n    yScale: NumericAxis,\n    containerHeight: number,\n    containerWidth: number,\n    xElement: SVGElement | null,\n  ) => {\n    this._xAxisScale = xScale;\n    this._yAxisScale = yScale;\n    this._renderedColorFillBars = this.props.colorFillBars ? this._createColorFillBars(containerHeight) : [];\n    this.lines = this._createLines(xElement!, containerHeight!);\n  };\n\n  private _handleSingleLegendSelectionAction = (lineChartItem: LineChartDataWithIndex | IColorFillBarsProps) => {\n    if (this.state.selectedLegend === lineChartItem.legend) {\n      this.setState({ selectedLegend: '' });\n      this._handleLegendClick(lineChartItem, null);\n    } else {\n      this.setState({ selectedLegend: lineChartItem.legend });\n      this._handleLegendClick(lineChartItem, lineChartItem.legend);\n    }\n  };\n\n  private _onHoverCardHide = () => {\n    this.setState({\n      selectedLegendPoints: [],\n      selectedColorBarLegend: [],\n      isSelectedLegend: false,\n    });\n  };\n\n  private _createLegends(data: LineChartDataWithIndex[]): JSX.Element {\n    const { legendProps, allowMultipleShapesForPoints = false } = this.props;\n    const isLegendMultiSelectEnabled = !!(legendProps && !!legendProps.canSelectMultipleLegends);\n    const legendDataItems = data.map((point: LineChartDataWithIndex) => {\n      const color: string = point.color;\n      // mapping data to the format Legends component needs\n      const legend: ILegend = {\n        title: point.legend!,\n        color: color,\n        action: () => {\n          if (isLegendMultiSelectEnabled) {\n            this._handleMultipleLineLegendSelectionAction(point);\n          } else {\n            this._handleSingleLegendSelectionAction(point);\n          }\n        },\n        onMouseOutAction: () => {\n          this.setState({ activeLegend: '' });\n        },\n        hoverAction: () => {\n          this._handleChartMouseLeave();\n          this.setState({ activeLegend: point.legend });\n        },\n        ...(point.legendShape && {\n          shape: point.legendShape,\n        }),\n        ...(allowMultipleShapesForPoints && {\n          shape: Points[point.index % Object.keys(pointTypes).length] as ILegend['shape'],\n        }),\n      };\n      return legend;\n    });\n\n    const colorFillBarsLegendDataItems = this.props.colorFillBars\n      ? this.props.colorFillBars.map((colorFillBar: IColorFillBarsProps, index: number) => {\n          const title = colorFillBar.legend;\n          const legend: ILegend = {\n            title,\n            color: colorFillBar.color,\n            action: () => {\n              if (isLegendMultiSelectEnabled) {\n                this._handleMultipleColorFillBarLegendSelectionAction(colorFillBar);\n              } else {\n                this._handleSingleLegendSelectionAction(colorFillBar);\n              }\n            },\n            onMouseOutAction: () => {\n              this.setState({ activeLegend: '' });\n            },\n            hoverAction: () => {\n              this._handleChartMouseLeave();\n              this.setState({ activeLegend: title });\n            },\n            opacity: this._getColorFillBarOpacity(colorFillBar),\n            stripePattern: colorFillBar.applyPattern,\n          };\n          return legend;\n        })\n      : [];\n\n    const legends = (\n      <Legends\n        legends={[...legendDataItems, ...colorFillBarsLegendDataItems]}\n        enabledWrapLines={this.props.enabledLegendsWrapLines}\n        overflowProps={this.props.legendsOverflowProps}\n        focusZonePropsInHoverCard={this.props.focusZonePropsForLegendsInHoverCard}\n        overflowText={this.props.legendsOverflowText}\n        {...(isLegendMultiSelectEnabled && { onLegendHoverCardLeave: this._onHoverCardHide })}\n        {...this.props.legendProps}\n      />\n    );\n    return legends;\n  }\n\n  private _closeCallout = () => {\n    this.setState({\n      isCalloutVisible: false,\n    });\n  };\n\n  private _getBoxWidthOfShape = (pointId: string, pointIndex: number, isLastPoint: boolean) => {\n    const { allowMultipleShapesForPoints = false, strokeWidth = DEFAULT_LINE_STROKE_SIZE } = this.props;\n    const { activePoint } = this.state;\n    if (allowMultipleShapesForPoints) {\n      if (activePoint === pointId) {\n        return PointSize.hoverSize;\n      } else if (pointIndex === 1 || isLastPoint) {\n        return strokeWidth * PATH_MULTIPLY_SIZE;\n      } else {\n        return PointSize.invisibleSize;\n      }\n    } else {\n      if (activePoint === pointId) {\n        return PointSize.hoverSize;\n      } else {\n        return PointSize.invisibleSize;\n      }\n    }\n  };\n\n  private _getPath = (\n    xPos: number,\n    yPos: number,\n    pointId: string,\n    pointIndex: number,\n    isLastPoint: boolean,\n    pointOftheLine: number,\n  ): string => {\n    const { allowMultipleShapesForPoints = false } = this.props;\n    let w = this._getBoxWidthOfShape(pointId, pointIndex, isLastPoint);\n    const index: number = allowMultipleShapesForPoints ? pointOftheLine % Object.keys(pointTypes).length : 0;\n    const widthRatio = pointTypes[index].widthRatio;\n    w = widthRatio > 1 ? w / widthRatio : w;\n\n    return _getPointPath(xPos, yPos, w, index);\n  };\n  private _getPointFill = (lineColor: string, pointId: string, pointIndex: number, isLastPoint: boolean) => {\n    const { activePoint } = this.state;\n    const { theme, allowMultipleShapesForPoints = false } = this.props;\n    if (allowMultipleShapesForPoints) {\n      if (pointIndex === 1 || isLastPoint) {\n        if (activePoint === pointId) {\n          return theme!.palette.white;\n        } else {\n          return lineColor;\n        }\n      } else {\n        if (activePoint === pointId) {\n          return theme!.palette.white;\n        } else {\n          return lineColor;\n        }\n      }\n    } else {\n      if (activePoint === pointId) {\n        return theme!.palette.white;\n      } else {\n        return lineColor;\n      }\n    }\n  };\n  private _createLines(xElement: SVGElement, containerHeight: number): JSX.Element[] {\n    const lines: JSX.Element[] = [];\n    if (this.state.isSelectedLegend) {\n      this._points = this.state.selectedLegendPoints;\n    } else {\n      this._points = this._injectIndexPropertyInLineChartData(this.props.data.lineChartData);\n    }\n    for (let i = this._points.length - 1; i >= 0; i--) {\n      const linesForLine: JSX.Element[] = [];\n      const bordersForLine: JSX.Element[] = [];\n      const pointsForLine: JSX.Element[] = [];\n\n      const legendVal: string = this._points[i].legend;\n      const lineColor: string = this._points[i].color;\n      const { activePoint } = this.state;\n      const { theme } = this.props;\n      const verticaLineHeight = containerHeight - this.margins.bottom! + 6;\n      if (this._points[i].data.length === 1) {\n        const { x: x1, y: y1, xAxisCalloutData, xAxisCalloutAccessibilityData } = this._points[i].data[0];\n        const circleId = `${this._circleId}${i}`;\n        pointsForLine.push(\n          <circle\n            id={`${this._circleId}${i}`}\n            key={`${this._circleId}${i}`}\n            r={activePoint === circleId ? 5.5 : 3.5}\n            cx={this._xAxisScale(x1)}\n            cy={this._yAxisScale(y1)}\n            fill={activePoint === circleId ? theme!.palette.white : lineColor}\n            onMouseOver={this._handleHover.bind(\n              this,\n              x1,\n              y1,\n              verticaLineHeight,\n              xAxisCalloutData,\n              circleId,\n              xAxisCalloutAccessibilityData,\n            )}\n            onMouseMove={this._handleHover.bind(\n              this,\n              x1,\n              y1,\n              verticaLineHeight,\n              xAxisCalloutData,\n              circleId,\n              xAxisCalloutAccessibilityData,\n            )}\n            onMouseOut={this._handleMouseOut}\n            strokeWidth={activePoint === circleId ? DEFAULT_LINE_STROKE_SIZE : 0}\n            stroke={activePoint === circleId ? lineColor : ''}\n          />,\n        );\n      }\n\n      let gapIndex = 0;\n      const gaps = this._points[i].gaps?.sort((a, b) => a.startIndex - b.startIndex) ?? [];\n\n      // Use path rendering technique for larger datasets to optimize performance.\n      if (this.props.optimizeLargeData!) {\n        const line = d3Line()\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .x((d: any) => this._xAxisScale(d[0]))\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .y((d: any) => this._yAxisScale(d[1]))\n          .curve(d3curveLinear);\n\n        const lineId = `${this._lineId}${i}`;\n        const borderId = `${this._borderId}${i}`;\n        const strokeWidth =\n          this._points[i].lineOptions?.strokeWidth || this.props.strokeWidth || DEFAULT_LINE_STROKE_SIZE;\n\n        const isLegendSelected: boolean =\n          this._legendHighlighted(legendVal) || this._noLegendHighlighted() || this.state.isSelectedLegend;\n\n        const lineData: [number, number][] = [];\n        for (let k = 0; k < this._points[i].data.length; k++) {\n          lineData.push([\n            this._points[i].data[k].x instanceof Date\n              ? (this._points[i].data[k].x as Date).getTime()\n              : (this._points[i].data[k].x as number),\n            this._points[i].data[k].y,\n          ]);\n        }\n\n        if (isLegendSelected) {\n          const lineBorderWidth = this._points[i].lineOptions?.lineBorderWidth\n            ? Number.parseFloat(this._points[i].lineOptions!.lineBorderWidth!.toString())\n            : 0;\n          if (lineBorderWidth > 0) {\n            bordersForLine.push(\n              <path\n                id={borderId}\n                key={borderId}\n                d={line(lineData)!}\n                fill=\"transparent\"\n                strokeLinecap={this._points[i].lineOptions?.strokeLinecap ?? 'round'}\n                strokeWidth={Number.parseFloat(strokeWidth.toString()) + lineBorderWidth}\n                stroke={this._points[i].lineOptions?.lineBorderColor || theme!.palette.white}\n                opacity={1}\n              />,\n            );\n          }\n\n          linesForLine.push(\n            <path\n              id={lineId}\n              key={lineId}\n              d={line(lineData)!}\n              fill=\"transparent\"\n              data-is-focusable={true}\n              stroke={lineColor}\n              strokeWidth={strokeWidth}\n              strokeLinecap={this._points[i].lineOptions?.strokeLinecap ?? 'round'}\n              onMouseMove={this._onMouseOverLargeDataset.bind(this, i, verticaLineHeight)}\n              onMouseOver={this._onMouseOverLargeDataset.bind(this, i, verticaLineHeight)}\n              onMouseOut={this._handleMouseOut}\n              onClick={this._onLineClick.bind(this, this._points[i].onLineClick)}\n              opacity={1}\n            />,\n          );\n        } else {\n          linesForLine.push(\n            <path\n              id={lineId}\n              key={lineId}\n              d={line(lineData)!}\n              fill=\"transparent\"\n              data-is-focusable={true}\n              stroke={lineColor}\n              strokeWidth={strokeWidth}\n              strokeLinecap={this._points[i].lineOptions?.strokeLinecap ?? 'round'}\n              opacity={0.1}\n            />,\n          );\n        }\n\n        const isPointHighlighted = this.state.activeLine !== null && this.state.activeLine === i;\n\n        pointsForLine.push(\n          <circle\n            id={`${this._staticHighlightCircle}_${i}`}\n            key={`${this._staticHighlightCircle}_${i}`}\n            r={5.5}\n            cx={0}\n            cy={0}\n            fill={theme!.palette.white}\n            data-is-focusable={true}\n            strokeWidth={DEFAULT_LINE_STROKE_SIZE}\n            stroke={lineColor}\n            visibility={isPointHighlighted ? 'visibility' : 'hidden'}\n            onMouseMove={this._onMouseOverLargeDataset.bind(this, i, verticaLineHeight)}\n            onMouseOver={this._onMouseOverLargeDataset.bind(this, i, verticaLineHeight)}\n            onMouseOut={this._handleMouseOut}\n          />,\n        );\n      } else {\n        for (let j = 1; j < this._points[i].data.length; j++) {\n          const gapResult = this._checkInGap(j, gaps, gapIndex);\n          const isInGap = gapResult.isInGap;\n          gapIndex = gapResult.gapIndex;\n\n          const lineId = `${this._lineId}${i}${j}`;\n          const borderId = `${this._borderId}${i}${j}`;\n          const circleId = `${this._circleId}${i}${j}`;\n          const { x: x1, y: y1, xAxisCalloutData, xAxisCalloutAccessibilityData } = this._points[i].data[j - 1];\n          const { x: x2, y: y2 } = this._points[i].data[j];\n          let path = this._getPath(\n            this._xAxisScale(x1),\n            this._yAxisScale(y1),\n            circleId,\n            j,\n            false,\n            this._points[i].index,\n          );\n          const strokeWidth =\n            this._points[i].lineOptions?.strokeWidth || this.props.strokeWidth || DEFAULT_LINE_STROKE_SIZE;\n\n          const isLegendSelected: boolean =\n            this._legendHighlighted(legendVal) || this._noLegendHighlighted() || this.state.isSelectedLegend;\n\n          const currentPointHidden = this._points[i].hideNonActiveDots && activePoint !== circleId;\n          pointsForLine.push(\n            <path\n              id={circleId}\n              key={circleId}\n              d={path}\n              data-is-focusable={true}\n              onMouseOver={this._handleHover.bind(\n                this,\n                x1,\n                y1,\n                verticaLineHeight,\n                xAxisCalloutData,\n                circleId,\n                xAxisCalloutAccessibilityData,\n              )}\n              onMouseMove={this._handleHover.bind(\n                this,\n                x1,\n                y1,\n                verticaLineHeight,\n                xAxisCalloutData,\n                circleId,\n                xAxisCalloutAccessibilityData,\n              )}\n              onMouseOut={this._handleMouseOut}\n              onFocus={() => this._handleFocus(lineId, x1, xAxisCalloutData, circleId, xAxisCalloutAccessibilityData)}\n              onBlur={this._handleMouseOut}\n              onClick={this._onDataPointClick.bind(this, this._points[i].data[j - 1].onDataPointClick)}\n              opacity={isLegendSelected && !currentPointHidden ? 1 : 0.01}\n              fill={this._getPointFill(lineColor, circleId, j, false)}\n              stroke={lineColor}\n              strokeWidth={strokeWidth}\n            />,\n          );\n          if (j + 1 === this._points[i].data.length) {\n            // If this is last point of the line segment.\n            const lastCircleId = `${circleId}${j}L`;\n            const lastPointHidden = this._points[i].hideNonActiveDots && activePoint !== lastCircleId;\n            path = this._getPath(\n              this._xAxisScale(x2),\n              this._yAxisScale(y2),\n              lastCircleId,\n              j,\n              true,\n              this._points[i].index,\n            );\n            const {\n              xAxisCalloutData: lastCirlceXCallout,\n              xAxisCalloutAccessibilityData: lastCirlceXCalloutAccessibilityData,\n            } = this._points[i].data[j];\n            pointsForLine.push(\n              <path\n                id={lastCircleId}\n                key={lastCircleId}\n                d={path}\n                data-is-focusable={true}\n                onMouseOver={this._handleHover.bind(\n                  this,\n                  x2,\n                  y2,\n                  verticaLineHeight,\n                  lastCirlceXCallout,\n                  lastCircleId,\n                  lastCirlceXCalloutAccessibilityData,\n                )}\n                onMouseMove={this._handleHover.bind(\n                  this,\n                  x2,\n                  y2,\n                  verticaLineHeight,\n                  lastCirlceXCallout,\n                  lastCircleId,\n                  lastCirlceXCalloutAccessibilityData,\n                )}\n                onMouseOut={this._handleMouseOut}\n                onFocus={() =>\n                  this._handleFocus(lineId, x2, lastCirlceXCallout, lastCircleId, lastCirlceXCalloutAccessibilityData)\n                }\n                onBlur={this._handleMouseOut}\n                onClick={this._onDataPointClick.bind(this, this._points[i].data[j].onDataPointClick)}\n                opacity={isLegendSelected && !lastPointHidden ? 1 : 0.01}\n                fill={this._getPointFill(lineColor, lastCircleId, j, true)}\n                stroke={lineColor}\n                strokeWidth={strokeWidth}\n              />,\n            );\n            /* eslint-enable react/jsx-no-bind */\n          }\n\n          if (isLegendSelected) {\n            // don't draw line if it is in a gap\n            if (!isInGap) {\n              const lineBorderWidth = this._points[i].lineOptions?.lineBorderWidth\n                ? Number.parseFloat(this._points[i].lineOptions!.lineBorderWidth!.toString())\n                : 0;\n              if (lineBorderWidth > 0) {\n                bordersForLine.push(\n                  <line\n                    id={borderId}\n                    key={borderId}\n                    x1={this._xAxisScale(x1)}\n                    y1={this._yAxisScale(y1)}\n                    x2={this._xAxisScale(x2)}\n                    y2={this._yAxisScale(y2)}\n                    strokeLinecap={this._points[i].lineOptions?.strokeLinecap ?? 'round'}\n                    strokeWidth={Number.parseFloat(strokeWidth.toString()) + lineBorderWidth}\n                    stroke={this._points[i].lineOptions?.lineBorderColor || theme!.palette.white}\n                    opacity={1}\n                  />,\n                );\n              }\n\n              linesForLine.push(\n                <line\n                  id={lineId}\n                  key={lineId}\n                  x1={this._xAxisScale(x1)}\n                  y1={this._yAxisScale(y1)}\n                  x2={this._xAxisScale(x2)}\n                  y2={this._yAxisScale(y2)}\n                  strokeWidth={strokeWidth}\n                  ref={(e: SVGLineElement | null) => {\n                    this._refCallback(e!, lineId);\n                  }}\n                  onMouseOver={this._handleHover.bind(\n                    this,\n                    x1,\n                    y1,\n                    verticaLineHeight,\n                    xAxisCalloutData,\n                    circleId,\n                    xAxisCalloutAccessibilityData,\n                  )}\n                  onMouseMove={this._handleHover.bind(\n                    this,\n                    x1,\n                    y1,\n                    verticaLineHeight,\n                    xAxisCalloutData,\n                    circleId,\n                    xAxisCalloutAccessibilityData,\n                  )}\n                  onMouseOut={this._handleMouseOut}\n                  stroke={lineColor}\n                  strokeLinecap={this._points[i].lineOptions?.strokeLinecap ?? 'round'}\n                  strokeDasharray={this._points[i].lineOptions?.strokeDasharray}\n                  strokeDashoffset={this._points[i].lineOptions?.strokeDashoffset}\n                  opacity={1}\n                  onClick={this._onLineClick.bind(this, this._points[i].onLineClick)}\n                />,\n              );\n            }\n          } else {\n            if (!isInGap) {\n              linesForLine.push(\n                <line\n                  id={lineId}\n                  key={lineId}\n                  x1={this._xAxisScale(x1)}\n                  y1={this._yAxisScale(y1)}\n                  x2={this._xAxisScale(x2)}\n                  y2={this._yAxisScale(y2)}\n                  strokeWidth={strokeWidth}\n                  stroke={lineColor}\n                  strokeLinecap={this._points[i].lineOptions?.strokeLinecap ?? 'round'}\n                  strokeDasharray={this._points[i].lineOptions?.strokeDasharray}\n                  strokeDashoffset={this._points[i].lineOptions?.strokeDashoffset}\n                  opacity={0.1}\n                />,\n              );\n            }\n          }\n        }\n      }\n\n      lines.push(...bordersForLine, ...linesForLine, ...pointsForLine);\n    }\n    const classNames = getClassNames(this.props.styles!, {\n      theme: this.props.theme!,\n    });\n    // Removing un wanted tooltip div from DOM, when prop not provided.\n    if (!this.props.showXAxisLablesTooltip) {\n      try {\n        document.getElementById(this._tooltipId) && document.getElementById(this._tooltipId)!.remove();\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n    }\n    // Used to display tooltip at x axis labels.\n    if (!this.props.wrapXAxisLables && this.props.showXAxisLablesTooltip) {\n      const xAxisElement = d3Select(xElement).call(this._xAxisScale);\n      try {\n        document.getElementById(this._tooltipId) && document.getElementById(this._tooltipId)!.remove();\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n      const tooltipProps = {\n        tooltipCls: classNames.tooltip!,\n        id: this._tooltipId,\n        xAxis: xAxisElement,\n      };\n      xAxisElement && tooltipOfXAxislabels(tooltipProps);\n    }\n    return lines;\n  }\n\n  private _createColorFillBars = (containerHeight: number) => {\n    const colorFillBars: JSX.Element[] = [];\n    if (this.state.isSelectedLegend) {\n      this._colorFillBars = this.state.selectedColorBarLegend;\n    } else {\n      this._colorFillBars = this.props.colorFillBars!;\n    }\n\n    const yMinMaxValues = getMinMaxOfYAxis(this._points, ChartTypes.LineChart);\n    const FILL_Y_PADDING = 3;\n    for (let i = 0; i < this._colorFillBars.length; i++) {\n      const colorFillBar = this._colorFillBars[i];\n      const colorFillBarId = getId(colorFillBar.legend.replace(/\\W/g, ''));\n\n      if (colorFillBar.applyPattern) {\n        // Using a pattern element because CSS was unable to render diagonal stripes for rect elements\n        colorFillBars.push(this._getStripePattern(colorFillBar.color, i));\n      }\n\n      for (let j = 0; j < colorFillBar.data.length; j++) {\n        const startX = colorFillBar.data[j].startX;\n        const endX = colorFillBar.data[j].endX;\n        const opacity =\n          this._legendHighlighted(colorFillBar.legend) || this._noLegendHighlighted() || this.state.isSelectedLegend\n            ? this._getColorFillBarOpacity(colorFillBar)\n            : 0.1;\n        colorFillBars.push(\n          <rect\n            fill={colorFillBar.applyPattern ? `url(#${this._colorFillBarPatternId}${i})` : colorFillBar.color}\n            fillOpacity={opacity}\n            x={this._xAxisScale(startX)}\n            y={this._yAxisScale(yMinMaxValues.endValue) - FILL_Y_PADDING}\n            width={Math.abs(this._xAxisScale(endX) - this._xAxisScale(startX))}\n            height={\n              this._yAxisScale(this.props.yMinValue || 0) - this._yAxisScale(yMinMaxValues.endValue) + FILL_Y_PADDING\n            }\n            key={`${colorFillBarId}${j}`}\n          />,\n        );\n      }\n    }\n    return colorFillBars;\n  };\n\n  private _getStripePattern = (color: string, id: number) => {\n    // This describes a tile pattern that resembles diagonal stripes\n    // For more information: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d\n    const stripePath = 'M-4,4 l8,-8 M0,16 l16,-16 M12,20 l8,-8';\n    return (\n      <pattern\n        id={`${this._colorFillBarPatternId}${id}`}\n        width={16}\n        height={16}\n        key={`${this._colorFillBarPatternId}${id}`}\n        patternUnits={'userSpaceOnUse'}\n      >\n        <path d={stripePath} stroke={color} strokeWidth={1.25} />\n      </pattern>\n    );\n  };\n\n  private _checkInGap = (pointIndex: number, gaps: ILineChartGap[], currentGapIndex: number) => {\n    let gapIndex = currentGapIndex;\n    let isInGap = false;\n\n    while (gapIndex < gaps.length && pointIndex > gaps[gapIndex].endIndex) {\n      gapIndex++;\n    }\n\n    if (gapIndex < gaps.length && pointIndex > gaps[gapIndex].startIndex && pointIndex <= gaps[gapIndex].endIndex) {\n      isInGap = true;\n    }\n    return { isInGap, gapIndex };\n  };\n\n  private _refCallback(element: SVGGElement, legendTitle: string): void {\n    this._refArray.push({ index: legendTitle, refElement: element });\n  }\n\n  private _onMouseOverLargeDataset = (\n    linenumber: number,\n    lineHeight: number,\n    mouseEvent: React.MouseEvent<SVGRectElement | SVGPathElement | SVGCircleElement>,\n  ) => {\n    mouseEvent.persist();\n    const { data } = this.props;\n    const { lineChartData } = data;\n\n    // This will get the value of the X when mouse is on the chart\n    const xOffset = this._xAxisScale.invert(clientPoint(document.getElementById(this._rectId)!, mouseEvent)[0]);\n    const i = bisect(lineChartData![linenumber].data, xOffset);\n    const d0 = lineChartData![linenumber].data[i - 1] as ILineChartDataPoint;\n    const d1 = lineChartData![linenumber].data[i] as ILineChartDataPoint;\n    let axisType: XAxisTypes | null = null;\n    let xPointToHighlight: string | Date | number | null = null;\n    let index: null | number = null;\n    if (d0 === undefined && d1 !== undefined) {\n      xPointToHighlight = d1.x;\n      index = i;\n    } else if (d0 !== undefined && d1 === undefined) {\n      xPointToHighlight = d0.x;\n      index = i - 1;\n    } else {\n      axisType = getTypeOfAxis(lineChartData![linenumber].data[0].x, true) as XAxisTypes;\n      let x0;\n      let point0;\n      let point1;\n      switch (axisType) {\n        case XAxisTypes.DateAxis:\n          x0 = new Date(xOffset).getTime();\n          point0 = (d0.x as Date).getTime();\n          point1 = (d1.x as Date).getTime();\n          xPointToHighlight = Math.abs(x0 - point0) > Math.abs(x0 - point1) ? d1.x : d0.x;\n          index = Math.abs(x0 - point0) > Math.abs(x0 - point1) ? i : i - 1;\n          break;\n        case XAxisTypes.NumericAxis:\n          x0 = xOffset as number;\n          point0 = d0.x as number;\n          point1 = d1.x as number;\n          xPointToHighlight = Math.abs(x0 - point0) > Math.abs(x0 - point1) ? d1.x : d0.x;\n          index = Math.abs(x0 - point0) > Math.abs(x0 - point1) ? i : i - 1;\n          break;\n        default:\n          break;\n      }\n    }\n\n    const { xAxisCalloutData, xAxisCalloutAccessibilityData } = lineChartData![linenumber].data[index as number];\n    const formattedDate = xPointToHighlight instanceof Date ? xPointToHighlight.toLocaleString() : xPointToHighlight;\n    const modifiedXVal = xPointToHighlight instanceof Date ? xPointToHighlight.getTime() : xPointToHighlight;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const found: any = find(this._calloutPoints, (element: { x: string | number }) => {\n      return element.x === modifiedXVal;\n    });\n    const pointToHighlight: ILineChartDataPoint = lineChartData![linenumber].data[index!];\n    const pointToHighlightUpdated =\n      this.state.nearestCircleToHighlight === null ||\n      (this.state.nearestCircleToHighlight !== null &&\n        pointToHighlight !== null &&\n        (this.state.nearestCircleToHighlight.x !== pointToHighlight.x ||\n          this.state.nearestCircleToHighlight.y !== pointToHighlight.y));\n    // if no points need to be called out then don't show vertical line and callout card\n    if (found && pointToHighlightUpdated) {\n      this._uniqueCallOutID = `#${this._staticHighlightCircle}_${linenumber}`;\n\n      d3Select(`#${this._staticHighlightCircle}_${linenumber}`)\n        .attr('cx', `${this._xAxisScale(pointToHighlight.x)}`)\n        .attr('cy', `${this._yAxisScale(pointToHighlight.y)}`)\n        .attr('visibility', 'visibility');\n\n      d3Select(`#${this._verticalLine}`)\n        .attr(\n          'transform',\n          () => `translate(${this._xAxisScale(pointToHighlight.x)}, ${this._yAxisScale(pointToHighlight.y)})`,\n        )\n        .attr('visibility', 'visibility')\n        .attr('y2', `${lineHeight - this._yAxisScale(pointToHighlight.y)}`);\n\n      this.setState({\n        nearestCircleToHighlight: pointToHighlight,\n        isCalloutVisible: true,\n        refSelected: `#${this._staticHighlightCircle}_${linenumber}`,\n        stackCalloutProps: found!,\n        YValueHover: found.values,\n        dataPointCalloutProps: found!,\n        hoverXValue: xAxisCalloutData ? xAxisCalloutData : formattedDate,\n        xAxisCalloutAccessibilityData,\n        activePoint: '',\n        activeLine: linenumber,\n      });\n    }\n\n    if (!found) {\n      this.setState({\n        isCalloutVisible: false,\n        nearestCircleToHighlight: pointToHighlight,\n        activePoint: '',\n        activeLine: linenumber,\n      });\n    }\n  };\n\n  private _handleFocus = (\n    lineId: string,\n    x: number | Date,\n\n    xAxisCalloutData: string | undefined,\n    circleId: string,\n    xAxisCalloutAccessibilityData?: IAccessibilityProps,\n  ) => {\n    this._uniqueCallOutID = circleId;\n    const formattedData = x instanceof Date ? x.toLocaleDateString() : x;\n    const xVal = x instanceof Date ? x.getTime() : x;\n    const found = find(this._calloutPoints, (element: { x: string | number }) => element.x === xVal);\n    // if no points need to be called out then don't show vertical line and callout card\n\n    if (found) {\n      const _this = this;\n      d3Select('#' + circleId).attr('aria-labelledby', `toolTip${this._uniqueCallOutID}`);\n      d3Select(`#${this._verticalLine}`)\n        .attr('transform', () => `translate(${_this._xAxisScale(x)}, 0)`)\n        .attr('visibility', 'visibility');\n      this._refArray.forEach((obj: IRefArrayData) => {\n        if (obj.index === lineId) {\n          this.setState({\n            isCalloutVisible: true,\n            refSelected: obj.refElement,\n            hoverXValue: xAxisCalloutData ? xAxisCalloutData : '' + formattedData,\n            YValueHover: found.values,\n            stackCalloutProps: found!,\n            dataPointCalloutProps: found!,\n            activePoint: circleId,\n            xAxisCalloutAccessibilityData,\n          });\n        }\n      });\n    } else {\n      this.setState({\n        activePoint: circleId,\n      });\n    }\n  };\n\n  private _handleHover = (\n    x: number | Date,\n    y: number | Date,\n    lineHeight: number,\n    xAxisCalloutData: string,\n    circleId: string,\n    xAxisCalloutAccessibilityData: IAccessibilityProps,\n    mouseEvent: React.MouseEvent<SVGElement>,\n  ) => {\n    mouseEvent.persist();\n    const formattedData = x instanceof Date ? x.toLocaleDateString() : x;\n    const xVal = x instanceof Date ? x.getTime() : x;\n    const _this = this;\n    const found = find(this._calloutPoints, (element: { x: string | number }) => element.x === xVal);\n    // if no points need to be called out then don't show vertical line and callout card\n\n    if (found) {\n      d3Select(`#${this._verticalLine}`)\n        .attr('transform', () => `translate(${_this._xAxisScale(x)}, ${_this._yAxisScale(y)})`)\n        .attr('visibility', 'visibility')\n        .attr('y2', `${lineHeight - _this._yAxisScale(y)}`);\n      if (this._uniqueCallOutID !== circleId) {\n        this._uniqueCallOutID = circleId;\n        this.setState({\n          isCalloutVisible: true,\n          refSelected: `#${circleId}`,\n          hoverXValue: xAxisCalloutData ? xAxisCalloutData : '' + formattedData,\n          YValueHover: found.values,\n          stackCalloutProps: found!,\n          dataPointCalloutProps: found!,\n          activePoint: circleId,\n          xAxisCalloutAccessibilityData,\n          nearestCircleToHighlight: null,\n          activeLine: null,\n        });\n      }\n    } else {\n      this.setState({\n        activePoint: circleId,\n        nearestCircleToHighlight: null,\n        activeLine: null,\n      });\n    }\n  };\n\n  private _onLineClick = (func: () => void) => {\n    if (func) {\n      func();\n    }\n  };\n\n  private _onDataPointClick = (func: () => void) => {\n    if (func) {\n      func();\n    }\n  };\n\n  private _handleMouseOut = () => {\n    d3Select(`#${this._verticalLine}`).attr('visibility', 'hidden');\n  };\n\n  private _handleChartMouseLeave = () => {\n    this._uniqueCallOutID = null;\n    this.setState({\n      isCalloutVisible: false,\n      activePoint: '',\n      activeLine: null,\n    });\n  };\n\n  private _handleLegendClick = (\n    lineChartItem: LineChartDataWithIndex | IColorFillBarsProps,\n    selectedLegend: string | null | string[],\n  ): void => {\n    if (lineChartItem.onLegendClick) {\n      lineChartItem.onLegendClick(selectedLegend);\n    }\n  };\n\n  private _handleMultipleLineLegendSelectionAction = (selectedLine: LineChartDataWithIndex) => {\n    const selectedLineIndex = this.state.selectedLegendPoints.reduce((acc, line, index) => {\n      if (acc > -1 || line.legend !== selectedLine.legend) {\n        return acc;\n      } else {\n        return index;\n      }\n    }, -1);\n\n    let selectedLines: LineChartDataWithIndex[];\n    if (selectedLineIndex === -1) {\n      selectedLines = [...this.state.selectedLegendPoints, selectedLine];\n    } else {\n      selectedLines = this.state.selectedLegendPoints\n        .slice(0, selectedLineIndex)\n        .concat(this.state.selectedLegendPoints.slice(selectedLineIndex + 1));\n    }\n\n    const areAllLineLegendsSelected = this.props.data && selectedLines.length === this.props.data.lineChartData!.length;\n\n    if (\n      areAllLineLegendsSelected &&\n      ((this.props.colorFillBars && this.props.colorFillBars.length === this.state.selectedColorBarLegend.length) ||\n        !this.props.colorFillBars)\n    ) {\n      // Clear all legends if all legends including color fill bar legends are selected\n      // Or clear all legends if all legends are selected and there are no color fill bars\n      this._clearMultipleLegendSelections();\n    } else if (!selectedLines.length && !this.state.selectedColorBarLegend.length) {\n      // Clear all legends if no legends including color fill bar legends are selected\n      this._clearMultipleLegendSelections();\n    } else {\n      // Otherwise, set state when one or more legends are selected, including color fill bar legends\n      this.setState({\n        selectedLegendPoints: selectedLines,\n        isSelectedLegend: true,\n      });\n    }\n\n    const selectedLegendTitlesToPass = selectedLines.map((line: LineChartDataWithIndex) => line.legend);\n    this._handleLegendClick(selectedLine, selectedLegendTitlesToPass);\n  };\n\n  private _handleMultipleColorFillBarLegendSelectionAction = (selectedColorFillBar: IColorFillBarsProps) => {\n    const selectedColorFillBarIndex = this.state.selectedColorBarLegend.reduce((acc, colorFillBar, index) => {\n      if (acc > -1 || colorFillBar.legend !== selectedColorFillBar.legend) {\n        return acc;\n      } else {\n        return index;\n      }\n    }, -1);\n\n    let selectedColorFillBars: IColorFillBarsProps[];\n    if (selectedColorFillBarIndex === -1) {\n      selectedColorFillBars = [...this.state.selectedColorBarLegend, selectedColorFillBar];\n    } else {\n      selectedColorFillBars = this.state.selectedColorBarLegend\n        .slice(0, selectedColorFillBarIndex)\n        .concat(this.state.selectedColorBarLegend.slice(selectedColorFillBarIndex + 1));\n    }\n\n    const areAllColorFillBarLegendsSelected =\n      selectedColorFillBars.length === (this.props.colorFillBars && this.props.colorFillBars!.length);\n\n    if (\n      areAllColorFillBarLegendsSelected &&\n      ((this.props.data && this.props.data.lineChartData!.length === this.state.selectedLegendPoints.length) ||\n        !this.props.data)\n    ) {\n      // Clear all legends if all legends, including line legends, are selected\n      // Or clear all legends if all legends are selected and there is no line data\n      this._clearMultipleLegendSelections();\n    } else if (!selectedColorFillBars.length && !this.state.selectedLegendPoints.length) {\n      // Clear all legends if no legends are selected, including line legends\n      this._clearMultipleLegendSelections();\n    } else {\n      // set state when one or more legends are selected, including line legends\n      this.setState({\n        selectedColorBarLegend: selectedColorFillBars,\n        isSelectedLegend: true,\n      });\n    }\n\n    const selectedLegendTitlesToPass = selectedColorFillBars.map(\n      (colorFillBar: IColorFillBarsProps) => colorFillBar.legend,\n    );\n    this._handleLegendClick(selectedColorFillBar, selectedLegendTitlesToPass);\n  };\n\n  private _clearMultipleLegendSelections = () => {\n    this.setState({\n      selectedColorBarLegend: [],\n      selectedLegendPoints: [],\n      isSelectedLegend: false,\n    });\n  };\n\n  /**\n   * This function checks if the given legend is highlighted or not.\n   * A legend can be highlighted in 2 ways:\n   * 1. selection: if the user clicks on it\n   * 2. hovering: if there is no selected legend and the user hovers over it\n   */\n  private _legendHighlighted = (legend: string) => {\n    return (\n      this.state.selectedLegend === legend || (this.state.selectedLegend === '' && this.state.activeLegend === legend)\n    );\n  };\n\n  /**\n   * This function checks if none of the legends is selected or hovered.\n   */\n  private _noLegendHighlighted = () => {\n    return this.state.selectedLegend === '' && this.state.activeLegend === '';\n  };\n\n  private _getColorFillBarOpacity = (colorFillBar: IColorFillBarsProps) => {\n    return colorFillBar.applyPattern ? 1 : 0.4;\n  };\n}\n"]}