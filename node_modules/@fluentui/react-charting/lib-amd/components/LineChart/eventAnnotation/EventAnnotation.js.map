{"version":3,"file":"EventAnnotation.js","sourceRoot":"../src/","sources":["components/LineChart/eventAnnotation/EventAnnotation.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ScaleTime } from 'd3-scale';\nimport { findIndex } from '@fluentui/react/lib/Utilities';\nimport { ILineDef, LabelLink, ILabelDef } from './LabelLink';\nimport { IEventsAnnotationProps } from '../LineChart.types';\n\ninterface IEventsAnnotationExtendProps extends IEventsAnnotationProps {\n  scale: ScaleTime<number, number>;\n  chartYBottom: number;\n  chartYTop: number;\n}\n\nexport const EventsAnnotation: React.FunctionComponent<IEventsAnnotationExtendProps> = props => {\n  const textWidth = props.labelWidth ? props.labelWidth : 105;\n  const textY = props.chartYTop - 20;\n  const lineTopY = textY + 7;\n  const textPadding = 5;\n  const lineHeight = 18;\n  const fontSize = '10pt';\n  const axisRange = props.scale.range();\n\n  const lineDefs: ILineDef[] = props.events.map(e => ({ ...e, x: props.scale(e.date) }));\n\n  lineDefs.sort((e1, e2) => +e1.date - +e2.date);\n  const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\n  const fill: string | undefined = darkThemeMq.matches ? 'rgb(255,255,255)' : props.strokeColor;\n\n  const lines = uniqBy(lineDefs, x => x.date.toString()).map((x, i) => (\n    <line key={i} x1={x.x} x2={x.x} y1={lineTopY} y2={props.chartYBottom} stroke={fill} strokeDasharray=\"8\" />\n  ));\n\n  const labelLinks = calculateLabels(lineDefs, textWidth + textPadding, axisRange[1], axisRange[0]).map((x, i) => (\n    <LabelLink\n      key={i}\n      {...{\n        lineDefs,\n        labelDef: x,\n        textY,\n        textWidth,\n        textLineHeight: lineHeight,\n        textFontSize: fontSize,\n        textColor: props.labelColor,\n        mergedLabel: props.mergedLabel,\n      }}\n    />\n  ));\n\n  return (\n    <>\n      {lines}\n      {labelLinks}\n    </>\n  );\n};\n\nfunction calculateLabels(lineDefs: ILineDef[], textWidth: number, maxX: number, minX: number): ILabelDef[] {\n  const calculateLabel = (lastX: number, currentIdx: number): ILabelDef[] => {\n    // base case 1\n    if (currentIdx === lineDefs.length) {\n      return [];\n    }\n\n    const { x } = lineDefs[currentIdx];\n    const leftXBoundary = x - textWidth;\n\n    // cannot render on top of other text\n    if (x < lastX) {\n      return [];\n    }\n\n    // base case 2\n    if (currentIdx === lineDefs.length - 1) {\n      if (lastX < leftXBoundary) {\n        return [{ x: x, anchor: 'end', aggregatedIdx: [currentIdx] }];\n      } else if (x + textWidth < maxX) {\n        return [{ x: x, anchor: 'start', aggregatedIdx: [currentIdx] }];\n      }\n\n      return [];\n    }\n\n    if (lastX < leftXBoundary) {\n      // label on left side\n      return backtrack(currentIdx, 'end');\n    } else {\n      // label on right side\n      return backtrack(currentIdx, 'start');\n    }\n  };\n\n  const backtrack = (currentIdx: number, anchor: 'start' | 'end'): ILabelDef[] => {\n    const bd = anchor === 'end' ? lineDefs[currentIdx].x : lineDefs[currentIdx].x + textWidth;\n\n    let idx = findIndex(\n      lineDefs,\n      ds => ds.x > bd && (ds.x - textWidth >= bd || ds.x + textWidth < maxX),\n      currentIdx + 1,\n    );\n    if (idx === -1) {\n      idx = lineDefs.length;\n    }\n\n    const aggregatedIdx: number[] = [];\n    for (let i = currentIdx; i < idx; i++) {\n      aggregatedIdx.push(i);\n    }\n    const next = calculateLabel(bd, idx);\n\n    next.unshift({ x: lineDefs[currentIdx].x, anchor, aggregatedIdx });\n    return next;\n  };\n\n  return calculateLabel(minX, 0);\n}\n\n/** Get unique items of `arr`, comparing based on the result of calling `iteratee` on each item. */\nfunction uniqBy<T>(arr: T[], iteratee: (x: T) => string): T[] {\n  const seen: string[] = [];\n  const result: T[] = [];\n  for (const x of arr) {\n    const comp = iteratee(x);\n    if (seen.indexOf(comp) === -1) {\n      result.push(x);\n      seen.push(comp);\n    }\n  }\n  return result;\n}\n"]}