{"version":3,"file":"CartesianChart.base.js","sourceRoot":"../src/","sources":["components/CommonComponents/CartesianChart.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IProcessedStyleSet } from '@fluentui/react/lib/Styling';\nimport { classNamesFunction, getId, getRTL } from '@fluentui/react/lib/Utilities';\nimport { Callout } from '@fluentui/react/lib/Callout';\nimport { FocusZone, FocusZoneDirection } from '@fluentui/react-focus';\nimport {\n  ICartesianChartStyles,\n  ICartesianChartStyleProps,\n  IModifiedCartesianChartProps,\n  IYValueHover,\n} from '../../index';\nimport {\n  ChartHoverCard,\n  convertToLocaleString,\n  createNumericXAxis,\n  createStringXAxis,\n  IAxisData,\n  getAccessibleDataObject,\n  getDomainNRangeValues,\n  createDateXAxis,\n  createYAxis,\n  createStringYAxis,\n  IMargins,\n  getMinMaxOfYAxis,\n  XAxisTypes,\n  YAxisType,\n  createWrapOfXLabels,\n  rotateXAxisLabels,\n  Points,\n  pointTypes,\n} from '../../utilities/index';\nimport { LegendShape, Shape } from '../Legends/index';\n\nconst getClassNames = classNamesFunction<ICartesianChartStyleProps, ICartesianChartStyles>();\n\nexport interface ICartesianChartState {\n  containerWidth: number;\n  containerHeight: number;\n  _width: number;\n  _height: number;\n  /* To update this values using setState in render method.\n   * To avoid multiple re renders, Only first time setting the value.\n   */\n  isRemoveValCalculated?: boolean;\n  /* Used for when WrapXAxisLabels props appeared.\n   * To display the total word (space separated words), Need to have more space than usual.\n   * This height will get total height need to disaply total word.\n   * These value need to be removed from actual svg height/graph height.\n   * Defalut value is 0. And this values calculted when 'wrapXAxisLables' or 'showXAxisLablesTooltip' is true.\n   */\n  _removalValueForTextTuncate?: number;\n}\n\n/**\n * Cartesian chart used for\n * 1.draw X and Y axis of the chart\n * 2.Callout\n * 3.Fit parent Continer\n */\nexport class CartesianChartBase extends React.Component<IModifiedCartesianChartProps, ICartesianChartState> {\n  private _classNames: IProcessedStyleSet<ICartesianChartStyles>;\n  private chartContainer: HTMLDivElement;\n  private legendContainer: HTMLDivElement;\n  private minLegendContainerHeight: number = 32;\n  private xAxisElement: SVGElement | null;\n  private yAxisElement: SVGElement | null;\n  private margins: IMargins;\n  private idForGraph: string;\n  private _reqID: number;\n  private _isRtl: boolean = getRTL();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _xScale: any;\n\n  constructor(props: IModifiedCartesianChartProps) {\n    super(props);\n    this.state = {\n      containerHeight: 0,\n      containerWidth: 0,\n      _width: this.props.width || 600,\n      _height: this.props.height || 350,\n      _removalValueForTextTuncate: 0,\n      isRemoveValCalculated: true,\n    };\n    this.idForGraph = getId('chart_');\n    /**\n     * In RTL mode, Only graph will be rendered left/right. We need to provide left and right margins manually.\n     * So that, in RTL, left margins becomes right margins and viceversa.\n     * As graph needs to be drawn perfecty, these values consider as default values.\n     * Same margins using for all other cartesian charts. Can be accessible through 'getMargins' call back method.\n     */\n    this.margins = {\n      top: this.props.margins?.top ?? 20,\n      bottom: this.props.margins?.bottom ?? 35,\n      right: this._isRtl ? this.props.margins?.left ?? 40 : this.props.margins?.right ?? 20,\n      left: this._isRtl ? this.props.margins?.right ?? 20 : this.props.margins?.left ?? 40,\n    };\n  }\n\n  public componentDidMount(): void {\n    this._fitParentContainer();\n  }\n\n  public componentWillUnmount(): void {\n    cancelAnimationFrame(this._reqID);\n  }\n\n  public componentDidUpdate(prevProps: IModifiedCartesianChartProps): void {\n    if (prevProps.height !== this.props.height || prevProps.width !== this.props.width) {\n      this._fitParentContainer();\n    }\n\n    if (\n      !this.props.wrapXAxisLables &&\n      this.props.rotateXAxisLables &&\n      this.props.xAxisType! === XAxisTypes.StringAxis\n    ) {\n      const rotateLabelProps = {\n        node: this.xAxisElement,\n        xAxis: this._xScale,\n      };\n      const rotatedHeight = rotateXAxisLabels(rotateLabelProps);\n      if (\n        this.state.isRemoveValCalculated &&\n        this.state._removalValueForTextTuncate !== rotatedHeight! + this.margins.bottom! &&\n        rotatedHeight! > 0\n      ) {\n        this.setState({\n          _removalValueForTextTuncate: rotatedHeight! + this.margins.bottom!,\n          isRemoveValCalculated: false,\n        });\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      calloutProps,\n      points,\n      chartType,\n      chartHoverProps,\n      svgFocusZoneProps,\n      svgProps,\n      culture,\n      dateLocalizeOptions,\n      timeFormatLocale,\n      customDateTimeFormatter,\n    } = this.props;\n    if (this.props.parentRef) {\n      this._fitParentContainer();\n    }\n    // Callback for margins to the chart\n    this.props.getmargins && this.props.getmargins(this.margins);\n\n    const XAxisParams = {\n      domainNRangeValues: getDomainNRangeValues(\n        points,\n        this.margins,\n        this.state.containerWidth,\n        chartType,\n        this._isRtl,\n        this.props.xAxisType,\n        this.props.barwidth!,\n        this.props.tickValues!,\n      ),\n      xAxisElement: this.xAxisElement!,\n      showRoundOffXTickValues: true,\n      xAxisCount: this.props.xAxisTickCount,\n      xAxistickSize: this.props.xAxistickSize,\n      tickPadding: this.props.tickPadding || this.props.showXAxisLablesTooltip ? 5 : 10,\n      xAxisPadding: this.props.xAxisPadding,\n    };\n\n    const YAxisParams = {\n      margins: this.margins,\n      containerWidth: this.state.containerWidth,\n      containerHeight: this.state.containerHeight - this.state._removalValueForTextTuncate!,\n      yAxisElement: this.yAxisElement,\n      yAxisTickFormat: this.props.yAxisTickFormat!,\n      yAxisTickCount: this.props.yAxisTickCount!,\n      yMinValue: this.props.yMinValue || 0,\n      yMaxValue: this.props.yMaxValue || 0,\n      tickPadding: 10,\n      maxOfYVal: this.props.maxOfYVal,\n      yMinMaxValues: getMinMaxOfYAxis(points, chartType),\n      yAxisPadding: this.props.yAxisPadding,\n    };\n\n    /**\n     * These scales used for 2 purposes.\n     * 1. To create x and y axis\n     * 2. To draw the graph.\n     * For area/line chart using same scales. For other charts, creating their own scales to draw the graph.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let xScale: any;\n    switch (this.props.xAxisType!) {\n      case XAxisTypes.NumericAxis:\n        xScale = createNumericXAxis(XAxisParams, culture);\n        break;\n      case XAxisTypes.DateAxis:\n        xScale = createDateXAxis(\n          XAxisParams,\n          this.props.tickParams!,\n          culture,\n          dateLocalizeOptions,\n          timeFormatLocale,\n          customDateTimeFormatter,\n        );\n        break;\n      case XAxisTypes.StringAxis:\n        xScale = createStringXAxis(XAxisParams, this.props.tickParams!, this.props.datasetForXAxisDomain!, culture);\n        break;\n      default:\n        xScale = createNumericXAxis(XAxisParams, culture);\n    }\n    this._xScale = xScale;\n\n    /*\n     * To enable wrapping of x axis tick values or to display complete x axis tick values,\n     * we need to calculate how much space it needed to render the text.\n     * No need to re-calculate every time the chart renders and same time need to get an update. So using setState.\n     * Required space will be calculated first time chart rendering and if any width/height of chart updated.\n     * */\n    if (this.props.wrapXAxisLables || this.props.showXAxisLablesTooltip) {\n      const wrapLabelProps = {\n        node: this.xAxisElement,\n        xAxis: xScale,\n        showXAxisLablesTooltip: this.props.showXAxisLablesTooltip || false,\n        noOfCharsToTruncate: this.props.noOfCharsToTruncate || 4,\n      };\n      const temp = xScale && (createWrapOfXLabels(wrapLabelProps) as number);\n      // this value need to be updated for draw graph updated. So instead of using private value, using set state.\n      if (this.state.isRemoveValCalculated && this.state._removalValueForTextTuncate !== temp) {\n        this.setState({ _removalValueForTextTuncate: temp, isRemoveValCalculated: false });\n      }\n    }\n\n    /**\n     * These scales used for 2 purposes.\n     * 1. To create x and y axis\n     * 2. To draw the graph.\n     * For area/line chart using same scales. For other charts, creating their own scales to draw the graph.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let yScale: any;\n    const axisData: IAxisData = { yAxisDomainValues: [] };\n    if (this.props.yAxisType && this.props.yAxisType === YAxisType.StringAxis) {\n      yScale = createStringYAxis(YAxisParams, this.props.stringDatasetForYAxisDomain!, this._isRtl);\n    } else {\n      yScale = createYAxis(YAxisParams, this._isRtl, axisData);\n    }\n    this.props.getAxisData && this.props.getAxisData(axisData);\n    // Callback function for chart, returns axis\n    this._getData(xScale, yScale);\n\n    this._classNames = getClassNames(this.props.styles!, {\n      theme: this.props.theme!,\n      width: this.state._width,\n      height: this.state._height,\n      className: this.props.className,\n      isRtl: this._isRtl,\n    });\n\n    const svgDimensions = {\n      width: this.state.containerWidth,\n      height: this.state.containerHeight,\n    };\n\n    const children = this.props.children({\n      ...this.state,\n      xScale,\n      yScale,\n    });\n\n    let focusDirection;\n    if (this.props.focusZoneDirection === FocusZoneDirection.vertical) {\n      focusDirection = this.props.focusZoneDirection;\n    } else if (this.props.focusZoneDirection) {\n      focusDirection = this.props.focusZoneDirection;\n    } else {\n      focusDirection = FocusZoneDirection.horizontal;\n    }\n    return (\n      <div\n        id={this.idForGraph}\n        className={this._classNames.root}\n        role={'presentation'}\n        ref={(rootElem: HTMLDivElement) => (this.chartContainer = rootElem)}\n        onMouseLeave={this.props.onChartMouseLeave}\n      >\n        <FocusZone direction={focusDirection} {...svgFocusZoneProps}>\n          <svg\n            width={svgDimensions.width}\n            height={svgDimensions.height}\n            aria-label={this.props.chartTitle}\n            style={{ display: 'block' }}\n            {...svgProps}\n          >\n            <g\n              ref={(e: SVGElement | null) => {\n                this.xAxisElement = e;\n              }}\n              id={`xAxisGElement${this.idForGraph}`}\n              // To add wrap of x axis lables feature, need to remove word height from svg height.\n              transform={`translate(0, ${\n                svgDimensions.height - this.margins.bottom! - this.state._removalValueForTextTuncate!\n              })`}\n              className={this._classNames.xAxis}\n            />\n            <g\n              ref={(e: SVGElement | null) => {\n                this.yAxisElement = e;\n              }}\n              id={`yAxisGElement${this.idForGraph}`}\n              transform={`translate(${\n                this._isRtl ? svgDimensions.width - this.margins.right! : this.margins.left!\n              }, 0)`}\n              className={this._classNames.yAxis}\n            />\n            {children}\n          </svg>\n        </FocusZone>\n        {!this.props.hideLegend && (\n          <div ref={(e: HTMLDivElement) => (this.legendContainer = e)} className={this._classNames.legendContainer}>\n            {this.props.legendBars}\n          </div>\n        )}\n        {/** The callout is used for narration, so keep it mounted on the DOM */}\n        <Callout\n          hidden={!(!this.props.hideTooltip && calloutProps!.isCalloutVisible)}\n          /** Keep the callout updated with details of focused/hovered chart element */\n          shouldUpdateWhenHidden={true}\n          {...calloutProps}\n        >\n          {/** Given custom callout, then it will render */}\n          {this.props.customizedCallout && this.props.customizedCallout}\n          {/** single x point its corresponding y points of all the bars/lines in chart will render in callout */}\n          {!this.props.customizedCallout && this.props.isCalloutForStack && this._multiValueCallout(calloutProps)}\n          {/** single x point its corresponding y point of single line/bar in the chart will render in callout */}\n          {!this.props.customizedCallout && !this.props.isCalloutForStack && (\n            <ChartHoverCard\n              XValue={calloutProps.XValue}\n              Legend={calloutProps.legend!}\n              YValue={calloutProps.YValue!}\n              color={calloutProps.color!}\n              culture={this.props.culture}\n              {...chartHoverProps}\n            />\n          )}\n        </Callout>\n      </div>\n    );\n  }\n\n  // TO DO: Write a common functional component for Multi value callout and divide sub count method\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _multiValueCallout = (calloutProps: any) => {\n    const yValueHoverSubCountsExists: boolean = this._yValueHoverSubCountsExists(calloutProps.YValueHover);\n    return (\n      <div className={this._classNames.calloutContentRoot}>\n        <div\n          className={this._classNames.calloutDateTimeContainer}\n          style={yValueHoverSubCountsExists ? { marginBottom: '11px' } : {}}\n        >\n          <div\n            className={this._classNames.calloutContentX}\n            {...getAccessibleDataObject(calloutProps!.xAxisCalloutAccessibilityData, 'text', false)}\n          >\n            {convertToLocaleString(calloutProps!.hoverXValue, this.props.culture)}\n          </div>\n        </div>\n        <div\n          className={this._classNames.calloutInfoContainer}\n          style={yValueHoverSubCountsExists ? { display: 'flex' } : {}}\n        >\n          {calloutProps!.YValueHover &&\n            calloutProps!.YValueHover.map((yValue: IYValueHover, index: number, yValues: IYValueHover[]) => {\n              const isLast: boolean = index + 1 === yValues.length;\n              const { shouldDrawBorderBottom = false } = yValue;\n              return (\n                <div\n                  {...getAccessibleDataObject(yValue.callOutAccessibilityData, 'text', false)}\n                  key={`callout-content-${index}`}\n                  style={\n                    yValueHoverSubCountsExists\n                      ? {\n                          display: 'inline-block',\n                          ...(shouldDrawBorderBottom && {\n                            borderBottom: `1px solid ${this.props.theme!.semanticColors.menuDivider}`,\n                            paddingBottom: '10px',\n                          }),\n                        }\n                      : {\n                          ...(shouldDrawBorderBottom && {\n                            borderBottom: `1px solid ${this.props.theme!.semanticColors.menuDivider}`,\n                            paddingBottom: '10px',\n                          }),\n                        }\n                  }\n                >\n                  {this._getCalloutContent(yValue, index, yValueHoverSubCountsExists, isLast)}\n                </div>\n              );\n            })}\n          {!!calloutProps.descriptionMessage && (\n            <div className={this._classNames.descriptionMessage}>{calloutProps.descriptionMessage}</div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  private _yValueHoverSubCountsExists(yValueHover?: IYValueHover[]) {\n    if (yValueHover) {\n      return yValueHover.some(\n        (yValue: {\n          legend?: string;\n          y?: number;\n          color?: string;\n          yAxisCalloutData?: string | { [id: string]: number };\n        }) => yValue.yAxisCalloutData && typeof yValue.yAxisCalloutData !== 'string',\n      );\n    }\n    return false;\n  }\n\n  private _getCalloutContent(\n    xValue: IYValueHover,\n    index: number,\n    yValueHoverSubCountsExists: boolean,\n    isLast: boolean,\n  ): React.ReactNode {\n    const marginStyle: React.CSSProperties = isLast ? {} : { marginRight: '16px' };\n    const toDrawShape = xValue.index !== undefined && xValue.index !== -1;\n    const _classNames = getClassNames(this.props.styles!, {\n      theme: this.props.theme!,\n      width: this.state._width,\n      height: this.state._height,\n      className: this.props.className,\n      isRtl: this._isRtl,\n      lineColor: xValue.color,\n      toDrawShape,\n    });\n\n    const { culture } = this.props;\n    const yValue = convertToLocaleString(xValue.y, culture);\n    if (!xValue.yAxisCalloutData || typeof xValue.yAxisCalloutData === 'string') {\n      return (\n        <div style={yValueHoverSubCountsExists ? marginStyle : {}}>\n          {yValueHoverSubCountsExists && (\n            <div className=\"ms-fontWeight-semibold\" style={{ fontSize: '12pt' }}>\n              {xValue.legend!} ({yValue})\n            </div>\n          )}\n          <div id={`${index}_${xValue.y}`} className={_classNames.calloutBlockContainer}>\n            {toDrawShape && (\n              <Shape\n                svgProps={{\n                  className: _classNames.shapeStyles,\n                }}\n                pathProps={{ fill: xValue.color }}\n                shape={Points[xValue.index! % Object.keys(pointTypes).length] as LegendShape}\n              />\n            )}\n            <div>\n              <div className={_classNames.calloutlegendText}> {xValue.legend}</div>\n              <div className={_classNames.calloutContentY}>\n                {convertToLocaleString(\n                  xValue.yAxisCalloutData ? xValue.yAxisCalloutData : xValue.y || xValue.data,\n                  culture,\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      const subcounts: { [id: string]: number } = xValue.yAxisCalloutData as { [id: string]: number };\n      return (\n        <div style={marginStyle}>\n          <div className=\"ms-fontWeight-semibold\" style={{ fontSize: '12pt' }}>\n            {xValue.legend!} ({yValue})\n          </div>\n          {Object.keys(subcounts).map((subcountName: string) => {\n            return (\n              <div key={subcountName} className={_classNames.calloutBlockContainer}>\n                <div className={_classNames.calloutlegendText}> {convertToLocaleString(subcountName, culture)}</div>\n                <div className={_classNames.calloutContentY}>\n                  {convertToLocaleString(subcounts[subcountName], culture)}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  }\n\n  /**\n   * When screen resizes, along with screen, chart also auto adjusted.\n   * This method used to adjust height and width of the charts.\n   */\n  private _fitParentContainer(): void {\n    const { containerWidth, containerHeight } = this.state;\n    this._reqID = requestAnimationFrame(() => {\n      let legendContainerHeight;\n      if (this.props.hideLegend) {\n        // If there is no legend, need not to allocate some space from total chart space.\n        legendContainerHeight = 0;\n      } else {\n        const legendContainerComputedStyles = this.legendContainer && getComputedStyle(this.legendContainer);\n        legendContainerHeight =\n          ((this.legendContainer && this.legendContainer.getBoundingClientRect().height) ||\n            this.minLegendContainerHeight) +\n          parseFloat((legendContainerComputedStyles && legendContainerComputedStyles.marginTop) || '0') +\n          parseFloat((legendContainerComputedStyles && legendContainerComputedStyles.marginBottom) || '0');\n      }\n      if (this.props.parentRef || this.chartContainer) {\n        const container = this.props.parentRef ? this.props.parentRef : this.chartContainer;\n        const currentContainerWidth = container.getBoundingClientRect().width;\n        const currentContainerHeight =\n          container.getBoundingClientRect().height > legendContainerHeight\n            ? container.getBoundingClientRect().height\n            : 350;\n        const shouldResize =\n          containerWidth !== currentContainerWidth ||\n          containerHeight !== currentContainerHeight - legendContainerHeight;\n        if (shouldResize) {\n          this.setState({\n            containerWidth: currentContainerWidth,\n            containerHeight: currentContainerHeight - legendContainerHeight,\n          });\n        }\n      }\n    });\n  }\n\n  // Call back to the chart.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _getData = (xScale: any, yScale: any) => {\n    this.props.getGraphData &&\n      this.props.getGraphData(\n        xScale,\n        yScale,\n        this.state.containerHeight - this.state._removalValueForTextTuncate!,\n        this.state.containerWidth,\n        this.xAxisElement,\n      );\n  };\n}\n"]}