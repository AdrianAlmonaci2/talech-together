define(["require", "exports", "tslib", "@fluentui/react/lib/Styling"], function (require, exports, tslib_1, Styling_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getMultiStackedBarChartStyles = void 0;
    var getMultiStackedBarChartStyles = function (props) {
        var className = props.className, width = props.width, barHeight = props.barHeight, shouldHighlight = props.shouldHighlight, theme = props.theme, href = props.href;
        return {
            root: [
                theme.fonts.medium,
                'ms-StackedBarChart',
                {
                    display: 'flex',
                    flexDirection: 'column',
                    width: width ? width : '100%',
                },
                className,
            ],
            items: {
                marginBottom: '11px',
            },
            chart: {
                width: '100%',
                height: barHeight ? barHeight : 12,
                display: 'block',
            },
            chartTitle: tslib_1.__assign(tslib_1.__assign({}, theme.fonts.small), { display: 'flex', justifyContent: 'space-between' }),
            chartTitleLeft: {
                textOverflow: 'ellipsis',
                overflow: 'hidden',
                whiteSpace: 'nowrap',
                display: 'block',
                color: '#171717',
                marginBottom: '5px',
            },
            singleChartRoot: {
                width: width ? width : '100%',
                display: 'flex',
                flexDirection: 'column',
                marginBottom: '10px',
            },
            opacityChangeOnHover: {
                opacity: shouldHighlight ? '' : '0.1',
                cursor: href ? 'pointer' : 'default',
                stroke: theme.palette.white,
                strokeWidth: 2,
                selectors: {
                    '&:focus': {
                        stroke: theme.palette.black,
                        strokeWidth: '2px',
                    },
                },
            },
            ratioNumerator: {
                fontSize: Styling_1.FontSizes.medium,
                fontWeight: Styling_1.FontWeights.semibold,
                color: theme.palette.neutralPrimary,
            },
            ratioDenominator: {
                fontSize: Styling_1.FontSizes.medium,
                color: theme.palette.neutralPrimary,
            },
            placeHolderOnHover: {
                opacity: shouldHighlight ? '' : '0.1',
                cursor: 'default',
                stroke: theme.palette.white,
                strokeWidth: '2',
                selectors: {
                    '&:focus': {
                        stroke: theme.palette.black,
                        strokeWidth: '2px',
                    },
                },
            },
            legendContainer: {
                margin: '5px 0px 0px 4px',
            },
            noData: {
                cursor: href ? 'pointer' : 'default',
            },
        };
    };
    exports.getMultiStackedBarChartStyles = getMultiStackedBarChartStyles;
});
//# sourceMappingURL=MultiStackedBarChart.styles.js.map