{"version":3,"file":"shape.js","sourceRoot":"../src/","sources":["components/Legends/shape.tsx"],"names":[],"mappings":";;;;;IAeA,IAAM,SAAS;QACb,GAAC,KAAG,kBAAM,CAAC,kBAAM,CAAC,MAAM,CAAG,IAAG,6CAA6C;QAC3E,GAAC,KAAG,kBAAM,CAAC,kBAAM,CAAC,MAAM,CAAG,IAAG,iCAAiC;QAC/D,GAAC,KAAG,kBAAM,CAAC,kBAAM,CAAC,QAAQ,CAAG,IAAG,2CAA2C;QAC3E,GAAC,KAAG,kBAAM,CAAC,kBAAM,CAAC,OAAO,CAAG,IAAG,2CAA2C;QAC1E,GAAC,KAAG,kBAAM,CAAC,kBAAM,CAAC,OAAO,CAAG,IAAG,iCAAiC;QAChE,GAAC,KAAG,kBAAM,CAAC,kBAAM,CAAC,OAAO,CAAG,IAAG,6BAA6B;QAC5D,GAAC,KAAG,kBAAM,CAAC,kBAAM,CAAC,QAAQ,CAAG,IAAG,+DAA+D;QAC/F,GAAC,KACC,kBAAM,CAAC,kBAAM,CAAC,OAAO,CACrB,IAAG,uFAAuF;QAC5F,GAAC,KAAG,wBAAY,CAAC,wBAAY,CAAC,UAAU,CAAG,IAAG,2BAA2B;WAC1E,CAAC;IAEK,IAAM,KAAK,GAA0B,UAAC,EAAkD;YAAhD,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,KAAK,WAAA,EAAE,kBAAkB,wBAAA;QAC3F,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;YAChD,OAAO,6BAAK,SAAS,EAAE,kBAAkB,GAAI,CAAC;SAC/C;QACD,OAAO,CACL,8CACE,KAAK,EAAE,EAAE,EACT,MAAM,EAAE,EAAE,EACV,OAAO,EAAE,aAAa,IAClB,QAAQ,IACZ,SAAS,EAAE,aAAU,KAAK,KAAK,kBAAM,CAAC,kBAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,kBAAM,CAAC,kBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,aAAS;YAEjH,+CAAM,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,IAAM,SAAS,EAAI,CACxC,CACP,CAAC;IACJ,CAAC,CAAC;IAfW,QAAA,KAAK,SAehB","sourcesContent":["import * as React from 'react';\nimport { LegendShape } from './Legends.types';\nimport { CustomPoints, Points } from '../../utilities/utilities';\n\nexport interface IShapeProps {\n  svgProps: React.SVGAttributes<SVGElement>;\n  pathProps: React.SVGAttributes<SVGPathElement>;\n  shape: LegendShape;\n  classNameForNonSvg?: string;\n}\n\ntype PointPathType = {\n  [key: string]: string;\n};\n\nconst pointPath: PointPathType = {\n  [`${Points[Points.circle]}`]: 'M1 6 A5 5 0 1 0  12 6 M1 6 A5 5 0 0 1  12 6',\n  [`${Points[Points.square]}`]: 'M1 1 L12 1 L12 12  L1 12 L1 1 Z',\n  [`${Points[Points.triangle]}`]: 'M6 10L8.74228e-07 -1.04907e-06L12 0L6 10Z',\n  [`${Points[Points.pyramid]}`]: 'M6 10L8.74228e-07 -1.04907e-06L12 0L6 10Z',\n  [`${Points[Points.diamond]}`]: 'M2 2 L10 2 L10 10  L2 10 L2 2 Z',\n  [`${Points[Points.hexagon]}`]: 'M9 0H3L0 5L3 10H9L12 5L9 0Z',\n  [`${Points[Points.pentagon]}`]: 'M6.06061 0L0 4.21277L2.30303 11H9.69697L12 4.21277L6.06061 0Z',\n  [`${\n    Points[Points.octagon]\n  }`]: 'M7.08333 0H2.91667L0 2.91667V7.08333L2.91667 10H7.08333L10 7.08333V2.91667L7.08333 0Z',\n  [`${CustomPoints[CustomPoints.dottedLine]}`]: 'M0 6 H3 M5 6 H8 M10 6 H13',\n};\n\nexport const Shape: React.FC<IShapeProps> = ({ svgProps, pathProps, shape, classNameForNonSvg }) => {\n  if (Object.keys(pointPath).indexOf(shape) === -1) {\n    return <div className={classNameForNonSvg} />;\n  }\n  return (\n    <svg\n      width={14}\n      height={14}\n      viewBox={'-1 -1 14 14'}\n      {...svgProps}\n      transform={`rotate(${shape === Points[Points.diamond] ? 45 : shape === Points[Points.triangle] ? 180 : 0}, 0, 0)`}\n    >\n      <path d={pointPath[shape]} {...pathProps} />\n    </svg>\n  );\n};\n"]}