{"version":3,"file":"PieChart.types.js","sourceRoot":"../src/","sources":["components/PieChart/PieChart.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ITheme, IStyle } from '@fluentui/react/lib/Styling';\nimport { IStyleFunctionOrObject } from '@fluentui/react/lib/Utilities';\nimport { IDataPoint } from '../../types/IDataPoint';\nexport type { IDataPoint } from '../../types/IDataPoint';\nexport interface IPieChart {}\n\nexport interface IPieChartProps {\n  /**\n   * Data to render in the chart.\n   */\n  data?: IDataPoint[];\n\n  /**\n   * Width of the chart.\n   */\n  width?: number;\n\n  /**\n   * Height of the chart.\n   */\n  height?: number;\n\n  /**\n   * colors to render in the chart.\n   */\n  colors?: string[];\n\n  /**\n   * Title to apply to the whole chart.\n   */\n  chartTitle?: string;\n\n  /**\n   * Additional CSS class(es) to apply to the PieChart.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IPieChartStyleProps, IPieChartStyles>;\n\n  /**\n   * Width of line stroke\n   */\n  strokeWidth?: number;\n\n  /**\n   * The prop used to define the culture to localized the numbers\n   */\n  culture?: string;\n}\n\nexport type IPieChartStyleProps = Required<Pick<IPieChartProps, 'theme' | 'width' | 'height'>> &\n  Pick<IPieChartProps, 'className'>;\nexport interface IPieChartStyles {\n  /**\n   *  Style for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   * Style for the chart.\n   */\n  chart?: IStyle;\n\n  /**\n   * Style for the chart Title.\n   */\n  chartTitle?: IStyle;\n}\n"]}